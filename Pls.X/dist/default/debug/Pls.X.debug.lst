

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec 04 22:05:13 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 17/10/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4321 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F80                     PORTA           equ	3968	;# 
   114   000F81                     PORTB           equ	3969	;# 
   115   000F82                     PORTC           equ	3970	;# 
   116   000F83                     PORTD           equ	3971	;# 
   117   000F84                     PORTE           equ	3972	;# 
   118   000F89                     LATA            equ	3977	;# 
   119   000F8A                     LATB            equ	3978	;# 
   120   000F8B                     LATC            equ	3979	;# 
   121   000F8C                     LATD            equ	3980	;# 
   122   000F8D                     LATE            equ	3981	;# 
   123   000F92                     TRISA           equ	3986	;# 
   124   000F92                     DDRA            equ	3986	;# 
   125   000F93                     TRISB           equ	3987	;# 
   126   000F93                     DDRB            equ	3987	;# 
   127   000F94                     TRISC           equ	3988	;# 
   128   000F94                     DDRC            equ	3988	;# 
   129   000F95                     TRISD           equ	3989	;# 
   130   000F95                     DDRD            equ	3989	;# 
   131   000F96                     TRISE           equ	3990	;# 
   132   000F96                     DDRE            equ	3990	;# 
   133   000F9B                     OSCTUNE         equ	3995	;# 
   134   000F9D                     PIE1            equ	3997	;# 
   135   000F9E                     PIR1            equ	3998	;# 
   136   000F9F                     IPR1            equ	3999	;# 
   137   000FA0                     PIE2            equ	4000	;# 
   138   000FA1                     PIR2            equ	4001	;# 
   139   000FA2                     IPR2            equ	4002	;# 
   140   000FA6                     EECON1          equ	4006	;# 
   141   000FA7                     EECON2          equ	4007	;# 
   142   000FA8                     EEDATA          equ	4008	;# 
   143   000FA9                     EEADR           equ	4009	;# 
   144   000FAB                     RCSTA           equ	4011	;# 
   145   000FAB                     RCSTA1          equ	4011	;# 
   146   000FAC                     TXSTA           equ	4012	;# 
   147   000FAC                     TXSTA1          equ	4012	;# 
   148   000FAD                     TXREG           equ	4013	;# 
   149   000FAD                     TXREG1          equ	4013	;# 
   150   000FAE                     RCREG           equ	4014	;# 
   151   000FAE                     RCREG1          equ	4014	;# 
   152   000FAF                     SPBRG           equ	4015	;# 
   153   000FAF                     SPBRG1          equ	4015	;# 
   154   000FB0                     SPBRGH          equ	4016	;# 
   155   000FB1                     T3CON           equ	4017	;# 
   156   000FB2                     TMR3            equ	4018	;# 
   157   000FB2                     TMR3L           equ	4018	;# 
   158   000FB3                     TMR3H           equ	4019	;# 
   159   000FB4                     CMCON           equ	4020	;# 
   160   000FB5                     CVRCON          equ	4021	;# 
   161   000FB6                     ECCP1AS         equ	4022	;# 
   162   000FB7                     ECCP1DEL        equ	4023	;# 
   163   000FB7                     PWM1CON         equ	4023	;# 
   164   000FB8                     BAUDCON         equ	4024	;# 
   165   000FB8                     BAUDCTL         equ	4024	;# 
   166   000FBA                     CCP2CON         equ	4026	;# 
   167   000FBB                     CCPR2           equ	4027	;# 
   168   000FBB                     CCPR2L          equ	4027	;# 
   169   000FBC                     CCPR2H          equ	4028	;# 
   170   000FBD                     CCP1CON         equ	4029	;# 
   171   000FBD                     ECCP1CON        equ	4029	;# 
   172   000FBE                     CCPR1           equ	4030	;# 
   173   000FBE                     CCPR1L          equ	4030	;# 
   174   000FBF                     CCPR1H          equ	4031	;# 
   175   000FC0                     ADCON2          equ	4032	;# 
   176   000FC1                     ADCON1          equ	4033	;# 
   177   000FC2                     ADCON0          equ	4034	;# 
   178   000FC3                     ADRES           equ	4035	;# 
   179   000FC3                     ADRESL          equ	4035	;# 
   180   000FC4                     ADRESH          equ	4036	;# 
   181   000FC5                     SSPCON2         equ	4037	;# 
   182   000FC6                     SSPCON1         equ	4038	;# 
   183   000FC7                     SSPSTAT         equ	4039	;# 
   184   000FC8                     SSPADD          equ	4040	;# 
   185   000FC9                     SSPBUF          equ	4041	;# 
   186   000FCA                     T2CON           equ	4042	;# 
   187   000FCB                     PR2             equ	4043	;# 
   188   000FCB                     MEMCON          equ	4043	;# 
   189   000FCC                     TMR2            equ	4044	;# 
   190   000FCD                     T1CON           equ	4045	;# 
   191   000FCE                     TMR1            equ	4046	;# 
   192   000FCE                     TMR1L           equ	4046	;# 
   193   000FCF                     TMR1H           equ	4047	;# 
   194   000FD0                     RCON            equ	4048	;# 
   195   000FD1                     WDTCON          equ	4049	;# 
   196   000FD2                     HLVDCON         equ	4050	;# 
   197   000FD2                     LVDCON          equ	4050	;# 
   198   000FD3                     OSCCON          equ	4051	;# 
   199   000FD5                     T0CON           equ	4053	;# 
   200   000FD6                     TMR0            equ	4054	;# 
   201   000FD6                     TMR0L           equ	4054	;# 
   202   000FD7                     TMR0H           equ	4055	;# 
   203   000FD8                     STATUS          equ	4056	;# 
   204   000FD9                     FSR2            equ	4057	;# 
   205   000FD9                     FSR2L           equ	4057	;# 
   206   000FDA                     FSR2H           equ	4058	;# 
   207   000FDB                     PLUSW2          equ	4059	;# 
   208   000FDC                     PREINC2         equ	4060	;# 
   209   000FDD                     POSTDEC2        equ	4061	;# 
   210   000FDE                     POSTINC2        equ	4062	;# 
   211   000FDF                     INDF2           equ	4063	;# 
   212   000FE0                     BSR             equ	4064	;# 
   213   000FE1                     FSR1            equ	4065	;# 
   214   000FE1                     FSR1L           equ	4065	;# 
   215   000FE2                     FSR1H           equ	4066	;# 
   216   000FE3                     PLUSW1          equ	4067	;# 
   217   000FE4                     PREINC1         equ	4068	;# 
   218   000FE5                     POSTDEC1        equ	4069	;# 
   219   000FE6                     POSTINC1        equ	4070	;# 
   220   000FE7                     INDF1           equ	4071	;# 
   221   000FE8                     WREG            equ	4072	;# 
   222   000FE9                     FSR0            equ	4073	;# 
   223   000FE9                     FSR0L           equ	4073	;# 
   224   000FEA                     FSR0H           equ	4074	;# 
   225   000FEB                     PLUSW0          equ	4075	;# 
   226   000FEC                     PREINC0         equ	4076	;# 
   227   000FED                     POSTDEC0        equ	4077	;# 
   228   000FEE                     POSTINC0        equ	4078	;# 
   229   000FEF                     INDF0           equ	4079	;# 
   230   000FF0                     INTCON3         equ	4080	;# 
   231   000FF1                     INTCON2         equ	4081	;# 
   232   000FF2                     INTCON          equ	4082	;# 
   233   000FF3                     PROD            equ	4083	;# 
   234   000FF3                     PRODL           equ	4083	;# 
   235   000FF4                     PRODH           equ	4084	;# 
   236   000FF5                     TABLAT          equ	4085	;# 
   237   000FF6                     TBLPTR          equ	4086	;# 
   238   000FF6                     TBLPTRL         equ	4086	;# 
   239   000FF7                     TBLPTRH         equ	4087	;# 
   240   000FF8                     TBLPTRU         equ	4088	;# 
   241   000FF9                     PCLAT           equ	4089	;# 
   242   000FF9                     PC              equ	4089	;# 
   243   000FF9                     PCL             equ	4089	;# 
   244   000FFA                     PCLATH          equ	4090	;# 
   245   000FFB                     PCLATU          equ	4091	;# 
   246   000FFC                     STKPTR          equ	4092	;# 
   247   000FFD                     TOS             equ	4093	;# 
   248   000FFD                     TOSL            equ	4093	;# 
   249   000FFE                     TOSH            equ	4094	;# 
   250   000FFF                     TOSU            equ	4095	;# 
   251   000F80                     PORTA           equ	3968	;# 
   252   000F81                     PORTB           equ	3969	;# 
   253   000F82                     PORTC           equ	3970	;# 
   254   000F83                     PORTD           equ	3971	;# 
   255   000F84                     PORTE           equ	3972	;# 
   256   000F89                     LATA            equ	3977	;# 
   257   000F8A                     LATB            equ	3978	;# 
   258   000F8B                     LATC            equ	3979	;# 
   259   000F8C                     LATD            equ	3980	;# 
   260   000F8D                     LATE            equ	3981	;# 
   261   000F92                     TRISA           equ	3986	;# 
   262   000F92                     DDRA            equ	3986	;# 
   263   000F93                     TRISB           equ	3987	;# 
   264   000F93                     DDRB            equ	3987	;# 
   265   000F94                     TRISC           equ	3988	;# 
   266   000F94                     DDRC            equ	3988	;# 
   267   000F95                     TRISD           equ	3989	;# 
   268   000F95                     DDRD            equ	3989	;# 
   269   000F96                     TRISE           equ	3990	;# 
   270   000F96                     DDRE            equ	3990	;# 
   271   000F9B                     OSCTUNE         equ	3995	;# 
   272   000F9D                     PIE1            equ	3997	;# 
   273   000F9E                     PIR1            equ	3998	;# 
   274   000F9F                     IPR1            equ	3999	;# 
   275   000FA0                     PIE2            equ	4000	;# 
   276   000FA1                     PIR2            equ	4001	;# 
   277   000FA2                     IPR2            equ	4002	;# 
   278   000FA6                     EECON1          equ	4006	;# 
   279   000FA7                     EECON2          equ	4007	;# 
   280   000FA8                     EEDATA          equ	4008	;# 
   281   000FA9                     EEADR           equ	4009	;# 
   282   000FAB                     RCSTA           equ	4011	;# 
   283   000FAB                     RCSTA1          equ	4011	;# 
   284   000FAC                     TXSTA           equ	4012	;# 
   285   000FAC                     TXSTA1          equ	4012	;# 
   286   000FAD                     TXREG           equ	4013	;# 
   287   000FAD                     TXREG1          equ	4013	;# 
   288   000FAE                     RCREG           equ	4014	;# 
   289   000FAE                     RCREG1          equ	4014	;# 
   290   000FAF                     SPBRG           equ	4015	;# 
   291   000FAF                     SPBRG1          equ	4015	;# 
   292   000FB0                     SPBRGH          equ	4016	;# 
   293   000FB1                     T3CON           equ	4017	;# 
   294   000FB2                     TMR3            equ	4018	;# 
   295   000FB2                     TMR3L           equ	4018	;# 
   296   000FB3                     TMR3H           equ	4019	;# 
   297   000FB4                     CMCON           equ	4020	;# 
   298   000FB5                     CVRCON          equ	4021	;# 
   299   000FB6                     ECCP1AS         equ	4022	;# 
   300   000FB7                     ECCP1DEL        equ	4023	;# 
   301   000FB7                     PWM1CON         equ	4023	;# 
   302   000FB8                     BAUDCON         equ	4024	;# 
   303   000FB8                     BAUDCTL         equ	4024	;# 
   304   000FBA                     CCP2CON         equ	4026	;# 
   305   000FBB                     CCPR2           equ	4027	;# 
   306   000FBB                     CCPR2L          equ	4027	;# 
   307   000FBC                     CCPR2H          equ	4028	;# 
   308   000FBD                     CCP1CON         equ	4029	;# 
   309   000FBD                     ECCP1CON        equ	4029	;# 
   310   000FBE                     CCPR1           equ	4030	;# 
   311   000FBE                     CCPR1L          equ	4030	;# 
   312   000FBF                     CCPR1H          equ	4031	;# 
   313   000FC0                     ADCON2          equ	4032	;# 
   314   000FC1                     ADCON1          equ	4033	;# 
   315   000FC2                     ADCON0          equ	4034	;# 
   316   000FC3                     ADRES           equ	4035	;# 
   317   000FC3                     ADRESL          equ	4035	;# 
   318   000FC4                     ADRESH          equ	4036	;# 
   319   000FC5                     SSPCON2         equ	4037	;# 
   320   000FC6                     SSPCON1         equ	4038	;# 
   321   000FC7                     SSPSTAT         equ	4039	;# 
   322   000FC8                     SSPADD          equ	4040	;# 
   323   000FC9                     SSPBUF          equ	4041	;# 
   324   000FCA                     T2CON           equ	4042	;# 
   325   000FCB                     PR2             equ	4043	;# 
   326   000FCB                     MEMCON          equ	4043	;# 
   327   000FCC                     TMR2            equ	4044	;# 
   328   000FCD                     T1CON           equ	4045	;# 
   329   000FCE                     TMR1            equ	4046	;# 
   330   000FCE                     TMR1L           equ	4046	;# 
   331   000FCF                     TMR1H           equ	4047	;# 
   332   000FD0                     RCON            equ	4048	;# 
   333   000FD1                     WDTCON          equ	4049	;# 
   334   000FD2                     HLVDCON         equ	4050	;# 
   335   000FD2                     LVDCON          equ	4050	;# 
   336   000FD3                     OSCCON          equ	4051	;# 
   337   000FD5                     T0CON           equ	4053	;# 
   338   000FD6                     TMR0            equ	4054	;# 
   339   000FD6                     TMR0L           equ	4054	;# 
   340   000FD7                     TMR0H           equ	4055	;# 
   341   000FD8                     STATUS          equ	4056	;# 
   342   000FD9                     FSR2            equ	4057	;# 
   343   000FD9                     FSR2L           equ	4057	;# 
   344   000FDA                     FSR2H           equ	4058	;# 
   345   000FDB                     PLUSW2          equ	4059	;# 
   346   000FDC                     PREINC2         equ	4060	;# 
   347   000FDD                     POSTDEC2        equ	4061	;# 
   348   000FDE                     POSTINC2        equ	4062	;# 
   349   000FDF                     INDF2           equ	4063	;# 
   350   000FE0                     BSR             equ	4064	;# 
   351   000FE1                     FSR1            equ	4065	;# 
   352   000FE1                     FSR1L           equ	4065	;# 
   353   000FE2                     FSR1H           equ	4066	;# 
   354   000FE3                     PLUSW1          equ	4067	;# 
   355   000FE4                     PREINC1         equ	4068	;# 
   356   000FE5                     POSTDEC1        equ	4069	;# 
   357   000FE6                     POSTINC1        equ	4070	;# 
   358   000FE7                     INDF1           equ	4071	;# 
   359   000FE8                     WREG            equ	4072	;# 
   360   000FE9                     FSR0            equ	4073	;# 
   361   000FE9                     FSR0L           equ	4073	;# 
   362   000FEA                     FSR0H           equ	4074	;# 
   363   000FEB                     PLUSW0          equ	4075	;# 
   364   000FEC                     PREINC0         equ	4076	;# 
   365   000FED                     POSTDEC0        equ	4077	;# 
   366   000FEE                     POSTINC0        equ	4078	;# 
   367   000FEF                     INDF0           equ	4079	;# 
   368   000FF0                     INTCON3         equ	4080	;# 
   369   000FF1                     INTCON2         equ	4081	;# 
   370   000FF2                     INTCON          equ	4082	;# 
   371   000FF3                     PROD            equ	4083	;# 
   372   000FF3                     PRODL           equ	4083	;# 
   373   000FF4                     PRODH           equ	4084	;# 
   374   000FF5                     TABLAT          equ	4085	;# 
   375   000FF6                     TBLPTR          equ	4086	;# 
   376   000FF6                     TBLPTRL         equ	4086	;# 
   377   000FF7                     TBLPTRH         equ	4087	;# 
   378   000FF8                     TBLPTRU         equ	4088	;# 
   379   000FF9                     PCLAT           equ	4089	;# 
   380   000FF9                     PC              equ	4089	;# 
   381   000FF9                     PCL             equ	4089	;# 
   382   000FFA                     PCLATH          equ	4090	;# 
   383   000FFB                     PCLATU          equ	4091	;# 
   384   000FFC                     STKPTR          equ	4092	;# 
   385   000FFD                     TOS             equ	4093	;# 
   386   000FFD                     TOSL            equ	4093	;# 
   387   000FFE                     TOSH            equ	4094	;# 
   388   000FFF                     TOSU            equ	4095	;# 
   389                           
   390                           	psect	idataCOMRAM
   391   000C87                     __pidataCOMRAM:
   392                           	callstack 0
   393                           
   394                           ;initializer for _mainMenu
   395   000C87  01                 	db	1
   396                           
   397                           ;initializer for _LCDStore3
   398   000C88  20                 	db	32
   399   000C89  20                 	db	32
   400   000C8A  20                 	db	32
   401   000C8B  20                 	db	32
   402   000C8C  20                 	db	32
   403   000C8D  20                 	db	32
   404   000C8E  20                 	db	32
   405   000C8F  20                 	db	32
   406   000C90  20                 	db	32
   407   000C91  20                 	db	32
   408   000C92  20                 	db	32
   409   000C93  20                 	db	32
   410   000C94  20                 	db	32
   411   000C95  20                 	db	32
   412   000C96  20                 	db	32
   413   000C97  20                 	db	32
   414   000C98  00                 	db	0
   415                           
   416                           ;initializer for _LCDStore2
   417   000C99  20                 	db	32
   418   000C9A  20                 	db	32
   419   000C9B  20                 	db	32
   420   000C9C  20                 	db	32
   421   000C9D  20                 	db	32
   422   000C9E  20                 	db	32
   423   000C9F  20                 	db	32
   424   000CA0  20                 	db	32
   425   000CA1  20                 	db	32
   426   000CA2  20                 	db	32
   427   000CA3  20                 	db	32
   428   000CA4  20                 	db	32
   429   000CA5  20                 	db	32
   430   000CA6  20                 	db	32
   431   000CA7  20                 	db	32
   432   000CA8  20                 	db	32
   433   000CA9  00                 	db	0
   434                           
   435                           ;initializer for _LCDStore1
   436   000CAA  20                 	db	32
   437   000CAB  20                 	db	32
   438   000CAC  20                 	db	32
   439   000CAD  20                 	db	32
   440   000CAE  20                 	db	32
   441   000CAF  20                 	db	32
   442   000CB0  20                 	db	32
   443   000CB1  20                 	db	32
   444   000CB2  20                 	db	32
   445   000CB3  20                 	db	32
   446   000CB4  20                 	db	32
   447   000CB5  20                 	db	32
   448   000CB6  20                 	db	32
   449   000CB7  20                 	db	32
   450   000CB8  20                 	db	32
   451   000CB9  20                 	db	32
   452   000CBA  00                 	db	0
   453                           
   454                           ;initializer for _LCDStore0
   455   000CBB  20                 	db	32
   456   000CBC  20                 	db	32
   457   000CBD  20                 	db	32
   458   000CBE  20                 	db	32
   459   000CBF  20                 	db	32
   460   000CC0  20                 	db	32
   461   000CC1  20                 	db	32
   462   000CC2  20                 	db	32
   463   000CC3  20                 	db	32
   464   000CC4  20                 	db	32
   465   000CC5  20                 	db	32
   466   000CC6  20                 	db	32
   467   000CC7  20                 	db	32
   468   000CC8  20                 	db	32
   469   000CC9  20                 	db	32
   470   000CCA  20                 	db	32
   471   000CCB  00                 	db	0
   472                           
   473                           	psect	idataBANK0
   474   000C43                     __pidataBANK0:
   475                           	callstack 0
   476                           
   477                           ;initializer for _LCDStore7
   478   000C43  20                 	db	32
   479   000C44  20                 	db	32
   480   000C45  20                 	db	32
   481   000C46  20                 	db	32
   482   000C47  20                 	db	32
   483   000C48  20                 	db	32
   484   000C49  20                 	db	32
   485   000C4A  20                 	db	32
   486   000C4B  20                 	db	32
   487   000C4C  20                 	db	32
   488   000C4D  20                 	db	32
   489   000C4E  20                 	db	32
   490   000C4F  20                 	db	32
   491   000C50  20                 	db	32
   492   000C51  20                 	db	32
   493   000C52  20                 	db	32
   494   000C53  00                 	db	0
   495                           
   496                           ;initializer for _LCDStore6
   497   000C54  20                 	db	32
   498   000C55  20                 	db	32
   499   000C56  20                 	db	32
   500   000C57  20                 	db	32
   501   000C58  20                 	db	32
   502   000C59  20                 	db	32
   503   000C5A  20                 	db	32
   504   000C5B  20                 	db	32
   505   000C5C  20                 	db	32
   506   000C5D  20                 	db	32
   507   000C5E  20                 	db	32
   508   000C5F  20                 	db	32
   509   000C60  20                 	db	32
   510   000C61  20                 	db	32
   511   000C62  20                 	db	32
   512   000C63  20                 	db	32
   513   000C64  00                 	db	0
   514                           
   515                           ;initializer for _LCDStore5
   516   000C65  20                 	db	32
   517   000C66  20                 	db	32
   518   000C67  20                 	db	32
   519   000C68  20                 	db	32
   520   000C69  20                 	db	32
   521   000C6A  20                 	db	32
   522   000C6B  20                 	db	32
   523   000C6C  20                 	db	32
   524   000C6D  20                 	db	32
   525   000C6E  20                 	db	32
   526   000C6F  20                 	db	32
   527   000C70  20                 	db	32
   528   000C71  20                 	db	32
   529   000C72  20                 	db	32
   530   000C73  20                 	db	32
   531   000C74  20                 	db	32
   532   000C75  00                 	db	0
   533                           
   534                           ;initializer for _LCDStore4
   535   000C76  20                 	db	32
   536   000C77  20                 	db	32
   537   000C78  20                 	db	32
   538   000C79  20                 	db	32
   539   000C7A  20                 	db	32
   540   000C7B  20                 	db	32
   541   000C7C  20                 	db	32
   542   000C7D  20                 	db	32
   543   000C7E  20                 	db	32
   544   000C7F  20                 	db	32
   545   000C80  20                 	db	32
   546   000C81  20                 	db	32
   547   000C82  20                 	db	32
   548   000C83  20                 	db	32
   549   000C84  20                 	db	32
   550   000C85  20                 	db	32
   551   000C86  00                 	db	0
   552                           
   553                           	psect	mediumconst
   554   001AFA                     __pmediumconst:
   555                           	callstack 0
   556   001AFA  00                 	db	0
   557   001AFB                     _Alpha1:
   558                           	callstack 0
   559   001AFB  00                 	db	0
   560   001AFC  00                 	db	0
   561   001AFD  00                 	db	0
   562   001AFE  00                 	db	0
   563   001AFF  00                 	db	0
   564   001B00  00                 	db	0
   565   001B01  00                 	db	0
   566   001B02  5F                 	db	95
   567   001B03  00                 	db	0
   568   001B04  00                 	db	0
   569   001B05  00                 	db	0
   570   001B06  07                 	db	7
   571   001B07  00                 	db	0
   572   001B08  07                 	db	7
   573   001B09  00                 	db	0
   574   001B0A  14                 	db	20
   575   001B0B  7F                 	db	127
   576   001B0C  14                 	db	20
   577   001B0D  7F                 	db	127
   578   001B0E  14                 	db	20
   579   001B0F  24                 	db	36
   580   001B10  2A                 	db	42
   581   001B11  7F                 	db	127
   582   001B12  2A                 	db	42
   583   001B13  12                 	db	18
   584   001B14  23                 	db	35
   585   001B15  13                 	db	19
   586   001B16  08                 	db	8
   587   001B17  64                 	db	100
   588   001B18  62                 	db	98
   589   001B19  36                 	db	54
   590   001B1A  49                 	db	73
   591   001B1B  55                 	db	85
   592   001B1C  22                 	db	34
   593   001B1D  50                 	db	80
   594   001B1E  00                 	db	0
   595   001B1F  05                 	db	5
   596   001B20  03                 	db	3
   597   001B21  00                 	db	0
   598   001B22  00                 	db	0
   599   001B23  00                 	db	0
   600   001B24  1C                 	db	28
   601   001B25  22                 	db	34
   602   001B26  41                 	db	65
   603   001B27  00                 	db	0
   604   001B28  00                 	db	0
   605   001B29  41                 	db	65
   606   001B2A  22                 	db	34
   607   001B2B  1C                 	db	28
   608   001B2C  00                 	db	0
   609   001B2D  14                 	db	20
   610   001B2E  08                 	db	8
   611   001B2F  3E                 	db	62
   612   001B30  08                 	db	8
   613   001B31  14                 	db	20
   614   001B32  08                 	db	8
   615   001B33  08                 	db	8
   616   001B34  3E                 	db	62
   617   001B35  08                 	db	8
   618   001B36  08                 	db	8
   619   001B37  00                 	db	0
   620   001B38  50                 	db	80
   621   001B39  30                 	db	48
   622   001B3A  00                 	db	0
   623   001B3B  00                 	db	0
   624   001B3C  08                 	db	8
   625   001B3D  08                 	db	8
   626   001B3E  08                 	db	8
   627   001B3F  08                 	db	8
   628   001B40  08                 	db	8
   629   001B41  00                 	db	0
   630   001B42  60                 	db	96
   631   001B43  60                 	db	96
   632   001B44  00                 	db	0
   633   001B45  00                 	db	0
   634   001B46  20                 	db	32
   635   001B47  10                 	db	16
   636   001B48  08                 	db	8
   637   001B49  04                 	db	4
   638   001B4A  02                 	db	2
   639   001B4B  3E                 	db	62
   640   001B4C  51                 	db	81
   641   001B4D  49                 	db	73
   642   001B4E  45                 	db	69
   643   001B4F  3E                 	db	62
   644   001B50  00                 	db	0
   645   001B51  42                 	db	66
   646   001B52  7F                 	db	127
   647   001B53  40                 	db	64
   648   001B54  00                 	db	0
   649   001B55  42                 	db	66
   650   001B56  61                 	db	97
   651   001B57  51                 	db	81
   652   001B58  49                 	db	73
   653   001B59  46                 	db	70
   654   001B5A  21                 	db	33
   655   001B5B  41                 	db	65
   656   001B5C  45                 	db	69
   657   001B5D  4B                 	db	75
   658   001B5E  31                 	db	49
   659   001B5F  18                 	db	24
   660   001B60  14                 	db	20
   661   001B61  12                 	db	18
   662   001B62  7F                 	db	127
   663   001B63  10                 	db	16
   664   001B64  27                 	db	39
   665   001B65  45                 	db	69
   666   001B66  45                 	db	69
   667   001B67  45                 	db	69
   668   001B68  39                 	db	57
   669   001B69  3C                 	db	60
   670   001B6A  4A                 	db	74
   671   001B6B  49                 	db	73
   672   001B6C  49                 	db	73
   673   001B6D  30                 	db	48
   674   001B6E  01                 	db	1
   675   001B6F  71                 	db	113
   676   001B70  09                 	db	9
   677   001B71  05                 	db	5
   678   001B72  03                 	db	3
   679   001B73  36                 	db	54
   680   001B74  49                 	db	73
   681   001B75  49                 	db	73
   682   001B76  49                 	db	73
   683   001B77  36                 	db	54
   684   001B78  06                 	db	6
   685   001B79  49                 	db	73
   686   001B7A  49                 	db	73
   687   001B7B  29                 	db	41
   688   001B7C  1E                 	db	30
   689   001B7D  00                 	db	0
   690   001B7E  36                 	db	54
   691   001B7F  36                 	db	54
   692   001B80  00                 	db	0
   693   001B81  00                 	db	0
   694   001B82  00                 	db	0
   695   001B83  56                 	db	86
   696   001B84  36                 	db	54
   697   001B85  00                 	db	0
   698   001B86  00                 	db	0
   699   001B87  08                 	db	8
   700   001B88  14                 	db	20
   701   001B89  22                 	db	34
   702   001B8A  41                 	db	65
   703   001B8B  00                 	db	0
   704   001B8C  14                 	db	20
   705   001B8D  14                 	db	20
   706   001B8E  14                 	db	20
   707   001B8F  14                 	db	20
   708   001B90  14                 	db	20
   709   001B91  00                 	db	0
   710   001B92  41                 	db	65
   711   001B93  22                 	db	34
   712   001B94  14                 	db	20
   713   001B95  08                 	db	8
   714   001B96  02                 	db	2
   715   001B97  01                 	db	1
   716   001B98  51                 	db	81
   717   001B99  09                 	db	9
   718   001B9A  06                 	db	6
   719   001B9B  32                 	db	50
   720   001B9C  49                 	db	73
   721   001B9D  79                 	db	121
   722   001B9E  41                 	db	65
   723   001B9F  3E                 	db	62
   724   001BA0  7E                 	db	126
   725   001BA1  11                 	db	17
   726   001BA2  11                 	db	17
   727   001BA3  11                 	db	17
   728   001BA4  7E                 	db	126
   729   001BA5  7F                 	db	127
   730   001BA6  49                 	db	73
   731   001BA7  49                 	db	73
   732   001BA8  49                 	db	73
   733   001BA9  36                 	db	54
   734   001BAA  3E                 	db	62
   735   001BAB  41                 	db	65
   736   001BAC  41                 	db	65
   737   001BAD  41                 	db	65
   738   001BAE  22                 	db	34
   739   001BAF  7F                 	db	127
   740   001BB0  41                 	db	65
   741   001BB1  41                 	db	65
   742   001BB2  22                 	db	34
   743   001BB3  1C                 	db	28
   744   001BB4  7F                 	db	127
   745   001BB5  49                 	db	73
   746   001BB6  49                 	db	73
   747   001BB7  49                 	db	73
   748   001BB8  41                 	db	65
   749   001BB9  7F                 	db	127
   750   001BBA  09                 	db	9
   751   001BBB  09                 	db	9
   752   001BBC  09                 	db	9
   753   001BBD  01                 	db	1
   754   001BBE  3E                 	db	62
   755   001BBF  41                 	db	65
   756   001BC0  49                 	db	73
   757   001BC1  49                 	db	73
   758   001BC2  7A                 	db	122
   759   001BC3  7F                 	db	127
   760   001BC4  08                 	db	8
   761   001BC5  08                 	db	8
   762   001BC6  08                 	db	8
   763   001BC7  7F                 	db	127
   764   001BC8  00                 	db	0
   765   001BC9  41                 	db	65
   766   001BCA  7F                 	db	127
   767   001BCB  41                 	db	65
   768   001BCC  00                 	db	0
   769   001BCD  20                 	db	32
   770   001BCE  40                 	db	64
   771   001BCF  41                 	db	65
   772   001BD0  3F                 	db	63
   773   001BD1  01                 	db	1
   774   001BD2  7F                 	db	127
   775   001BD3  08                 	db	8
   776   001BD4  14                 	db	20
   777   001BD5  22                 	db	34
   778   001BD6  41                 	db	65
   779   001BD7  7F                 	db	127
   780   001BD8  40                 	db	64
   781   001BD9  40                 	db	64
   782   001BDA  40                 	db	64
   783   001BDB  40                 	db	64
   784   001BDC  7F                 	db	127
   785   001BDD  02                 	db	2
   786   001BDE  0C                 	db	12
   787   001BDF  02                 	db	2
   788   001BE0  7F                 	db	127
   789   001BE1  7F                 	db	127
   790   001BE2  04                 	db	4
   791   001BE3  08                 	db	8
   792   001BE4  10                 	db	16
   793   001BE5  7F                 	db	127
   794   001BE6  3E                 	db	62
   795   001BE7  41                 	db	65
   796   001BE8  41                 	db	65
   797   001BE9  41                 	db	65
   798   001BEA  3E                 	db	62
   799   001BEB  7F                 	db	127
   800   001BEC  09                 	db	9
   801   001BED  09                 	db	9
   802   001BEE  09                 	db	9
   803   001BEF  06                 	db	6
   804   001BF0  3E                 	db	62
   805   001BF1  41                 	db	65
   806   001BF2  51                 	db	81
   807   001BF3  21                 	db	33
   808   001BF4  5E                 	db	94
   809   001BF5                     __end_of_Alpha1:
   810                           	callstack 0
   811   001BF5                     _Alpha2:
   812                           	callstack 0
   813   001BF5  7F                 	db	127
   814   001BF6  09                 	db	9
   815   001BF7  19                 	db	25
   816   001BF8  29                 	db	41
   817   001BF9  46                 	db	70
   818   001BFA  46                 	db	70
   819   001BFB  49                 	db	73
   820   001BFC  49                 	db	73
   821   001BFD  49                 	db	73
   822   001BFE  31                 	db	49
   823   001BFF  01                 	db	1
   824   001C00  01                 	db	1
   825   001C01  7F                 	db	127
   826   001C02  01                 	db	1
   827   001C03  01                 	db	1
   828   001C04  3F                 	db	63
   829   001C05  40                 	db	64
   830   001C06  40                 	db	64
   831   001C07  40                 	db	64
   832   001C08  3F                 	db	63
   833   001C09  1F                 	db	31
   834   001C0A  20                 	db	32
   835   001C0B  40                 	db	64
   836   001C0C  20                 	db	32
   837   001C0D  1F                 	db	31
   838   001C0E  3F                 	db	63
   839   001C0F  40                 	db	64
   840   001C10  38                 	db	56
   841   001C11  40                 	db	64
   842   001C12  3F                 	db	63
   843   001C13  63                 	db	99
   844   001C14  14                 	db	20
   845   001C15  08                 	db	8
   846   001C16  14                 	db	20
   847   001C17  63                 	db	99
   848   001C18  07                 	db	7
   849   001C19  08                 	db	8
   850   001C1A  70                 	db	112
   851   001C1B  08                 	db	8
   852   001C1C  07                 	db	7
   853   001C1D  61                 	db	97
   854   001C1E  51                 	db	81
   855   001C1F  49                 	db	73
   856   001C20  45                 	db	69
   857   001C21  43                 	db	67
   858   001C22  00                 	db	0
   859   001C23  7F                 	db	127
   860   001C24  41                 	db	65
   861   001C25  41                 	db	65
   862   001C26  00                 	db	0
   863   001C27  02                 	db	2
   864   001C28  04                 	db	4
   865   001C29  08                 	db	8
   866   001C2A  10                 	db	16
   867   001C2B  20                 	db	32
   868   001C2C  00                 	db	0
   869   001C2D  41                 	db	65
   870   001C2E  41                 	db	65
   871   001C2F  7F                 	db	127
   872   001C30  00                 	db	0
   873   001C31  04                 	db	4
   874   001C32  02                 	db	2
   875   001C33  01                 	db	1
   876   001C34  02                 	db	2
   877   001C35  04                 	db	4
   878   001C36  40                 	db	64
   879   001C37  40                 	db	64
   880   001C38  40                 	db	64
   881   001C39  40                 	db	64
   882   001C3A  40                 	db	64
   883   001C3B  00                 	db	0
   884   001C3C  01                 	db	1
   885   001C3D  02                 	db	2
   886   001C3E  04                 	db	4
   887   001C3F  00                 	db	0
   888   001C40  20                 	db	32
   889   001C41  54                 	db	84
   890   001C42  54                 	db	84
   891   001C43  54                 	db	84
   892   001C44  78                 	db	120
   893   001C45  7F                 	db	127
   894   001C46  48                 	db	72
   895   001C47  44                 	db	68
   896   001C48  44                 	db	68
   897   001C49  38                 	db	56
   898   001C4A  38                 	db	56
   899   001C4B  44                 	db	68
   900   001C4C  44                 	db	68
   901   001C4D  44                 	db	68
   902   001C4E  20                 	db	32
   903   001C4F  38                 	db	56
   904   001C50  44                 	db	68
   905   001C51  44                 	db	68
   906   001C52  48                 	db	72
   907   001C53  7F                 	db	127
   908   001C54  38                 	db	56
   909   001C55  54                 	db	84
   910   001C56  54                 	db	84
   911   001C57  54                 	db	84
   912   001C58  18                 	db	24
   913   001C59  08                 	db	8
   914   001C5A  7E                 	db	126
   915   001C5B  09                 	db	9
   916   001C5C  01                 	db	1
   917   001C5D  02                 	db	2
   918   001C5E  0C                 	db	12
   919   001C5F  52                 	db	82
   920   001C60  52                 	db	82
   921   001C61  52                 	db	82
   922   001C62  3E                 	db	62
   923   001C63  7F                 	db	127
   924   001C64  08                 	db	8
   925   001C65  04                 	db	4
   926   001C66  04                 	db	4
   927   001C67  78                 	db	120
   928   001C68  00                 	db	0
   929   001C69  44                 	db	68
   930   001C6A  7D                 	db	125
   931   001C6B  40                 	db	64
   932   001C6C  00                 	db	0
   933   001C6D  20                 	db	32
   934   001C6E  40                 	db	64
   935   001C6F  44                 	db	68
   936   001C70  3D                 	db	61
   937   001C71  00                 	db	0
   938   001C72  7F                 	db	127
   939   001C73  10                 	db	16
   940   001C74  28                 	db	40
   941   001C75  44                 	db	68
   942   001C76  00                 	db	0
   943   001C77  00                 	db	0
   944   001C78  41                 	db	65
   945   001C79  7F                 	db	127
   946   001C7A  40                 	db	64
   947   001C7B  00                 	db	0
   948   001C7C  7C                 	db	124
   949   001C7D  04                 	db	4
   950   001C7E  18                 	db	24
   951   001C7F  04                 	db	4
   952   001C80  78                 	db	120
   953   001C81  7C                 	db	124
   954   001C82  08                 	db	8
   955   001C83  04                 	db	4
   956   001C84  04                 	db	4
   957   001C85  78                 	db	120
   958   001C86  38                 	db	56
   959   001C87  44                 	db	68
   960   001C88  44                 	db	68
   961   001C89  44                 	db	68
   962   001C8A  38                 	db	56
   963   001C8B  7C                 	db	124
   964   001C8C  14                 	db	20
   965   001C8D  14                 	db	20
   966   001C8E  14                 	db	20
   967   001C8F  08                 	db	8
   968   001C90  08                 	db	8
   969   001C91  14                 	db	20
   970   001C92  14                 	db	20
   971   001C93  18                 	db	24
   972   001C94  7C                 	db	124
   973   001C95  7C                 	db	124
   974   001C96  08                 	db	8
   975   001C97  04                 	db	4
   976   001C98  04                 	db	4
   977   001C99  08                 	db	8
   978   001C9A  48                 	db	72
   979   001C9B  54                 	db	84
   980   001C9C  54                 	db	84
   981   001C9D  54                 	db	84
   982   001C9E  20                 	db	32
   983   001C9F  04                 	db	4
   984   001CA0  3F                 	db	63
   985   001CA1  44                 	db	68
   986   001CA2  40                 	db	64
   987   001CA3  20                 	db	32
   988   001CA4  3C                 	db	60
   989   001CA5  40                 	db	64
   990   001CA6  40                 	db	64
   991   001CA7  20                 	db	32
   992   001CA8  7C                 	db	124
   993   001CA9  1C                 	db	28
   994   001CAA  20                 	db	32
   995   001CAB  40                 	db	64
   996   001CAC  20                 	db	32
   997   001CAD  1C                 	db	28
   998   001CAE  3C                 	db	60
   999   001CAF  40                 	db	64
  1000   001CB0  30                 	db	48
  1001   001CB1  40                 	db	64
  1002   001CB2  3C                 	db	60
  1003   001CB3  44                 	db	68
  1004   001CB4  28                 	db	40
  1005   001CB5  10                 	db	16
  1006   001CB6  28                 	db	40
  1007   001CB7  44                 	db	68
  1008   001CB8  0C                 	db	12
  1009   001CB9  50                 	db	80
  1010   001CBA  50                 	db	80
  1011   001CBB  50                 	db	80
  1012   001CBC  3C                 	db	60
  1013   001CBD  44                 	db	68
  1014   001CBE  64                 	db	100
  1015   001CBF  54                 	db	84
  1016   001CC0  4C                 	db	76
  1017   001CC1  44                 	db	68
  1018   001CC2  00                 	db	0
  1019   001CC3  08                 	db	8
  1020   001CC4  36                 	db	54
  1021   001CC5  41                 	db	65
  1022   001CC6  00                 	db	0
  1023   001CC7  00                 	db	0
  1024   001CC8  00                 	db	0
  1025   001CC9  7F                 	db	127
  1026   001CCA  00                 	db	0
  1027   001CCB  00                 	db	0
  1028   001CCC  00                 	db	0
  1029   001CCD  41                 	db	65
  1030   001CCE  36                 	db	54
  1031   001CCF  08                 	db	8
  1032   001CD0  00                 	db	0
  1033   001CD1  10                 	db	16
  1034   001CD2  08                 	db	8
  1035   001CD3  08                 	db	8
  1036   001CD4  10                 	db	16
  1037   001CD5  08                 	db	8
  1038   001CD6  78                 	db	120
  1039   001CD7  46                 	db	70
  1040   001CD8  41                 	db	65
  1041   001CD9  46                 	db	70
  1042   001CDA  78                 	db	120
  1043   001CDB                     __end_of_Alpha2:
  1044                           	callstack 0
  1045   000F92                     _TRISA          set	3986
  1046   000F80                     _PORTAbits      set	3968
  1047   000F8A                     _LATBbits       set	3978
  1048   000F93                     _TRISB          set	3987
  1049   000FD3                     _OSCCON         set	4051
  1050   000FC1                     _ADCON1         set	4033
  1051   001CDB                     STR_3:
  1052   001CDB  20                 	db	32
  1053   001CDC  20                 	db	32
  1054   001CDD  20                 	db	32
  1055   001CDE  20                 	db	32
  1056   001CDF  20                 	db	32
  1057   001CE0  41                 	db	65	;'A'
  1058   001CE1  4E                 	db	78	;'N'
  1059   001CE2  55                 	db	85	;'U'
  1060   001CE3  20                 	db	32
  1061   001CE4  20                 	db	32
  1062   001CE5  20                 	db	32
  1063   001CE6  20                 	db	32
  1064   001CE7  20                 	db	32
  1065   001CE8  20                 	db	32
  1066   001CE9  20                 	db	32
  1067   001CEA  20                 	db	32
  1068   001CEB  00                 	db	0
  1069   001CEC                     STR_5:
  1070   001CEC  20                 	db	32
  1071   001CED  20                 	db	32
  1072   001CEE  20                 	db	32
  1073   001CEF  20                 	db	32
  1074   001CF0  47                 	db	71	;'G'
  1075   001CF1  41                 	db	65	;'A'
  1076   001CF2  4D                 	db	77	;'M'
  1077   001CF3  45                 	db	69	;'E'
  1078   001CF4  20                 	db	32
  1079   001CF5  4F                 	db	79	;'O'
  1080   001CF6  56                 	db	86	;'V'
  1081   001CF7  45                 	db	69	;'E'
  1082   001CF8  52                 	db	82	;'R'
  1083   001CF9  20                 	db	32
  1084   001CFA  20                 	db	32
  1085   001CFB  20                 	db	32
  1086   001CFC  00                 	db	0
  1087   001CFD                     STR_2:
  1088   001CFD  42                 	db	66	;'B'
  1089   001CFE  59                 	db	89	;'Y'
  1090   001CFF  3A                 	db	58	;':'
  1091   001D00  20                 	db	32
  1092   001D01  20                 	db	32
  1093   001D02  53                 	db	83	;'S'
  1094   001D03  45                 	db	69	;'E'
  1095   001D04  42                 	db	66	;'B'
  1096   001D05  41                 	db	65	;'A'
  1097   001D06  53                 	db	83	;'S'
  1098   001D07  54                 	db	84	;'T'
  1099   001D08  49                 	db	73	;'I'
  1100   001D09  41                 	db	65	;'A'
  1101   001D0A  4E                 	db	78	;'N'
  1102   001D0B  20                 	db	32
  1103   001D0C  20                 	db	32
  1104   001D0D  00                 	db	0
  1105   001D0E                     STR_4:
  1106   001D0E  2A                 	db	42
  1107   001D0F  2A                 	db	42
  1108   001D10  2A                 	db	42
  1109   001D11  2A                 	db	42
  1110   001D12  2A                 	db	42
  1111   001D13  2A                 	db	42
  1112   001D14  2A                 	db	42
  1113   001D15  2A                 	db	42
  1114   001D16  2A                 	db	42
  1115   001D17  2A                 	db	42
  1116   001D18  2A                 	db	42
  1117   001D19  2A                 	db	42
  1118   001D1A  2A                 	db	42
  1119   001D1B  2A                 	db	42
  1120   001D1C  2A                 	db	42
  1121   001D1D  00                 	db	0
  1122   001D1E                     STR_7:
  1123   001D1E  52                 	db	82	;'R'
  1124   001D1F  65                 	db	101	;'e'
  1125   001D20  74                 	db	116	;'t'
  1126   001D21  72                 	db	114	;'r'
  1127   001D22  79                 	db	121	;'y'
  1128   001D23  20                 	db	32
  1129   001D24  2D                 	db	45
  1130   001D25  20                 	db	32
  1131   001D26  53                 	db	83	;'S'
  1132   001D27  65                 	db	101	;'e'
  1133   001D28  6C                 	db	108	;'l'
  1134   001D29  65                 	db	101	;'e'
  1135   001D2A  63                 	db	99	;'c'
  1136   001D2B  74                 	db	116	;'t'
  1137   001D2C  00                 	db	0
  1138   001D2D                     STR_8:
  1139   001D2D  4D                 	db	77	;'M'
  1140   001D2E  65                 	db	101	;'e'
  1141   001D2F  6E                 	db	110	;'n'
  1142   001D30  75                 	db	117	;'u'
  1143   001D31  20                 	db	32
  1144   001D32  2D                 	db	45
  1145   001D33  20                 	db	32
  1146   001D34  45                 	db	69	;'E'
  1147   001D35  78                 	db	120	;'x'
  1148   001D36  69                 	db	105	;'i'
  1149   001D37  74                 	db	116	;'t'
  1150   001D38  00                 	db	0
  1151   001D39                     STR_1:
  1152   001D39  53                 	db	83	;'S'
  1153   001D3A  4E                 	db	78	;'N'
  1154   001D3B  41                 	db	65	;'A'
  1155   001D3C  4B                 	db	75	;'K'
  1156   001D3D  45                 	db	69	;'E'
  1157   001D3E  00                 	db	0
  1158   001D0E                     STR_6           equ	STR_4
  1159   001D3F  00                 	db	0	; dummy byte at the end
  1160   000002                     __activetblptr  equ	2
  1161                           
  1162                           ; #config settings
  1163                           
  1164                           	psect	cinit
  1165   000ED8                     __pcinit:
  1166                           	callstack 0
  1167   000ED8                     start_initialization:
  1168                           	callstack 0
  1169   000ED8                     __initialization:
  1170                           	callstack 0
  1171                           
  1172                           ; Initialize objects allocated to BANK0 (68 bytes)
  1173                           ; load TBLPTR registers with __pidataBANK0
  1174   000ED8  0E43               	movlw	low __pidataBANK0
  1175   000EDA  6EF6               	movwf	tblptrl,c
  1176   000EDC  0E0C               	movlw	high __pidataBANK0
  1177   000EDE  6EF7               	movwf	tblptrh,c
  1178   000EE0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1179   000EE2  6EF8               	movwf	tblptru,c
  1180   000EE4  EE00  F080         	lfsr	0,__pdataBANK0
  1181   000EE8  EE10 F044          	lfsr	1,68
  1182   000EEC                     copy_data0:
  1183   000EEC  0009               	tblrd		*+
  1184   000EEE  CFF5 FFEE          	movff	tablat,postinc0
  1185   000EF2  50E5               	movf	postdec1,w,c
  1186   000EF4  50E1               	movf	fsr1l,w,c
  1187   000EF6  E1FA               	bnz	copy_data0
  1188                           
  1189                           ; Initialize objects allocated to COMRAM (69 bytes)
  1190                           ; load TBLPTR registers with __pidataCOMRAM
  1191   000EF8  0E87               	movlw	low __pidataCOMRAM
  1192   000EFA  6EF6               	movwf	tblptrl,c
  1193   000EFC  0E0C               	movlw	high __pidataCOMRAM
  1194   000EFE  6EF7               	movwf	tblptrh,c
  1195   000F00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1196   000F02  6EF8               	movwf	tblptru,c
  1197   000F04  EE00  F001         	lfsr	0,__pdataCOMRAM
  1198   000F08  EE10 F045          	lfsr	1,69
  1199   000F0C                     copy_data1:
  1200   000F0C  0009               	tblrd		*+
  1201   000F0E  CFF5 FFEE          	movff	tablat,postinc0
  1202   000F12  50E5               	movf	postdec1,w,c
  1203   000F14  50E1               	movf	fsr1l,w,c
  1204   000F16  E1FA               	bnz	copy_data1
  1205                           
  1206                           ; Clear objects allocated to BANK1 (32 bytes)
  1207   000F18  EE01  F000         	lfsr	0,__pbssBANK1
  1208   000F1C  0E20               	movlw	32
  1209   000F1E                     clear_0:
  1210   000F1E  6AEE               	clrf	postinc0,c
  1211   000F20  06E8               	decf	wreg,f,c
  1212   000F22  E1FD               	bnz	clear_0
  1213                           
  1214                           ; Clear objects allocated to BANK0 (32 bytes)
  1215   000F24  EE00  F0C4         	lfsr	0,__pbssBANK0
  1216   000F28  0E20               	movlw	32
  1217   000F2A                     clear_1:
  1218   000F2A  6AEE               	clrf	postinc0,c
  1219   000F2C  06E8               	decf	wreg,f,c
  1220   000F2E  E1FD               	bnz	clear_1
  1221                           
  1222                           ; Clear objects allocated to COMRAM (14 bytes)
  1223   000F30  EE00  F06C         	lfsr	0,__pbssCOMRAM
  1224   000F34  0E0E               	movlw	14
  1225   000F36                     clear_2:
  1226   000F36  6AEE               	clrf	postinc0,c
  1227   000F38  06E8               	decf	wreg,f,c
  1228   000F3A  E1FD               	bnz	clear_2
  1229   000F3C                     end_of_initialization:
  1230                           	callstack 0
  1231   000F3C                     __end_of__initialization:
  1232                           	callstack 0
  1233   000F3C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1234   000F3E  6EF8               	movwf	tblptru,c
  1235   000F40  0100               	movlb	0
  1236   000F42  EF3F  F009         	goto	_main	;jump to C main() function
  1237                           
  1238                           	psect	bssCOMRAM
  1239   00006C                     __pbssCOMRAM:
  1240                           	callstack 0
  1241   00006C                     _gameover:
  1242                           	callstack 0
  1243   00006C                     	ds	1
  1244   00006D                     _game:
  1245                           	callstack 0
  1246   00006D                     	ds	1
  1247   00006E                     _looseScreen:
  1248                           	callstack 0
  1249   00006E                     	ds	1
  1250   00006F                     _key:
  1251                           	callstack 0
  1252   00006F                     	ds	1
  1253   000070                     _score:
  1254                           	callstack 0
  1255   000070                     	ds	1
  1256   000071                     _fruitY:
  1257                           	callstack 0
  1258   000071                     	ds	1
  1259   000072                     _fruitX:
  1260                           	callstack 0
  1261   000072                     	ds	1
  1262   000073                     _snakeTailLen:
  1263                           	callstack 0
  1264   000073                     	ds	1
  1265   000074                     _snakeHeadYPos:
  1266                           	callstack 0
  1267   000074                     	ds	1
  1268   000075                     _snakeHeadXPos:
  1269                           	callstack 0
  1270   000075                     	ds	1
  1271   000076                     _seed:
  1272                           	callstack 0
  1273   000076                     	ds	4
  1274                           
  1275                           	psect	dataCOMRAM
  1276   000001                     __pdataCOMRAM:
  1277                           	callstack 0
  1278   000001                     _mainMenu:
  1279                           	callstack 0
  1280   000001                     	ds	1
  1281   000002                     _LCDStore3:
  1282                           	callstack 0
  1283   000002                     	ds	17
  1284   000013                     _LCDStore2:
  1285                           	callstack 0
  1286   000013                     	ds	17
  1287   000024                     _LCDStore1:
  1288                           	callstack 0
  1289   000024                     	ds	17
  1290   000035                     _LCDStore0:
  1291                           	callstack 0
  1292   000035                     	ds	17
  1293                           
  1294                           	psect	bssBANK0
  1295   0000C4                     __pbssBANK0:
  1296                           	callstack 0
  1297   0000C4                     _snakeTailX:
  1298                           	callstack 0
  1299   0000C4                     	ds	32
  1300                           
  1301                           	psect	dataBANK0
  1302   000080                     __pdataBANK0:
  1303                           	callstack 0
  1304   000080                     _LCDStore7:
  1305                           	callstack 0
  1306   000080                     	ds	17
  1307   000091                     _LCDStore6:
  1308                           	callstack 0
  1309   000091                     	ds	17
  1310   0000A2                     _LCDStore5:
  1311                           	callstack 0
  1312   0000A2                     	ds	17
  1313   0000B3                     _LCDStore4:
  1314                           	callstack 0
  1315   0000B3                     	ds	17
  1316                           
  1317                           	psect	bssBANK1
  1318   000100                     __pbssBANK1:
  1319                           	callstack 0
  1320   000100                     _snakeTailY:
  1321                           	callstack 0
  1322   000100                     	ds	32
  1323                           
  1324                           	psect	cstackCOMRAM
  1325   000046                     __pcstackCOMRAM:
  1326                           	callstack 0
  1327   000046                     ?___lmul:
  1328                           	callstack 0
  1329   000046                     placeChar@y:
  1330                           	callstack 0
  1331   000046                     ___lmul@multiplier:
  1332                           	callstack 0
  1333   000046                     ??_LCD_WriteByte:
  1334   000046                     
  1335                           ; 1 bytes @ 0x0
  1336   000046                     	ds	1
  1337   000047                     placeChar@c:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x1
  1341   000047                     	ds	1
  1342   000048                     LCD_WriteByte@command:
  1343                           	callstack 0
  1344   000048                     placeChar@x:
  1345                           	callstack 0
  1346   000048                     
  1347                           ; 1 bytes @ 0x2
  1348   000048                     	ds	1
  1349   000049                     LCD_WriteData@data:
  1350                           	callstack 0
  1351   000049                     LCD_WriteCommand@command:
  1352                           	callstack 0
  1353   000049                     clearAllChar@i:
  1354                           	callstack 0
  1355   000049                     
  1356                           ; 1 bytes @ 0x3
  1357   000049                     	ds	1
  1358   00004A                     LCD_ClearGraphics@x:
  1359                           	callstack 0
  1360   00004A                     clearAllChar@j:
  1361                           	callstack 0
  1362   00004A                     LCD_GraphicsDisplayString@str:
  1363                           	callstack 0
  1364   00004A                     ___lmul@multiplicand:
  1365                           	callstack 0
  1366   00004A                     ??_LCD_Init:
  1367   00004A                     ??_LCD_EnableGraphics:
  1368   00004A                     
  1369                           ; 1 bytes @ 0x4
  1370   00004A                     	ds	1
  1371   00004B                     LCD_ClearGraphics@y:
  1372                           	callstack 0
  1373                           
  1374                           ; 1 bytes @ 0x5
  1375   00004B                     	ds	1
  1376   00004C                     ??_LCD_GraphicsDisplayString:
  1377                           
  1378                           ; 1 bytes @ 0x6
  1379   00004C                     	ds	2
  1380   00004E                     ___lmul@product:
  1381                           	callstack 0
  1382   00004E                     
  1383                           ; 1 bytes @ 0x8
  1384   00004E                     	ds	1
  1385   00004F                     _LCD_GraphicsDisplayString$113:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x9
  1389   00004F                     	ds	2
  1390   000051                     _LCD_GraphicsDisplayString$115:
  1391                           	callstack 0
  1392                           
  1393                           ; 2 bytes @ 0xB
  1394   000051                     	ds	1
  1395   000052                     ?_rand:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0xC
  1399   000052                     	ds	1
  1400   000053                     LCD_GraphicsDisplayString@shouldContinue:
  1401                           	callstack 0
  1402                           
  1403                           ; 1 bytes @ 0xD
  1404   000053                     	ds	1
  1405   000054                     LCD_GraphicsDisplayString@colListA:
  1406                           	callstack 0
  1407   000054                     ??_rand:
  1408                           
  1409                           ; 1 bytes @ 0xE
  1410   000054                     	ds	4
  1411   000058                     ?___awmod:
  1412                           	callstack 0
  1413   000058                     ___awmod@dividend:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x12
  1417   000058                     	ds	1
  1418   000059                     LCD_GraphicsDisplayString@colListB:
  1419                           	callstack 0
  1420                           
  1421                           ; 5 bytes @ 0x13
  1422   000059                     	ds	1
  1423   00005A                     ___awmod@divisor:
  1424                           	callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x14
  1427   00005A                     	ds	2
  1428   00005C                     ___awmod@counter:
  1429                           	callstack 0
  1430   00005C                     
  1431                           ; 1 bytes @ 0x16
  1432   00005C                     	ds	1
  1433   00005D                     ___awmod@sign:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0x17
  1437   00005D                     	ds	1
  1438   00005E                     LCD_GraphicsDisplayString@count:
  1439                           	callstack 0
  1440   00005E                     random@upper_bound:
  1441                           	callstack 0
  1442                           
  1443                           ; 1 bytes @ 0x18
  1444   00005E                     	ds	1
  1445   00005F                     LCD_GraphicsDisplayString@dataA:
  1446                           	callstack 0
  1447   00005F                     ??_random:
  1448                           
  1449                           ; 1 bytes @ 0x19
  1450   00005F                     	ds	1
  1451   000060                     LCD_GraphicsDisplayString@dataB:
  1452                           	callstack 0
  1453                           
  1454                           ; 1 bytes @ 0x1A
  1455   000060                     	ds	1
  1456   000061                     LCD_GraphicsDisplayString@line:
  1457                           	callstack 0
  1458   000061                     random@lower_bound:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x1B
  1462   000061                     	ds	1
  1463   000062                     LCD_GraphicsDisplayString@letterA:
  1464                           	callstack 0
  1465   000062                     
  1466                           ; 1 bytes @ 0x1C
  1467   000062                     	ds	1
  1468   000063                     LCD_GraphicsDisplayString@letterB:
  1469                           	callstack 0
  1470   000063                     logic@prev2X:
  1471                           	callstack 0
  1472                           
  1473                           ; 1 bytes @ 0x1D
  1474   000063                     	ds	1
  1475   000064                     LCD_GraphicsDisplayString@row:
  1476                           	callstack 0
  1477   000064                     logic@prev2Y:
  1478                           	callstack 0
  1479                           
  1480                           ; 1 bytes @ 0x1E
  1481   000064                     	ds	1
  1482   000065                     LCD_GraphicsDisplayString@colInd:
  1483                           	callstack 0
  1484   000065                     logic@prevX:
  1485                           	callstack 0
  1486                           
  1487                           ; 1 bytes @ 0x1F
  1488   000065                     	ds	1
  1489   000066                     LCD_GraphicsDisplayString@indA:
  1490                           	callstack 0
  1491   000066                     logic@prevY:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x20
  1495   000066                     	ds	1
  1496   000067                     LCD_GraphicsDisplayString@indB:
  1497                           	callstack 0
  1498   000067                     logic@i_297:
  1499                           	callstack 0
  1500                           
  1501                           ; 1 bytes @ 0x21
  1502   000067                     	ds	1
  1503   000068                     logic@i:
  1504                           	callstack 0
  1505   000068                     
  1506                           ; 1 bytes @ 0x22
  1507   000068                     	ds	1
  1508   000069                     draw@k:
  1509                           	callstack 0
  1510                           
  1511                           ; 1 bytes @ 0x23
  1512   000069                     	ds	1
  1513   00006A                     draw@i:
  1514                           	callstack 0
  1515                           
  1516                           ; 1 bytes @ 0x24
  1517   00006A                     	ds	1
  1518   00006B                     draw@j:
  1519                           	callstack 0
  1520                           
  1521                           ; 1 bytes @ 0x25
  1522   00006B                     	ds	1
  1523   00006C                     
  1524                           ; 1 bytes @ 0x26
  1525 ;;
  1526 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1527 ;;
  1528 ;; *************** function _main *****************
  1529 ;; Defined at:
  1530 ;;		line 209 in file "Pls.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1
  1544 ;;      Params:         0       0       0
  1545 ;;      Locals:         0       0       0
  1546 ;;      Temps:          0       0       0
  1547 ;;      Totals:         0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels required when called: 5
  1550 ;; This function calls:
  1551 ;;		_LCD_ClearGraphics
  1552 ;;		_LCD_EnableGraphics
  1553 ;;		_LCD_GraphicsDisplayString
  1554 ;;		_LCD_Init
  1555 ;;		_draw
  1556 ;;		_input
  1557 ;;		_logic
  1558 ;;		_setup
  1559 ;; This function is called by:
  1560 ;;		Startup code after reset
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text0
  1565   00127E                     __ptext0:
  1566                           	callstack 0
  1567   00127E                     _main:
  1568                           	callstack 26
  1569   00127E                     
  1570                           ;Pls.c: 210:     ADCON1 = 0x0F;
  1571   00127E  0E0F               	movlw	15
  1572   001280  6EC1               	movwf	193,c	;volatile
  1573                           
  1574                           ;Pls.c: 211:     OSCCON = 0x70;
  1575   001282  0E70               	movlw	112
  1576   001284  6ED3               	movwf	211,c	;volatile
  1577   001286                     
  1578                           ;Pls.c: 213:     LCD_Init();
  1579   001286  ECDB  F007         	call	_LCD_Init	;wreg free
  1580   00128A                     
  1581                           ;Pls.c: 214:     LCD_EnableGraphics();
  1582   00128A  EC02  F006         	call	_LCD_EnableGraphics	;wreg free
  1583   00128E                     
  1584                           ;Pls.c: 215:     LCD_ClearGraphics();
  1585   00128E  EC97  F006         	call	_LCD_ClearGraphics	;wreg free
  1586   001292                     
  1587                           ;Pls.c: 217:     LCD_GraphicsDisplayString(0,"SNAKE");
  1588   001292  0E39               	movlw	low STR_1
  1589   001294  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1590   001296  0E1D               	movlw	high STR_1
  1591   001298  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1592   00129A  0E00               	movlw	0
  1593   00129C  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1594   0012A0                     
  1595                           ;Pls.c: 219:     LCD_GraphicsDisplayString(3,"BY:  SEBASTIAN  ");
  1596   0012A0  0EFD               	movlw	low STR_2
  1597   0012A2  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1598   0012A4  0E1C               	movlw	high STR_2
  1599   0012A6  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1600   0012A8  0E03               	movlw	3
  1601   0012AA  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1602   0012AE                     
  1603                           ;Pls.c: 220:     LCD_GraphicsDisplayString(4,"     ANU        ");
  1604   0012AE  0EDB               	movlw	low STR_3
  1605   0012B0  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1606   0012B2  0E1C               	movlw	high STR_3
  1607   0012B4  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1608   0012B6  0E04               	movlw	4
  1609   0012B8  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1610   0012BC                     l246:
  1611   0012BC  AA80               	btfss	128,5,c	;volatile
  1612   0012BE  EF63  F009         	goto	u1381
  1613   0012C2  EF65  F009         	goto	u1380
  1614   0012C6                     u1381:
  1615   0012C6  EF5E  F009         	goto	l246
  1616   0012CA                     u1380:
  1617   0012CA                     
  1618                           ;Pls.c: 224:     setup();
  1619   0012CA  EC36  F007         	call	_setup	;wreg free
  1620   0012CE  EF6F  F009         	goto	l2001
  1621   0012D2                     l1995:
  1622                           
  1623                           ;Pls.c: 228:            draw();
  1624   0012D2  EC2A  F008         	call	_draw	;wreg free
  1625   0012D6                     
  1626                           ;Pls.c: 229:            input();
  1627   0012D6  ECA3  F007         	call	_input	;wreg free
  1628   0012DA                     
  1629                           ;Pls.c: 230:            logic();
  1630   0012DA  EC43  F00A         	call	_logic	;wreg free
  1631   0012DE                     l2001:
  1632                           
  1633                           ;Pls.c: 227:     while(!gameover){
  1634   0012DE  506C               	movf	_gameover^0,w,c
  1635   0012E0  B4D8               	btfsc	status,2,c
  1636   0012E2  EF75  F009         	goto	u1391
  1637   0012E6  EF77  F009         	goto	u1390
  1638   0012EA                     u1391:
  1639   0012EA  EF69  F009         	goto	l1995
  1640   0012EE                     u1390:
  1641   0012EE                     
  1642                           ;Pls.c: 232:     LCD_ClearGraphics();
  1643   0012EE  EC97  F006         	call	_LCD_ClearGraphics	;wreg free
  1644   0012F2                     
  1645                           ;Pls.c: 233:     LCD_GraphicsDisplayString(1,"***************");
  1646   0012F2  0E0E               	movlw	low STR_4
  1647   0012F4  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1648   0012F6  0E1D               	movlw	high STR_4
  1649   0012F8  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1650   0012FA  0E01               	movlw	1
  1651   0012FC  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1652   001300                     
  1653                           ;Pls.c: 234:     LCD_GraphicsDisplayString(2,"    GAME OVER   ");
  1654   001300  0EEC               	movlw	low STR_5
  1655   001302  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1656   001304  0E1C               	movlw	high STR_5
  1657   001306  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1658   001308  0E02               	movlw	2
  1659   00130A  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1660   00130E                     
  1661                           ;Pls.c: 235:     LCD_GraphicsDisplayString(3,"***************");
  1662   00130E  0E0E               	movlw	low STR_4
  1663   001310  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1664   001312  0E1D               	movlw	high STR_4
  1665   001314  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1666   001316  0E03               	movlw	3
  1667   001318  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1668   00131C                     
  1669                           ;Pls.c: 236:     LCD_GraphicsDisplayString(5,"Retry - Select");
  1670   00131C  0E1E               	movlw	low STR_7
  1671   00131E  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1672   001320  0E1D               	movlw	high STR_7
  1673   001322  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1674   001324  0E05               	movlw	5
  1675   001326  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1676   00132A                     
  1677                           ;Pls.c: 237:     LCD_GraphicsDisplayString(6,"Menu - Exit");
  1678   00132A  0E2D               	movlw	low STR_8
  1679   00132C  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1680   00132E  0E1D               	movlw	high STR_8
  1681   001330  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1682   001332  0E06               	movlw	6
  1683   001334  EC18  F00B         	call	_LCD_GraphicsDisplayString
  1684                           
  1685                           ;Pls.c: 239:     while(!PORTAbits.RA4){
  1686   001338  EFA7  F009         	goto	l253
  1687   00133C                     l254:
  1688                           
  1689                           ;Pls.c: 240:        if(PORTAbits.RA5){
  1690   00133C  AA80               	btfss	128,5,c	;volatile
  1691   00133E  EFA3  F009         	goto	u1401
  1692   001342  EFA5  F009         	goto	u1400
  1693   001346                     u1401:
  1694   001346  EFA7  F009         	goto	l253
  1695   00134A                     u1400:
  1696   00134A  EF6F  F009         	goto	l2001
  1697   00134E                     l253:
  1698                           
  1699                           ;Pls.c: 239:     while(!PORTAbits.RA4){
  1700   00134E  A880               	btfss	128,4,c	;volatile
  1701   001350  EFAC  F009         	goto	u1411
  1702   001354  EFAE  F009         	goto	u1410
  1703   001358                     u1411:
  1704   001358  EF9E  F009         	goto	l254
  1705   00135C                     u1410:
  1706   00135C  EF01  F000         	goto	start
  1707   001360                     __end_of_main:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _setup *****************
  1711 ;; Defined at:
  1712 ;;		line 93 in file "Pls.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1
  1726 ;;      Params:         0       0       0
  1727 ;;      Locals:         0       0       0
  1728 ;;      Temps:          0       0       0
  1729 ;;      Totals:         0       0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 3
  1733 ;; This function calls:
  1734 ;;		_random
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text1
  1741   000E6C                     __ptext1:
  1742                           	callstack 0
  1743   000E6C                     _setup:
  1744                           	callstack 27
  1745   000E6C                     
  1746                           ;Pls.c: 95:     TRISA = 0x0F;
  1747   000E6C  0E0F               	movlw	15
  1748   000E6E  6E92               	movwf	146,c	;volatile
  1749   000E70                     
  1750                           ;Pls.c: 98:     gameover = 0;
  1751   000E70  6A6C               	clrf	_gameover^0,c
  1752                           
  1753                           ;Pls.c: 101:     snakeHeadXPos = 7;
  1754   000E72  0E07               	movlw	7
  1755   000E74  6E75               	movwf	_snakeHeadXPos^0,c
  1756                           
  1757                           ;Pls.c: 102:     snakeHeadYPos = 4;
  1758   000E76  0E04               	movlw	4
  1759   000E78  6E74               	movwf	_snakeHeadYPos^0,c
  1760   000E7A                     
  1761                           ;Pls.c: 105:     fruitX = random(0,15);
  1762   000E7A  0E0F               	movlw	15
  1763   000E7C  6E5E               	movwf	random@upper_bound^0,c
  1764   000E7E  0E00               	movlw	0
  1765   000E80  ECCD  F005         	call	_random
  1766   000E84  6E72               	movwf	_fruitX^0,c
  1767   000E86                     
  1768                           ;Pls.c: 106:     fruitY = random(0,7);
  1769   000E86  0E07               	movlw	7
  1770   000E88  6E5E               	movwf	random@upper_bound^0,c
  1771   000E8A  0E00               	movlw	0
  1772   000E8C  ECCD  F005         	call	_random
  1773   000E90  6E71               	movwf	_fruitY^0,c
  1774                           
  1775                           ;Pls.c: 108:     while (fruitX == 0)
  1776   000E92  EF51  F007         	goto	l1801
  1777   000E96                     l1799:
  1778                           
  1779                           ;Pls.c: 109:         fruitX = random(0,15);
  1780   000E96  0E0F               	movlw	15
  1781   000E98  6E5E               	movwf	random@upper_bound^0,c
  1782   000E9A  0E00               	movlw	0
  1783   000E9C  ECCD  F005         	call	_random
  1784   000EA0  6E72               	movwf	_fruitX^0,c
  1785   000EA2                     l1801:
  1786                           
  1787                           ;Pls.c: 108:     while (fruitX == 0)
  1788   000EA2  5072               	movf	_fruitX^0,w,c
  1789   000EA4  B4D8               	btfsc	status,2,c
  1790   000EA6  EF57  F007         	goto	u1121
  1791   000EAA  EF59  F007         	goto	u1120
  1792   000EAE                     u1121:
  1793   000EAE  EF4B  F007         	goto	l1799
  1794   000EB2                     u1120:
  1795   000EB2  EF61  F007         	goto	l1805
  1796   000EB6                     l1803:
  1797                           
  1798                           ;Pls.c: 112:         fruitY = random(0,7);
  1799   000EB6  0E07               	movlw	7
  1800   000EB8  6E5E               	movwf	random@upper_bound^0,c
  1801   000EBA  0E00               	movlw	0
  1802   000EBC  ECCD  F005         	call	_random
  1803   000EC0  6E71               	movwf	_fruitY^0,c
  1804   000EC2                     l1805:
  1805                           
  1806                           ;Pls.c: 111:     while (fruitY == 0)
  1807   000EC2  5071               	movf	_fruitY^0,w,c
  1808   000EC4  B4D8               	btfsc	status,2,c
  1809   000EC6  EF67  F007         	goto	u1131
  1810   000ECA  EF69  F007         	goto	u1130
  1811   000ECE                     u1131:
  1812   000ECE  EF5B  F007         	goto	l1803
  1813   000ED2                     u1130:
  1814   000ED2                     
  1815                           ;Pls.c: 115:     score = 0;
  1816   000ED2  6A70               	clrf	_score^0,c
  1817                           
  1818                           ;Pls.c: 116:     snakeTailLen = 0;
  1819   000ED4  6A73               	clrf	_snakeTailLen^0,c
  1820   000ED6  0012               	return		;funcret
  1821   000ED8                     __end_of_setup:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _logic *****************
  1825 ;; Defined at:
  1826 ;;		line 125 in file "Pls.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  i               1   33[COMRAM] unsigned char 
  1831 ;;  i               1   34[COMRAM] unsigned char 
  1832 ;;  prevY           1   32[COMRAM] unsigned char 
  1833 ;;  prevX           1   31[COMRAM] unsigned char 
  1834 ;;  prev2Y          1   30[COMRAM] unsigned char 
  1835 ;;  prev2X          1   29[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1
  1845 ;;      Params:         0       0       0
  1846 ;;      Locals:         6       0       0
  1847 ;;      Temps:          1       0       0
  1848 ;;      Totals:         7       0       0
  1849 ;;Total ram usage:        7 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 3
  1852 ;; This function calls:
  1853 ;;		_random
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text2
  1860   001486                     __ptext2:
  1861                           	callstack 0
  1862   001486                     _logic:
  1863                           	callstack 27
  1864   001486                     
  1865                           ;Pls.c: 129:     unsigned char prevX = snakeTailX[0];
  1866   001486  C0C4  F065         	movff	_snakeTailX,logic@prevX
  1867                           
  1868                           ;Pls.c: 130:     unsigned char prevY = snakeTailY[0];
  1869   00148A  C100  F066         	movff	_snakeTailY,logic@prevY
  1870                           
  1871                           ;Pls.c: 131:     unsigned char prev2X, prev2Y;;Pls.c: 132:     snakeTailX[0] = snakeHead
      +                          XPos;
  1872   00148E  C075  F0C4         	movff	_snakeHeadXPos,_snakeTailX
  1873                           
  1874                           ;Pls.c: 133:     snakeTailY[0] = snakeHeadYPos;
  1875   001492  C074  F100         	movff	_snakeHeadYPos,_snakeTailY
  1876   001496                     
  1877                           ;Pls.c: 134:     for (unsigned char i = 1; i < snakeTailLen; i++) {
  1878   001496  0E01               	movlw	1
  1879   001498  6E68               	movwf	logic@i^0,c
  1880   00149A  EF70  F00A         	goto	l1819
  1881   00149E                     l1811:
  1882                           
  1883                           ;Pls.c: 135:         prev2X = snakeTailX[i];
  1884   00149E  5068               	movf	logic@i^0,w,c
  1885   0014A0  0FC4               	addlw	low _snakeTailX
  1886   0014A2  6ED9               	movwf	fsr2l,c
  1887   0014A4  6ADA               	clrf	fsr2h,c
  1888   0014A6  50DF               	movf	indf2,w,c
  1889   0014A8  6E63               	movwf	logic@prev2X^0,c
  1890                           
  1891                           ;Pls.c: 136:         prev2Y = snakeTailY[i];
  1892   0014AA  0E00               	movlw	low _snakeTailY
  1893   0014AC  2468               	addwf	logic@i^0,w,c
  1894   0014AE  6ED9               	movwf	fsr2l,c
  1895   0014B0  6ADA               	clrf	fsr2h,c
  1896   0014B2  0E01               	movlw	high _snakeTailY
  1897   0014B4  22DA               	addwfc	fsr2h,f,c
  1898   0014B6  50DF               	movf	indf2,w,c
  1899   0014B8  6E64               	movwf	logic@prev2Y^0,c
  1900                           
  1901                           ;Pls.c: 137:         snakeTailX[i] = prevX;
  1902   0014BA  5068               	movf	logic@i^0,w,c
  1903   0014BC  0FC4               	addlw	low _snakeTailX
  1904   0014BE  6ED9               	movwf	fsr2l,c
  1905   0014C0  6ADA               	clrf	fsr2h,c
  1906   0014C2  C065  FFDF         	movff	logic@prevX,indf2
  1907                           
  1908                           ;Pls.c: 138:         snakeTailY[i] = prevY;
  1909   0014C6  0E00               	movlw	low _snakeTailY
  1910   0014C8  2468               	addwf	logic@i^0,w,c
  1911   0014CA  6ED9               	movwf	fsr2l,c
  1912   0014CC  6ADA               	clrf	fsr2h,c
  1913   0014CE  0E01               	movlw	high _snakeTailY
  1914   0014D0  22DA               	addwfc	fsr2h,f,c
  1915   0014D2  C066  FFDF         	movff	logic@prevY,indf2
  1916   0014D6                     
  1917                           ;Pls.c: 139:         prevX = prev2X;
  1918   0014D6  C063  F065         	movff	logic@prev2X,logic@prevX
  1919   0014DA                     
  1920                           ;Pls.c: 140:         prevY = prev2Y;
  1921   0014DA  C064  F066         	movff	logic@prev2Y,logic@prevY
  1922   0014DE                     
  1923                           ;Pls.c: 141:     }
  1924   0014DE  2A68               	incf	logic@i^0,f,c
  1925   0014E0                     l1819:
  1926   0014E0  5073               	movf	_snakeTailLen^0,w,c
  1927   0014E2  5C68               	subwf	logic@i^0,w,c
  1928   0014E4  A0D8               	btfss	status,0,c
  1929   0014E6  EF77  F00A         	goto	u1141
  1930   0014EA  EF79  F00A         	goto	u1140
  1931   0014EE                     u1141:
  1932   0014EE  EF4F  F00A         	goto	l1811
  1933   0014F2                     u1140:
  1934   0014F2  EF87  F00A         	goto	l1831
  1935   0014F6                     l1821:
  1936                           
  1937                           ;Pls.c: 146:         snakeHeadXPos--;
  1938   0014F6  0675               	decf	_snakeHeadXPos^0,f,c
  1939                           
  1940                           ;Pls.c: 147:         break;
  1941   0014F8  EF9A  F00A         	goto	l1833
  1942   0014FC                     l1823:
  1943                           
  1944                           ;Pls.c: 149:         snakeHeadXPos++;
  1945   0014FC  2A75               	incf	_snakeHeadXPos^0,f,c
  1946                           
  1947                           ;Pls.c: 150:         break;
  1948   0014FE  EF9A  F00A         	goto	l1833
  1949   001502                     l1825:
  1950                           
  1951                           ;Pls.c: 152:         snakeHeadYPos--;
  1952   001502  0674               	decf	_snakeHeadYPos^0,f,c
  1953                           
  1954                           ;Pls.c: 153:         break;
  1955   001504  EF9A  F00A         	goto	l1833
  1956   001508                     l1827:
  1957                           
  1958                           ;Pls.c: 155:         snakeHeadYPos++;
  1959   001508  2A74               	incf	_snakeHeadYPos^0,f,c
  1960                           
  1961                           ;Pls.c: 156:         break;
  1962   00150A  EF9A  F00A         	goto	l1833
  1963   00150E                     l1831:
  1964   00150E  506F               	movf	_key^0,w,c
  1965                           
  1966                           ; Switch size 1, requested type "simple"
  1967                           ; Number of cases is 4, Range of values is 1 to 4
  1968                           ; switch strategies available:
  1969                           ; Name         Instructions Cycles
  1970                           ; simple_byte           13     7 (average)
  1971                           ;	Chosen strategy is simple_byte
  1972   001510  0A01               	xorlw	1	; case 1
  1973   001512  B4D8               	btfsc	status,2,c
  1974   001514  EF7B  F00A         	goto	l1821
  1975   001518  0A03               	xorlw	3	; case 2
  1976   00151A  B4D8               	btfsc	status,2,c
  1977   00151C  EF7E  F00A         	goto	l1823
  1978   001520  0A01               	xorlw	1	; case 3
  1979   001522  B4D8               	btfsc	status,2,c
  1980   001524  EF81  F00A         	goto	l1825
  1981   001528  0A07               	xorlw	7	; case 4
  1982   00152A  B4D8               	btfsc	status,2,c
  1983   00152C  EF84  F00A         	goto	l1827
  1984   001530  EF9A  F00A         	goto	l1833
  1985   001534                     l1833:
  1986                           
  1987                           ;Pls.c: 162:     if (snakeHeadXPos < 0 || snakeHeadXPos >= 16 || snakeHeadYPos < 0 || sn
      +                          akeHeadYPos >= 8)
  1988   001534  0E10               	movlw	16
  1989   001536  6075               	cpfslt	_snakeHeadXPos^0,c
  1990   001538  EFA0  F00A         	goto	u1151
  1991   00153C  EFA2  F00A         	goto	u1150
  1992   001540                     u1151:
  1993   001540  EFAA  F00A         	goto	l1837
  1994   001544                     u1150:
  1995   001544  0E07               	movlw	7
  1996   001546  6474               	cpfsgt	_snakeHeadYPos^0,c
  1997   001548  EFA8  F00A         	goto	u1161
  1998   00154C  EFAA  F00A         	goto	u1160
  1999   001550                     u1161:
  2000   001550  EFAC  F00A         	goto	l1839
  2001   001554                     u1160:
  2002   001554                     l1837:
  2003                           
  2004                           ;Pls.c: 163:         gameover = 1;
  2005   001554  0E01               	movlw	1
  2006   001556  6E6C               	movwf	_gameover^0,c
  2007   001558                     l1839:
  2008                           
  2009                           ;Pls.c: 166:     for (unsigned char i = 0; i < snakeTailLen; i++) {
  2010   001558  6A67               	clrf	logic@i_297^0,c
  2011   00155A  EFCE  F00A         	goto	l1849
  2012   00155E                     l1841:
  2013                           
  2014                           ;Pls.c: 167:         if (snakeTailX[i] == snakeHeadXPos && snakeTailY[i] == snakeHeadYPo
      +                          s)
  2015   00155E  5067               	movf	logic@i_297^0,w,c
  2016   001560  0FC4               	addlw	low _snakeTailX
  2017   001562  6ED9               	movwf	fsr2l,c
  2018   001564  6ADA               	clrf	fsr2h,c
  2019   001566  5075               	movf	_snakeHeadXPos^0,w,c
  2020   001568  18DE               	xorwf	postinc2,w,c
  2021   00156A  A4D8               	btfss	status,2,c
  2022   00156C  EFBA  F00A         	goto	u1171
  2023   001570  EFBC  F00A         	goto	u1170
  2024   001574                     u1171:
  2025   001574  EFCD  F00A         	goto	l1847
  2026   001578                     u1170:
  2027   001578  0E00               	movlw	low _snakeTailY
  2028   00157A  2467               	addwf	logic@i_297^0,w,c
  2029   00157C  6ED9               	movwf	fsr2l,c
  2030   00157E  6ADA               	clrf	fsr2h,c
  2031   001580  0E01               	movlw	high _snakeTailY
  2032   001582  22DA               	addwfc	fsr2h,f,c
  2033   001584  5074               	movf	_snakeHeadYPos^0,w,c
  2034   001586  18DE               	xorwf	postinc2,w,c
  2035   001588  A4D8               	btfss	status,2,c
  2036   00158A  EFC9  F00A         	goto	u1181
  2037   00158E  EFCB  F00A         	goto	u1180
  2038   001592                     u1181:
  2039   001592  EFCD  F00A         	goto	l1847
  2040   001596                     u1180:
  2041   001596                     
  2042                           ;Pls.c: 168:             gameover = 1;
  2043   001596  0E01               	movlw	1
  2044   001598  6E6C               	movwf	_gameover^0,c
  2045   00159A                     l1847:
  2046                           
  2047                           ;Pls.c: 169:     }
  2048   00159A  2A67               	incf	logic@i_297^0,f,c
  2049   00159C                     l1849:
  2050   00159C  5073               	movf	_snakeTailLen^0,w,c
  2051   00159E  5C67               	subwf	logic@i_297^0,w,c
  2052   0015A0  A0D8               	btfss	status,0,c
  2053   0015A2  EFD5  F00A         	goto	u1191
  2054   0015A6  EFD7  F00A         	goto	u1190
  2055   0015AA                     u1191:
  2056   0015AA  EFAF  F00A         	goto	l1841
  2057   0015AE                     u1190:
  2058   0015AE                     
  2059                           ;Pls.c: 173:     if (snakeHeadXPos == fruitX && snakeHeadYPos == fruitY) {
  2060   0015AE  5072               	movf	_fruitX^0,w,c
  2061   0015B0  1875               	xorwf	_snakeHeadXPos^0,w,c
  2062   0015B2  A4D8               	btfss	status,2,c
  2063   0015B4  EFDE  F00A         	goto	u1201
  2064   0015B8  EFE0  F00A         	goto	u1200
  2065   0015BC                     u1201:
  2066   0015BC  EF17  F00B         	goto	l230
  2067   0015C0                     u1200:
  2068   0015C0  5071               	movf	_fruitY^0,w,c
  2069   0015C2  1874               	xorwf	_snakeHeadYPos^0,w,c
  2070   0015C4  A4D8               	btfss	status,2,c
  2071   0015C6  EFE7  F00A         	goto	u1211
  2072   0015CA  EFE9  F00A         	goto	u1210
  2073   0015CE                     u1211:
  2074   0015CE  EF17  F00B         	goto	l230
  2075   0015D2                     u1210:
  2076   0015D2                     
  2077                           ;Pls.c: 174:         fruitX = random(0,15);
  2078   0015D2  0E0F               	movlw	15
  2079   0015D4  6E5E               	movwf	random@upper_bound^0,c
  2080   0015D6  0E00               	movlw	0
  2081   0015D8  ECCD  F005         	call	_random
  2082   0015DC  6E72               	movwf	_fruitX^0,c
  2083                           
  2084                           ;Pls.c: 175:         fruitY = random(0,7);
  2085   0015DE  0E07               	movlw	7
  2086   0015E0  6E5E               	movwf	random@upper_bound^0,c
  2087   0015E2  0E00               	movlw	0
  2088   0015E4  ECCD  F005         	call	_random
  2089   0015E8  6E71               	movwf	_fruitY^0,c
  2090                           
  2091                           ;Pls.c: 176:         while (fruitX == 0)
  2092   0015EA  EFFD  F00A         	goto	l1859
  2093   0015EE                     l1857:
  2094                           
  2095                           ;Pls.c: 177:             fruitX = random(0,15);
  2096   0015EE  0E0F               	movlw	15
  2097   0015F0  6E5E               	movwf	random@upper_bound^0,c
  2098   0015F2  0E00               	movlw	0
  2099   0015F4  ECCD  F005         	call	_random
  2100   0015F8  6E72               	movwf	_fruitX^0,c
  2101   0015FA                     l1859:
  2102                           
  2103                           ;Pls.c: 176:         while (fruitX == 0)
  2104   0015FA  5072               	movf	_fruitX^0,w,c
  2105   0015FC  B4D8               	btfsc	status,2,c
  2106   0015FE  EF03  F00B         	goto	u1221
  2107   001602  EF05  F00B         	goto	u1220
  2108   001606                     u1221:
  2109   001606  EFF7  F00A         	goto	l1857
  2110   00160A                     u1220:
  2111   00160A  EF0D  F00B         	goto	l1863
  2112   00160E                     l1861:
  2113                           
  2114                           ;Pls.c: 181:             fruitY = random(0,7);
  2115   00160E  0E07               	movlw	7
  2116   001610  6E5E               	movwf	random@upper_bound^0,c
  2117   001612  0E00               	movlw	0
  2118   001614  ECCD  F005         	call	_random
  2119   001618  6E71               	movwf	_fruitY^0,c
  2120   00161A                     l1863:
  2121                           
  2122                           ;Pls.c: 180:         while (fruitY == 0)
  2123   00161A  5071               	movf	_fruitY^0,w,c
  2124   00161C  B4D8               	btfsc	status,2,c
  2125   00161E  EF13  F00B         	goto	u1231
  2126   001622  EF15  F00B         	goto	u1230
  2127   001626                     u1231:
  2128   001626  EF07  F00B         	goto	l1861
  2129   00162A                     u1230:
  2130   00162A                     
  2131                           ;Pls.c: 182:          score += 1;
  2132   00162A  2A70               	incf	_score^0,f,c
  2133                           
  2134                           ;Pls.c: 183:          snakeTailLen++;
  2135   00162C  2A73               	incf	_snakeTailLen^0,f,c
  2136   00162E                     l230:
  2137   00162E  0012               	return		;funcret
  2138   001630                     __end_of_logic:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _random *****************
  2142 ;; Defined at:
  2143 ;;		line 49 in file "Pls.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  lower_bound     1    wreg     unsigned char 
  2146 ;;  upper_bound     1   24[COMRAM] unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  lower_bound     1   27[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      unsigned char 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1
  2158 ;;      Params:         1       0       0
  2159 ;;      Locals:         1       0       0
  2160 ;;      Temps:          2       0       0
  2161 ;;      Totals:         4       0       0
  2162 ;;Total ram usage:        4 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 2
  2165 ;; This function calls:
  2166 ;;		___awmod
  2167 ;;		_rand
  2168 ;; This function is called by:
  2169 ;;		_setup
  2170 ;;		_logic
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text3
  2175   000B9A                     __ptext3:
  2176                           	callstack 0
  2177   000B9A                     _random:
  2178                           	callstack 27
  2179                           
  2180                           ;incstack = 0
  2181                           ;random@lower_bound stored from wreg
  2182   000B9A  6E61               	movwf	random@lower_bound^0,c
  2183   000B9C                     
  2184                           ;Pls.c: 50:     return rand() % (upper_bound - lower_bound + 1) + lower_bound;
  2185   000B9C  EC00  F007         	call	_rand	;wreg free
  2186   000BA0  C052  F058         	movff	?_rand,___awmod@dividend
  2187   000BA4  C053  F059         	movff	?_rand+1,___awmod@dividend+1
  2188   000BA8  5061               	movf	random@lower_bound^0,w,c
  2189   000BAA  C05E  F05F         	movff	random@upper_bound,??_random
  2190   000BAE  6A60               	clrf	(??_random+1)^0,c
  2191   000BB0  5E5F               	subwf	??_random^0,f,c
  2192   000BB2  0E00               	movlw	0
  2193   000BB4  5A60               	subwfb	(??_random+1)^0,f,c
  2194   000BB6  0E01               	movlw	1
  2195   000BB8  245F               	addwf	??_random^0,w,c
  2196   000BBA  6E5A               	movwf	___awmod@divisor^0,c
  2197   000BBC  0E00               	movlw	0
  2198   000BBE  2060               	addwfc	(??_random+1)^0,w,c
  2199   000BC0  6E5B               	movwf	(___awmod@divisor+1)^0,c
  2200   000BC2  EC81  F008         	call	___awmod	;wreg free
  2201   000BC6  5058               	movf	?___awmod^0,w,c
  2202   000BC8  2461               	addwf	random@lower_bound^0,w,c
  2203   000BCA  0012               	return		;funcret
  2204   000BCC                     __end_of_random:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _rand *****************
  2208 ;; Defined at:
  2209 ;;		line 11 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\rand.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  2   12[COMRAM] int 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1
  2223 ;;      Params:         2       0       0
  2224 ;;      Locals:         0       0       0
  2225 ;;      Temps:          4       0       0
  2226 ;;      Totals:         6       0       0
  2227 ;;Total ram usage:        6 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 1
  2230 ;; This function calls:
  2231 ;;		___lmul
  2232 ;; This function is called by:
  2233 ;;		_random
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text4
  2238   000E00                     __ptext4:
  2239                           	callstack 0
  2240   000E00                     _rand:
  2241                           	callstack 27
  2242   000E00  C076  F046         	movff	_seed,___lmul@multiplier
  2243   000E04  C077  F047         	movff	_seed+1,___lmul@multiplier+1
  2244   000E08  C078  F048         	movff	_seed+2,___lmul@multiplier+2
  2245   000E0C  C079  F049         	movff	_seed+3,___lmul@multiplier+3
  2246   000E10  0E2D               	movlw	45
  2247   000E12  6E4A               	movwf	___lmul@multiplicand^0,c
  2248   000E14  0E7F               	movlw	127
  2249   000E16  6E4B               	movwf	(___lmul@multiplicand+1)^0,c
  2250   000E18  0E95               	movlw	149
  2251   000E1A  6E4C               	movwf	(___lmul@multiplicand+2)^0,c
  2252   000E1C  0E4C               	movlw	76
  2253   000E1E  6E4D               	movwf	(___lmul@multiplicand+3)^0,c
  2254   000E20  ECCB  F006         	call	___lmul	;wreg free
  2255   000E24  0E01               	movlw	1
  2256   000E26  2446               	addwf	?___lmul^0,w,c
  2257   000E28  6E76               	movwf	_seed^0,c
  2258   000E2A  0E00               	movlw	0
  2259   000E2C  2047               	addwfc	(?___lmul+1)^0,w,c
  2260   000E2E  6E77               	movwf	(_seed+1)^0,c
  2261   000E30  0E00               	movlw	0
  2262   000E32  2048               	addwfc	(?___lmul+2)^0,w,c
  2263   000E34  6E78               	movwf	(_seed+2)^0,c
  2264   000E36  0E00               	movlw	0
  2265   000E38  2049               	addwfc	(?___lmul+3)^0,w,c
  2266   000E3A  6E79               	movwf	(_seed+3)^0,c
  2267   000E3C  C076  F054         	movff	_seed,??_rand
  2268   000E40  C077  F055         	movff	_seed+1,??_rand+1
  2269   000E44  C078  F056         	movff	_seed+2,??_rand+2
  2270   000E48  C079  F057         	movff	_seed+3,??_rand+3
  2271   000E4C  0E12               	movlw	18
  2272   000E4E  EF2E  F007         	goto	u1000
  2273   000E52                     u1005:
  2274   000E52  90D8               	bcf	status,0,c
  2275   000E54  3257               	rrcf	(??_rand+3)^0,f,c
  2276   000E56  3256               	rrcf	(??_rand+2)^0,f,c
  2277   000E58  3255               	rrcf	(??_rand+1)^0,f,c
  2278   000E5A  3254               	rrcf	??_rand^0,f,c
  2279   000E5C                     u1000:
  2280   000E5C  2EE8               	decfsz	wreg,f,c
  2281   000E5E  EF29  F007         	goto	u1005
  2282   000E62  C054  F052         	movff	??_rand,?_rand
  2283   000E66  C055  F053         	movff	??_rand+1,?_rand+1
  2284   000E6A  0012               	return		;funcret
  2285   000E6C                     __end_of_rand:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function ___lmul *****************
  2289 ;; Defined at:
  2290 ;;		line 15 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  multiplier      4    0[COMRAM] unsigned long 
  2293 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  product         4    8[COMRAM] unsigned long 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  4    0[COMRAM] unsigned long 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1
  2305 ;;      Params:         8       0       0
  2306 ;;      Locals:         4       0       0
  2307 ;;      Temps:          0       0       0
  2308 ;;      Totals:        12       0       0
  2309 ;;Total ram usage:       12 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_rand
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text5
  2319   000D96                     __ptext5:
  2320                           	callstack 0
  2321   000D96                     ___lmul:
  2322                           	callstack 27
  2323   000D96  0E00               	movlw	0
  2324   000D98  6E4E               	movwf	___lmul@product^0,c
  2325   000D9A  0E00               	movlw	0
  2326   000D9C  6E4F               	movwf	(___lmul@product+1)^0,c
  2327   000D9E  0E00               	movlw	0
  2328   000DA0  6E50               	movwf	(___lmul@product+2)^0,c
  2329   000DA2  0E00               	movlw	0
  2330   000DA4  6E51               	movwf	(___lmul@product+3)^0,c
  2331   000DA6                     l1529:
  2332   000DA6  A046               	btfss	___lmul@multiplier^0,0,c
  2333   000DA8  EFD8  F006         	goto	u771
  2334   000DAC  EFDA  F006         	goto	u770
  2335   000DB0                     u771:
  2336   000DB0  EFE2  F006         	goto	l1533
  2337   000DB4                     u770:
  2338   000DB4  504A               	movf	___lmul@multiplicand^0,w,c
  2339   000DB6  264E               	addwf	___lmul@product^0,f,c
  2340   000DB8  504B               	movf	(___lmul@multiplicand+1)^0,w,c
  2341   000DBA  224F               	addwfc	(___lmul@product+1)^0,f,c
  2342   000DBC  504C               	movf	(___lmul@multiplicand+2)^0,w,c
  2343   000DBE  2250               	addwfc	(___lmul@product+2)^0,f,c
  2344   000DC0  504D               	movf	(___lmul@multiplicand+3)^0,w,c
  2345   000DC2  2251               	addwfc	(___lmul@product+3)^0,f,c
  2346   000DC4                     l1533:
  2347   000DC4  90D8               	bcf	status,0,c
  2348   000DC6  364A               	rlcf	___lmul@multiplicand^0,f,c
  2349   000DC8  364B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2350   000DCA  364C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2351   000DCC  364D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2352   000DCE  90D8               	bcf	status,0,c
  2353   000DD0  3249               	rrcf	(___lmul@multiplier+3)^0,f,c
  2354   000DD2  3248               	rrcf	(___lmul@multiplier+2)^0,f,c
  2355   000DD4  3247               	rrcf	(___lmul@multiplier+1)^0,f,c
  2356   000DD6  3246               	rrcf	___lmul@multiplier^0,f,c
  2357   000DD8  5046               	movf	___lmul@multiplier^0,w,c
  2358   000DDA  1047               	iorwf	(___lmul@multiplier+1)^0,w,c
  2359   000DDC  1048               	iorwf	(___lmul@multiplier+2)^0,w,c
  2360   000DDE  1049               	iorwf	(___lmul@multiplier+3)^0,w,c
  2361   000DE0  A4D8               	btfss	status,2,c
  2362   000DE2  EFF5  F006         	goto	u781
  2363   000DE6  EFF7  F006         	goto	u780
  2364   000DEA                     u781:
  2365   000DEA  EFD3  F006         	goto	l1529
  2366   000DEE                     u780:
  2367   000DEE  C04E  F046         	movff	___lmul@product,?___lmul
  2368   000DF2  C04F  F047         	movff	___lmul@product+1,?___lmul+1
  2369   000DF6  C050  F048         	movff	___lmul@product+2,?___lmul+2
  2370   000DFA  C051  F049         	movff	___lmul@product+3,?___lmul+3
  2371   000DFE  0012               	return		;funcret
  2372   000E00                     __end_of___lmul:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function ___awmod *****************
  2376 ;; Defined at:
  2377 ;;		line 7 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  dividend        2   18[COMRAM] int 
  2380 ;;  divisor         2   20[COMRAM] int 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  sign            1   23[COMRAM] unsigned char 
  2383 ;;  counter         1   22[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2   18[COMRAM] int 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1
  2393 ;;      Params:         4       0       0
  2394 ;;      Locals:         2       0       0
  2395 ;;      Temps:          0       0       0
  2396 ;;      Totals:         6       0       0
  2397 ;;Total ram usage:        6 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_random
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text6
  2407   001102                     __ptext6:
  2408                           	callstack 0
  2409   001102                     ___awmod:
  2410                           	callstack 28
  2411   001102  6A5D               	clrf	___awmod@sign^0,c
  2412   001104  BE59               	btfsc	(___awmod@dividend+1)^0,7,c
  2413   001106  EF89  F008         	goto	u1010
  2414   00110A  EF87  F008         	goto	u1011
  2415   00110E                     u1011:
  2416   00110E  EF8F  F008         	goto	l1677
  2417   001112                     u1010:
  2418   001112  6C58               	negf	___awmod@dividend^0,c
  2419   001114  1E59               	comf	(___awmod@dividend+1)^0,f,c
  2420   001116  B0D8               	btfsc	status,0,c
  2421   001118  2A59               	incf	(___awmod@dividend+1)^0,f,c
  2422   00111A  0E01               	movlw	1
  2423   00111C  6E5D               	movwf	___awmod@sign^0,c
  2424   00111E                     l1677:
  2425   00111E  BE5B               	btfsc	(___awmod@divisor+1)^0,7,c
  2426   001120  EF96  F008         	goto	u1020
  2427   001124  EF94  F008         	goto	u1021
  2428   001128                     u1021:
  2429   001128  EF9A  F008         	goto	l1681
  2430   00112C                     u1020:
  2431   00112C  6C5A               	negf	___awmod@divisor^0,c
  2432   00112E  1E5B               	comf	(___awmod@divisor+1)^0,f,c
  2433   001130  B0D8               	btfsc	status,0,c
  2434   001132  2A5B               	incf	(___awmod@divisor+1)^0,f,c
  2435   001134                     l1681:
  2436   001134  505A               	movf	___awmod@divisor^0,w,c
  2437   001136  105B               	iorwf	(___awmod@divisor+1)^0,w,c
  2438   001138  B4D8               	btfsc	status,2,c
  2439   00113A  EFA1  F008         	goto	u1031
  2440   00113E  EFA3  F008         	goto	u1030
  2441   001142                     u1031:
  2442   001142  EFC7  F008         	goto	l1697
  2443   001146                     u1030:
  2444   001146  0E01               	movlw	1
  2445   001148  6E5C               	movwf	___awmod@counter^0,c
  2446   00114A  EFAB  F008         	goto	l1687
  2447   00114E                     l1685:
  2448   00114E  90D8               	bcf	status,0,c
  2449   001150  365A               	rlcf	___awmod@divisor^0,f,c
  2450   001152  365B               	rlcf	(___awmod@divisor+1)^0,f,c
  2451   001154  2A5C               	incf	___awmod@counter^0,f,c
  2452   001156                     l1687:
  2453   001156  AE5B               	btfss	(___awmod@divisor+1)^0,7,c
  2454   001158  EFB0  F008         	goto	u1041
  2455   00115C  EFB2  F008         	goto	u1040
  2456   001160                     u1041:
  2457   001160  EFA7  F008         	goto	l1685
  2458   001164                     u1040:
  2459   001164                     l1689:
  2460   001164  505A               	movf	___awmod@divisor^0,w,c
  2461   001166  5C58               	subwf	___awmod@dividend^0,w,c
  2462   001168  505B               	movf	(___awmod@divisor+1)^0,w,c
  2463   00116A  5859               	subwfb	(___awmod@dividend+1)^0,w,c
  2464   00116C  A0D8               	btfss	status,0,c
  2465   00116E  EFBB  F008         	goto	u1051
  2466   001172  EFBD  F008         	goto	u1050
  2467   001176                     u1051:
  2468   001176  EFC1  F008         	goto	l1693
  2469   00117A                     u1050:
  2470   00117A  505A               	movf	___awmod@divisor^0,w,c
  2471   00117C  5E58               	subwf	___awmod@dividend^0,f,c
  2472   00117E  505B               	movf	(___awmod@divisor+1)^0,w,c
  2473   001180  5A59               	subwfb	(___awmod@dividend+1)^0,f,c
  2474   001182                     l1693:
  2475   001182  90D8               	bcf	status,0,c
  2476   001184  325B               	rrcf	(___awmod@divisor+1)^0,f,c
  2477   001186  325A               	rrcf	___awmod@divisor^0,f,c
  2478   001188  2E5C               	decfsz	___awmod@counter^0,f,c
  2479   00118A  EFB2  F008         	goto	l1689
  2480   00118E                     l1697:
  2481   00118E  505D               	movf	___awmod@sign^0,w,c
  2482   001190  B4D8               	btfsc	status,2,c
  2483   001192  EFCD  F008         	goto	u1061
  2484   001196  EFCF  F008         	goto	u1060
  2485   00119A                     u1061:
  2486   00119A  EFD3  F008         	goto	l1701
  2487   00119E                     u1060:
  2488   00119E  6C58               	negf	___awmod@dividend^0,c
  2489   0011A0  1E59               	comf	(___awmod@dividend+1)^0,f,c
  2490   0011A2  B0D8               	btfsc	status,0,c
  2491   0011A4  2A59               	incf	(___awmod@dividend+1)^0,f,c
  2492   0011A6                     l1701:
  2493   0011A6  C058  F058         	movff	___awmod@dividend,?___awmod
  2494   0011AA  C059  F059         	movff	___awmod@dividend+1,?___awmod+1
  2495   0011AE  0012               	return		;funcret
  2496   0011B0                     __end_of___awmod:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _input *****************
  2500 ;; Defined at:
  2501 ;;		line 52 in file "Pls.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1
  2515 ;;      Params:         0       0       0
  2516 ;;      Locals:         0       0       0
  2517 ;;      Temps:          0       0       0
  2518 ;;      Totals:         0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text7
  2529   000F46                     __ptext7:
  2530                           	callstack 0
  2531   000F46                     _input:
  2532                           	callstack 30
  2533   000F46                     
  2534                           ;Pls.c: 53:     if(PORTAbits.RA2 == 1)
  2535   000F46  A480               	btfss	128,2,c	;volatile
  2536   000F48  EFA8  F007         	goto	u391
  2537   000F4C  EFAA  F007         	goto	u390
  2538   000F50                     u391:
  2539   000F50  EFAE  F007         	goto	l165
  2540   000F54                     u390:
  2541   000F54                     
  2542                           ;Pls.c: 54:         key = 1;
  2543   000F54  0E01               	movlw	1
  2544   000F56  6E6F               	movwf	_key^0,c
  2545   000F58  EFDA  F007         	goto	l174
  2546   000F5C                     l165:
  2547   000F5C  A680               	btfss	128,3,c	;volatile
  2548   000F5E  EFB3  F007         	goto	u401
  2549   000F62  EFB5  F007         	goto	u400
  2550   000F66                     u401:
  2551   000F66  EFB9  F007         	goto	l167
  2552   000F6A                     u400:
  2553   000F6A                     
  2554                           ;Pls.c: 56:         key = 2;
  2555   000F6A  0E02               	movlw	2
  2556   000F6C  6E6F               	movwf	_key^0,c
  2557   000F6E  EFDA  F007         	goto	l174
  2558   000F72                     l167:
  2559   000F72  A080               	btfss	128,0,c	;volatile
  2560   000F74  EFBE  F007         	goto	u411
  2561   000F78  EFC0  F007         	goto	u410
  2562   000F7C                     u411:
  2563   000F7C  EFC4  F007         	goto	l169
  2564   000F80                     u410:
  2565   000F80                     
  2566                           ;Pls.c: 58:         key = 3;
  2567   000F80  0E03               	movlw	3
  2568   000F82  6E6F               	movwf	_key^0,c
  2569   000F84  EFDA  F007         	goto	l174
  2570   000F88                     l169:
  2571   000F88  A280               	btfss	128,1,c	;volatile
  2572   000F8A  EFC9  F007         	goto	u421
  2573   000F8E  EFCB  F007         	goto	u420
  2574   000F92                     u421:
  2575   000F92  EFCF  F007         	goto	l171
  2576   000F96                     u420:
  2577   000F96                     
  2578                           ;Pls.c: 60:         key = 4;
  2579   000F96  0E04               	movlw	4
  2580   000F98  6E6F               	movwf	_key^0,c
  2581   000F9A  EFDA  F007         	goto	l174
  2582   000F9E                     l171:
  2583   000F9E  A880               	btfss	128,4,c	;volatile
  2584   000FA0  EFD4  F007         	goto	u431
  2585   000FA4  EFD6  F007         	goto	u430
  2586   000FA8                     u431:
  2587   000FA8  EFDA  F007         	goto	l168
  2588   000FAC                     u430:
  2589   000FAC                     
  2590                           ;Pls.c: 62:         gameover = 1;
  2591   000FAC  0E01               	movlw	1
  2592   000FAE  6E6C               	movwf	_gameover^0,c
  2593   000FB0  EFDA  F007         	goto	l174
  2594   000FB4                     l168:
  2595   000FB4                     l174:
  2596   000FB4  0012               	return		;funcret
  2597   000FB6                     __end_of_input:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _draw *****************
  2601 ;; Defined at:
  2602 ;;		line 187 in file "Pls.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  k               1   35[COMRAM] unsigned char 
  2607 ;;  prTail          1    0        unsigned char 
  2608 ;;  j               1   37[COMRAM] unsigned char 
  2609 ;;  i               1   36[COMRAM] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1
  2619 ;;      Params:         0       0       0
  2620 ;;      Locals:         3       0       0
  2621 ;;      Temps:          1       0       0
  2622 ;;      Totals:         4       0       0
  2623 ;;Total ram usage:        4 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 4
  2626 ;; This function calls:
  2627 ;;		_clearAllChar
  2628 ;;		_drawGraphics
  2629 ;;		_placeChar
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text8
  2636   001054                     __ptext8:
  2637                           	callstack 0
  2638   001054                     _draw:
  2639                           	callstack 26
  2640   001054                     
  2641                           ;Pls.c: 188:     clearAllChar();
  2642   001054  ECE6  F005         	call	_clearAllChar	;wreg free
  2643                           
  2644                           ;Pls.c: 189:     placeChar(snakeHeadXPos,snakeHeadYPos,'O');
  2645   001058  C074  F046         	movff	_snakeHeadYPos,placeChar@y
  2646   00105C  0E4F               	movlw	79
  2647   00105E  6E47               	movwf	placeChar@c^0,c
  2648   001060  5075               	movf	_snakeHeadXPos^0,w,c
  2649   001062  ECD8  F008         	call	_placeChar
  2650                           
  2651                           ;Pls.c: 190:     placeChar(fruitX,fruitY,'a');
  2652   001066  C071  F046         	movff	_fruitY,placeChar@y
  2653   00106A  0E61               	movlw	97
  2654   00106C  6E47               	movwf	placeChar@c^0,c
  2655   00106E  5072               	movf	_fruitX^0,w,c
  2656   001070  ECD8  F008         	call	_placeChar
  2657   001074                     
  2658                           ;Pls.c: 193:     for (unsigned char i = 0; i < 8; i++) {
  2659   001074  6A6A               	clrf	draw@i^0,c
  2660   001076                     l233:
  2661                           
  2662                           ;Pls.c: 194:         for (unsigned char j = 0; j <= 16; j++) {
  2663   001076  6A6B               	clrf	draw@j^0,c
  2664   001078                     l235:
  2665                           
  2666                           ;Pls.c: 196:                 for (unsigned char k = 0; k < snakeTailLen; k++) {
  2667   001078  6A69               	clrf	draw@k^0,c
  2668   00107A  EF63  F008         	goto	l1889
  2669   00107E                     l1879:
  2670                           
  2671                           ;Pls.c: 197:                     if (snakeTailX[k] == j && snakeTailY[k] == i) {
  2672   00107E  5069               	movf	draw@k^0,w,c
  2673   001080  0FC4               	addlw	low _snakeTailX
  2674   001082  6ED9               	movwf	fsr2l,c
  2675   001084  6ADA               	clrf	fsr2h,c
  2676   001086  506B               	movf	draw@j^0,w,c
  2677   001088  18DE               	xorwf	postinc2,w,c
  2678   00108A  A4D8               	btfss	status,2,c
  2679   00108C  EF4A  F008         	goto	u1241
  2680   001090  EF4C  F008         	goto	u1240
  2681   001094                     u1241:
  2682   001094  EF62  F008         	goto	l1887
  2683   001098                     u1240:
  2684   001098  0E00               	movlw	low _snakeTailY
  2685   00109A  2469               	addwf	draw@k^0,w,c
  2686   00109C  6ED9               	movwf	fsr2l,c
  2687   00109E  6ADA               	clrf	fsr2h,c
  2688   0010A0  0E01               	movlw	high _snakeTailY
  2689   0010A2  22DA               	addwfc	fsr2h,f,c
  2690   0010A4  506A               	movf	draw@i^0,w,c
  2691   0010A6  18DE               	xorwf	postinc2,w,c
  2692   0010A8  A4D8               	btfss	status,2,c
  2693   0010AA  EF59  F008         	goto	u1251
  2694   0010AE  EF5B  F008         	goto	u1250
  2695   0010B2                     u1251:
  2696   0010B2  EF62  F008         	goto	l1887
  2697   0010B6                     u1250:
  2698   0010B6                     
  2699                           ;Pls.c: 198:                         placeChar(j,i,'#');
  2700   0010B6  C06A  F046         	movff	draw@i,placeChar@y
  2701   0010BA  0E23               	movlw	35
  2702   0010BC  6E47               	movwf	placeChar@c^0,c
  2703   0010BE  506B               	movf	draw@j^0,w,c
  2704   0010C0  ECD8  F008         	call	_placeChar
  2705   0010C4                     l1887:
  2706                           
  2707                           ;Pls.c: 201:                 }
  2708   0010C4  2A69               	incf	draw@k^0,f,c
  2709   0010C6                     l1889:
  2710   0010C6  5073               	movf	_snakeTailLen^0,w,c
  2711   0010C8  5C69               	subwf	draw@k^0,w,c
  2712   0010CA  A0D8               	btfss	status,0,c
  2713   0010CC  EF6A  F008         	goto	u1261
  2714   0010D0  EF6C  F008         	goto	u1260
  2715   0010D4                     u1261:
  2716   0010D4  EF3F  F008         	goto	l1879
  2717   0010D8                     u1260:
  2718   0010D8                     
  2719                           ;Pls.c: 202:         }
  2720   0010D8  2A6B               	incf	draw@j^0,f,c
  2721   0010DA  0E10               	movlw	16
  2722   0010DC  646B               	cpfsgt	draw@j^0,c
  2723   0010DE  EF73  F008         	goto	u1271
  2724   0010E2  EF75  F008         	goto	u1270
  2725   0010E6                     u1271:
  2726   0010E6  EF3C  F008         	goto	l235
  2727   0010EA                     u1270:
  2728   0010EA                     
  2729                           ;Pls.c: 204:     }
  2730   0010EA  2A6A               	incf	draw@i^0,f,c
  2731   0010EC  0E07               	movlw	7
  2732   0010EE  646A               	cpfsgt	draw@i^0,c
  2733   0010F0  EF7C  F008         	goto	u1281
  2734   0010F4  EF7E  F008         	goto	u1280
  2735   0010F8                     u1281:
  2736   0010F8  EF3B  F008         	goto	l233
  2737   0010FC                     u1280:
  2738   0010FC                     
  2739                           ;Pls.c: 206:     drawGraphics();
  2740   0010FC  EC66  F006         	call	_drawGraphics	;wreg free
  2741   001100  0012               	return		;funcret
  2742   001102                     __end_of_draw:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _drawGraphics *****************
  2746 ;; Defined at:
  2747 ;;		line 39 in file "Pls.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1
  2761 ;;      Params:         0       0       0
  2762 ;;      Locals:         0       0       0
  2763 ;;      Temps:          0       0       0
  2764 ;;      Totals:         0       0       0
  2765 ;;Total ram usage:        0 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 3
  2768 ;; This function calls:
  2769 ;;		_LCD_GraphicsDisplayString
  2770 ;; This function is called by:
  2771 ;;		_draw
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text9
  2776   000CCC                     __ptext9:
  2777                           	callstack 0
  2778   000CCC                     _drawGraphics:
  2779                           	callstack 26
  2780   000CCC                     
  2781                           ;Pls.c: 40:     LCD_GraphicsDisplayString(0,LCDStore0);
  2782   000CCC  0E35               	movlw	low _LCDStore0
  2783   000CCE  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2784   000CD0  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2785   000CD2  0E00               	movlw	0
  2786   000CD4  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2787                           
  2788                           ;Pls.c: 41:     LCD_GraphicsDisplayString(1,LCDStore1);
  2789   000CD8  0E24               	movlw	low _LCDStore1
  2790   000CDA  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2791   000CDC  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2792   000CDE  0E01               	movlw	1
  2793   000CE0  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2794                           
  2795                           ;Pls.c: 42:     LCD_GraphicsDisplayString(2,LCDStore2);
  2796   000CE4  0E13               	movlw	low _LCDStore2
  2797   000CE6  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2798   000CE8  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2799   000CEA  0E02               	movlw	2
  2800   000CEC  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2801                           
  2802                           ;Pls.c: 43:     LCD_GraphicsDisplayString(3,LCDStore3);
  2803   000CF0  0E02               	movlw	low _LCDStore3
  2804   000CF2  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2805   000CF4  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2806   000CF6  0E03               	movlw	3
  2807   000CF8  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2808                           
  2809                           ;Pls.c: 44:     LCD_GraphicsDisplayString(4,LCDStore4);
  2810   000CFC  0EB3               	movlw	low _LCDStore4
  2811   000CFE  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2812   000D00  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2813   000D02  0E04               	movlw	4
  2814   000D04  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2815                           
  2816                           ;Pls.c: 45:     LCD_GraphicsDisplayString(5,LCDStore5);
  2817   000D08  0EA2               	movlw	low _LCDStore5
  2818   000D0A  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2819   000D0C  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2820   000D0E  0E05               	movlw	5
  2821   000D10  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2822                           
  2823                           ;Pls.c: 46:     LCD_GraphicsDisplayString(6,LCDStore6);
  2824   000D14  0E91               	movlw	low _LCDStore6
  2825   000D16  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2826   000D18  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2827   000D1A  0E06               	movlw	6
  2828   000D1C  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2829                           
  2830                           ;Pls.c: 47:     LCD_GraphicsDisplayString(7,LCDStore7);
  2831   000D20  0E80               	movlw	low _LCDStore7
  2832   000D22  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  2833   000D24  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  2834   000D26  0E07               	movlw	7
  2835   000D28  EC18  F00B         	call	_LCD_GraphicsDisplayString
  2836   000D2C  0012               	return		;funcret
  2837   000D2E                     __end_of_drawGraphics:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _LCD_GraphicsDisplayString *****************
  2841 ;; Defined at:
  2842 ;;		line 100 in file "12864_lcd.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  line            1    wreg     unsigned char 
  2845 ;;  str             2    4[COMRAM] PTR unsigned char 
  2846 ;;		 -> STR_8(12), STR_7(15), STR_6(16), STR_5(17), 
  2847 ;;		 -> STR_4(16), STR_3(17), STR_2(17), STR_1(6), 
  2848 ;;		 -> LCDStore7(17), LCDStore6(17), LCDStore5(17), LCDStore4(17), 
  2849 ;;		 -> LCDStore3(17), LCDStore2(17), LCDStore1(17), LCDStore0(17), 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  line            1   27[COMRAM] unsigned char 
  2852 ;;  dataB           1   26[COMRAM] unsigned char 
  2853 ;;  dataA           1   25[COMRAM] unsigned char 
  2854 ;;  colListB        5   19[COMRAM] unsigned char [5]
  2855 ;;  colListA        5   14[COMRAM] unsigned char [5]
  2856 ;;  indB            1   33[COMRAM] unsigned char 
  2857 ;;  indA            1   32[COMRAM] unsigned char 
  2858 ;;  letterB         1   29[COMRAM] unsigned char 
  2859 ;;  letterA         1   28[COMRAM] unsigned char 
  2860 ;;  colInd          1   31[COMRAM] unsigned char 
  2861 ;;  row             1   30[COMRAM] unsigned char 
  2862 ;;  count           1   24[COMRAM] unsigned char 
  2863 ;;  shouldContin    1   13[COMRAM] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1
  2873 ;;      Params:         2       0       0
  2874 ;;      Locals:        25       0       0
  2875 ;;      Temps:          3       0       0
  2876 ;;      Totals:        30       0       0
  2877 ;;Total ram usage:       30 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 2
  2880 ;; This function calls:
  2881 ;;		_LCD_WriteCommand
  2882 ;;		_LCD_WriteData
  2883 ;; This function is called by:
  2884 ;;		_drawGraphics
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text10
  2890   001630                     __ptext10:
  2891                           	callstack 0
  2892   001630                     _LCD_GraphicsDisplayString:
  2893                           	callstack 26
  2894                           
  2895                           ;incstack = 0
  2896                           ;LCD_GraphicsDisplayString@line stored from wreg
  2897   001630  6E61               	movwf	LCD_GraphicsDisplayString@line^0,c
  2898   001632  0E01               	movlw	1
  2899   001634  6E53               	movwf	LCD_GraphicsDisplayString@shouldContinue^0,c
  2900   001636  6A5E               	clrf	LCD_GraphicsDisplayString@count^0,c
  2901   001638  EF5C  F00D         	goto	l1637
  2902   00163C                     l1541:
  2903   00163C  C04A  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  2904   001640  C04B  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  2905   001644  6AF8               	clrf	tblptru,c
  2906   001646  0E01               	movlw	(high __ramtop+-1)
  2907   001648  64F7               	cpfsgt	tblptrh,c
  2908   00164A  D003               	bra	u797
  2909   00164C  0008               	tblrd		*
  2910   00164E  50F5               	movf	tablat,w,c
  2911   001650  D005               	bra	u790
  2912   001652                     u797:
  2913   001652  CFF6 FFE9          	movff	tblptrl,fsr0l
  2914   001656  CFF7 FFEA          	movff	tblptrh,fsr0h
  2915   00165A  50EF               	movf	indf0,w,c
  2916   00165C                     u790:
  2917   00165C  6E62               	movwf	LCD_GraphicsDisplayString@letterA^0,c
  2918   00165E  4A4A               	infsnz	LCD_GraphicsDisplayString@str^0,f,c
  2919   001660  2A4B               	incf	(LCD_GraphicsDisplayString@str+1)^0,f,c
  2920   001662  5062               	movf	LCD_GraphicsDisplayString@letterA^0,w,c
  2921   001664  A4D8               	btfss	status,2,c
  2922   001666  EF37  F00B         	goto	u801
  2923   00166A  EF39  F00B         	goto	u800
  2924   00166E                     u801:
  2925   00166E  EF3C  F00B         	goto	l1551
  2926   001672                     u800:
  2927   001672  0E20               	movlw	32
  2928   001674  6E62               	movwf	LCD_GraphicsDisplayString@letterA^0,c
  2929   001676  6A53               	clrf	LCD_GraphicsDisplayString@shouldContinue^0,c
  2930   001678                     l1551:
  2931   001678  C04A  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  2932   00167C  C04B  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  2933   001680  6AF8               	clrf	tblptru,c
  2934   001682  0E01               	movlw	(high __ramtop+-1)
  2935   001684  64F7               	cpfsgt	tblptrh,c
  2936   001686  D003               	bra	u817
  2937   001688  0008               	tblrd		*
  2938   00168A  50F5               	movf	tablat,w,c
  2939   00168C  D005               	bra	u810
  2940   00168E                     u817:
  2941   00168E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2942   001692  CFF7 FFEA          	movff	tblptrh,fsr0h
  2943   001696  50EF               	movf	indf0,w,c
  2944   001698                     u810:
  2945   001698  6E63               	movwf	LCD_GraphicsDisplayString@letterB^0,c
  2946   00169A  4A4A               	infsnz	LCD_GraphicsDisplayString@str^0,f,c
  2947   00169C  2A4B               	incf	(LCD_GraphicsDisplayString@str+1)^0,f,c
  2948   00169E  5063               	movf	LCD_GraphicsDisplayString@letterB^0,w,c
  2949   0016A0  A4D8               	btfss	status,2,c
  2950   0016A2  EF55  F00B         	goto	u821
  2951   0016A6  EF57  F00B         	goto	u820
  2952   0016AA                     u821:
  2953   0016AA  EF5A  F00B         	goto	l1561
  2954   0016AE                     u820:
  2955   0016AE  0E20               	movlw	32
  2956   0016B0  6E63               	movwf	LCD_GraphicsDisplayString@letterB^0,c
  2957   0016B2  6A53               	clrf	LCD_GraphicsDisplayString@shouldContinue^0,c
  2958   0016B4                     l1561:
  2959   0016B4  0E51               	movlw	81
  2960   0016B6  6462               	cpfsgt	LCD_GraphicsDisplayString@letterA^0,c
  2961   0016B8  EF60  F00B         	goto	u831
  2962   0016BC  EF62  F00B         	goto	u830
  2963   0016C0                     u831:
  2964   0016C0  EF6A  F00B         	goto	l1565
  2965   0016C4                     u830:
  2966   0016C4  0EAE               	movlw	174
  2967   0016C6  2462               	addwf	LCD_GraphicsDisplayString@letterA^0,w,c
  2968   0016C8  6E4F               	movwf	_LCD_GraphicsDisplayString$113^0,c
  2969   0016CA  6A50               	clrf	(_LCD_GraphicsDisplayString$113+1)^0,c
  2970   0016CC  0EFF               	movlw	255
  2971   0016CE  2250               	addwfc	(_LCD_GraphicsDisplayString$113+1)^0,f,c
  2972   0016D0  EF70  F00B         	goto	l1567
  2973   0016D4                     l1565:
  2974   0016D4  0EE0               	movlw	224
  2975   0016D6  2462               	addwf	LCD_GraphicsDisplayString@letterA^0,w,c
  2976   0016D8  6E4F               	movwf	_LCD_GraphicsDisplayString$113^0,c
  2977   0016DA  6A50               	clrf	(_LCD_GraphicsDisplayString$113+1)^0,c
  2978   0016DC  0EFF               	movlw	255
  2979   0016DE  2250               	addwfc	(_LCD_GraphicsDisplayString$113+1)^0,f,c
  2980   0016E0                     l1567:
  2981   0016E0  C04F  F066         	movff	_LCD_GraphicsDisplayString$113,LCD_GraphicsDisplayString@indA
  2982   0016E4  0E51               	movlw	81
  2983   0016E6  6463               	cpfsgt	LCD_GraphicsDisplayString@letterB^0,c
  2984   0016E8  EF78  F00B         	goto	u841
  2985   0016EC  EF7A  F00B         	goto	u840
  2986   0016F0                     u841:
  2987   0016F0  EF82  F00B         	goto	l1571
  2988   0016F4                     u840:
  2989   0016F4  0EAE               	movlw	174
  2990   0016F6  2463               	addwf	LCD_GraphicsDisplayString@letterB^0,w,c
  2991   0016F8  6E51               	movwf	_LCD_GraphicsDisplayString$115^0,c
  2992   0016FA  6A52               	clrf	(_LCD_GraphicsDisplayString$115+1)^0,c
  2993   0016FC  0EFF               	movlw	255
  2994   0016FE  2252               	addwfc	(_LCD_GraphicsDisplayString$115+1)^0,f,c
  2995   001700  EF88  F00B         	goto	l1573
  2996   001704                     l1571:
  2997   001704  0EE0               	movlw	224
  2998   001706  2463               	addwf	LCD_GraphicsDisplayString@letterB^0,w,c
  2999   001708  6E51               	movwf	_LCD_GraphicsDisplayString$115^0,c
  3000   00170A  6A52               	clrf	(_LCD_GraphicsDisplayString$115+1)^0,c
  3001   00170C  0EFF               	movlw	255
  3002   00170E  2252               	addwfc	(_LCD_GraphicsDisplayString$115+1)^0,f,c
  3003   001710                     l1573:
  3004   001710  C051  F067         	movff	_LCD_GraphicsDisplayString$115,LCD_GraphicsDisplayString@indB
  3005   001714  0E52               	movlw	82
  3006   001716  6062               	cpfslt	LCD_GraphicsDisplayString@letterA^0,c
  3007   001718  EF90  F00B         	goto	u851
  3008   00171C  EF92  F00B         	goto	u850
  3009   001720                     u851:
  3010   001720  EFDB  F00B         	goto	l1577
  3011   001724                     u850:
  3012   001724  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3013   001726  0D05               	mullw	5
  3014   001728  0EFB               	movlw	low _Alpha1
  3015   00172A  24F3               	addwf	243,w,c
  3016   00172C  6EF6               	movwf	tblptrl,c
  3017   00172E  0E1A               	movlw	high _Alpha1
  3018   001730  20F4               	addwfc	244,w,c
  3019   001732  6EF7               	movwf	tblptrh,c
  3020   001734                     	if	0	;There are less than 3 active tblptr bytes
  3021   001734                     	endif
  3022   001734  0008               	tblrd		*
  3023   001736  CFF5 F058          	movff	tablat,LCD_GraphicsDisplayString@colListA+4
  3024   00173A  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3025   00173C  0D05               	mullw	5
  3026   00173E  0E01               	movlw	1
  3027   001740  26F3               	addwf	243,f,c
  3028   001742  0E00               	movlw	0
  3029   001744  22F4               	addwfc	244,f,c
  3030   001746  0EFB               	movlw	low _Alpha1
  3031   001748  24F3               	addwf	243,w,c
  3032   00174A  6EF6               	movwf	tblptrl,c
  3033   00174C  0E1A               	movlw	high _Alpha1
  3034   00174E  20F4               	addwfc	244,w,c
  3035   001750  6EF7               	movwf	tblptrh,c
  3036   001752                     	if	0	;There are less than 3 active tblptr bytes
  3037   001752                     	endif
  3038   001752  0008               	tblrd		*
  3039   001754  CFF5 F057          	movff	tablat,LCD_GraphicsDisplayString@colListA+3
  3040   001758  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3041   00175A  0D05               	mullw	5
  3042   00175C  0E02               	movlw	2
  3043   00175E  26F3               	addwf	243,f,c
  3044   001760  0E00               	movlw	0
  3045   001762  22F4               	addwfc	244,f,c
  3046   001764  0EFB               	movlw	low _Alpha1
  3047   001766  24F3               	addwf	243,w,c
  3048   001768  6EF6               	movwf	tblptrl,c
  3049   00176A  0E1A               	movlw	high _Alpha1
  3050   00176C  20F4               	addwfc	244,w,c
  3051   00176E  6EF7               	movwf	tblptrh,c
  3052   001770                     	if	0	;There are less than 3 active tblptr bytes
  3053   001770                     	endif
  3054   001770  0008               	tblrd		*
  3055   001772  CFF5 F056          	movff	tablat,LCD_GraphicsDisplayString@colListA+2
  3056   001776  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3057   001778  0D05               	mullw	5
  3058   00177A  0E03               	movlw	3
  3059   00177C  26F3               	addwf	243,f,c
  3060   00177E  0E00               	movlw	0
  3061   001780  22F4               	addwfc	244,f,c
  3062   001782  0EFB               	movlw	low _Alpha1
  3063   001784  24F3               	addwf	243,w,c
  3064   001786  6EF6               	movwf	tblptrl,c
  3065   001788  0E1A               	movlw	high _Alpha1
  3066   00178A  20F4               	addwfc	244,w,c
  3067   00178C  6EF7               	movwf	tblptrh,c
  3068   00178E                     	if	0	;There are less than 3 active tblptr bytes
  3069   00178E                     	endif
  3070   00178E  0008               	tblrd		*
  3071   001790  CFF5 F055          	movff	tablat,LCD_GraphicsDisplayString@colListA+1
  3072   001794  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3073   001796  0D05               	mullw	5
  3074   001798  0E04               	movlw	4
  3075   00179A  26F3               	addwf	243,f,c
  3076   00179C  0E00               	movlw	0
  3077   00179E  22F4               	addwfc	244,f,c
  3078   0017A0  0EFB               	movlw	low _Alpha1
  3079   0017A2  24F3               	addwf	243,w,c
  3080   0017A4  6EF6               	movwf	tblptrl,c
  3081   0017A6  0E1A               	movlw	high _Alpha1
  3082   0017A8  20F4               	addwfc	244,w,c
  3083   0017AA  6EF7               	movwf	tblptrh,c
  3084   0017AC                     	if	0	;There are less than 3 active tblptr bytes
  3085   0017AC                     	endif
  3086   0017AC  0008               	tblrd		*
  3087   0017AE  CFF5 F054          	movff	tablat,LCD_GraphicsDisplayString@colListA
  3088   0017B2  EF22  F00C         	goto	l1579
  3089   0017B6                     l1577:
  3090   0017B6  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3091   0017B8  0D05               	mullw	5
  3092   0017BA  0EF5               	movlw	low _Alpha2
  3093   0017BC  24F3               	addwf	243,w,c
  3094   0017BE  6EF6               	movwf	tblptrl,c
  3095   0017C0  0E1B               	movlw	high _Alpha2
  3096   0017C2  20F4               	addwfc	244,w,c
  3097   0017C4  6EF7               	movwf	tblptrh,c
  3098   0017C6                     	if	0	;There are less than 3 active tblptr bytes
  3099   0017C6                     	endif
  3100   0017C6  0008               	tblrd		*
  3101   0017C8  CFF5 F058          	movff	tablat,LCD_GraphicsDisplayString@colListA+4
  3102   0017CC  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3103   0017CE  0D05               	mullw	5
  3104   0017D0  0E01               	movlw	1
  3105   0017D2  26F3               	addwf	243,f,c
  3106   0017D4  0E00               	movlw	0
  3107   0017D6  22F4               	addwfc	244,f,c
  3108   0017D8  0EF5               	movlw	low _Alpha2
  3109   0017DA  24F3               	addwf	243,w,c
  3110   0017DC  6EF6               	movwf	tblptrl,c
  3111   0017DE  0E1B               	movlw	high _Alpha2
  3112   0017E0  20F4               	addwfc	244,w,c
  3113   0017E2  6EF7               	movwf	tblptrh,c
  3114   0017E4                     	if	0	;There are less than 3 active tblptr bytes
  3115   0017E4                     	endif
  3116   0017E4  0008               	tblrd		*
  3117   0017E6  CFF5 F057          	movff	tablat,LCD_GraphicsDisplayString@colListA+3
  3118   0017EA  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3119   0017EC  0D05               	mullw	5
  3120   0017EE  0E02               	movlw	2
  3121   0017F0  26F3               	addwf	243,f,c
  3122   0017F2  0E00               	movlw	0
  3123   0017F4  22F4               	addwfc	244,f,c
  3124   0017F6  0EF5               	movlw	low _Alpha2
  3125   0017F8  24F3               	addwf	243,w,c
  3126   0017FA  6EF6               	movwf	tblptrl,c
  3127   0017FC  0E1B               	movlw	high _Alpha2
  3128   0017FE  20F4               	addwfc	244,w,c
  3129   001800  6EF7               	movwf	tblptrh,c
  3130   001802                     	if	0	;There are less than 3 active tblptr bytes
  3131   001802                     	endif
  3132   001802  0008               	tblrd		*
  3133   001804  CFF5 F056          	movff	tablat,LCD_GraphicsDisplayString@colListA+2
  3134   001808  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3135   00180A  0D05               	mullw	5
  3136   00180C  0E03               	movlw	3
  3137   00180E  26F3               	addwf	243,f,c
  3138   001810  0E00               	movlw	0
  3139   001812  22F4               	addwfc	244,f,c
  3140   001814  0EF5               	movlw	low _Alpha2
  3141   001816  24F3               	addwf	243,w,c
  3142   001818  6EF6               	movwf	tblptrl,c
  3143   00181A  0E1B               	movlw	high _Alpha2
  3144   00181C  20F4               	addwfc	244,w,c
  3145   00181E  6EF7               	movwf	tblptrh,c
  3146   001820                     	if	0	;There are less than 3 active tblptr bytes
  3147   001820                     	endif
  3148   001820  0008               	tblrd		*
  3149   001822  CFF5 F055          	movff	tablat,LCD_GraphicsDisplayString@colListA+1
  3150   001826  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3151   001828  0D05               	mullw	5
  3152   00182A  0E04               	movlw	4
  3153   00182C  26F3               	addwf	243,f,c
  3154   00182E  0E00               	movlw	0
  3155   001830  22F4               	addwfc	244,f,c
  3156   001832  0EF5               	movlw	low _Alpha2
  3157   001834  24F3               	addwf	243,w,c
  3158   001836  6EF6               	movwf	tblptrl,c
  3159   001838  0E1B               	movlw	high _Alpha2
  3160   00183A  20F4               	addwfc	244,w,c
  3161   00183C  6EF7               	movwf	tblptrh,c
  3162   00183E                     	if	0	;There are less than 3 active tblptr bytes
  3163   00183E                     	endif
  3164   00183E  0008               	tblrd		*
  3165   001840  CFF5 F054          	movff	tablat,LCD_GraphicsDisplayString@colListA
  3166   001844                     l1579:
  3167   001844  0E52               	movlw	82
  3168   001846  6063               	cpfslt	LCD_GraphicsDisplayString@letterB^0,c
  3169   001848  EF28  F00C         	goto	u861
  3170   00184C  EF2A  F00C         	goto	u860
  3171   001850                     u861:
  3172   001850  EF73  F00C         	goto	l1583
  3173   001854                     u860:
  3174   001854  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3175   001856  0D05               	mullw	5
  3176   001858  0EFB               	movlw	low _Alpha1
  3177   00185A  24F3               	addwf	243,w,c
  3178   00185C  6EF6               	movwf	tblptrl,c
  3179   00185E  0E1A               	movlw	high _Alpha1
  3180   001860  20F4               	addwfc	244,w,c
  3181   001862  6EF7               	movwf	tblptrh,c
  3182   001864                     	if	0	;There are less than 3 active tblptr bytes
  3183   001864                     	endif
  3184   001864  0008               	tblrd		*
  3185   001866  CFF5 F05D          	movff	tablat,LCD_GraphicsDisplayString@colListB+4
  3186   00186A  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3187   00186C  0D05               	mullw	5
  3188   00186E  0E01               	movlw	1
  3189   001870  26F3               	addwf	243,f,c
  3190   001872  0E00               	movlw	0
  3191   001874  22F4               	addwfc	244,f,c
  3192   001876  0EFB               	movlw	low _Alpha1
  3193   001878  24F3               	addwf	243,w,c
  3194   00187A  6EF6               	movwf	tblptrl,c
  3195   00187C  0E1A               	movlw	high _Alpha1
  3196   00187E  20F4               	addwfc	244,w,c
  3197   001880  6EF7               	movwf	tblptrh,c
  3198   001882                     	if	0	;There are less than 3 active tblptr bytes
  3199   001882                     	endif
  3200   001882  0008               	tblrd		*
  3201   001884  CFF5 F05C          	movff	tablat,LCD_GraphicsDisplayString@colListB+3
  3202   001888  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3203   00188A  0D05               	mullw	5
  3204   00188C  0E02               	movlw	2
  3205   00188E  26F3               	addwf	243,f,c
  3206   001890  0E00               	movlw	0
  3207   001892  22F4               	addwfc	244,f,c
  3208   001894  0EFB               	movlw	low _Alpha1
  3209   001896  24F3               	addwf	243,w,c
  3210   001898  6EF6               	movwf	tblptrl,c
  3211   00189A  0E1A               	movlw	high _Alpha1
  3212   00189C  20F4               	addwfc	244,w,c
  3213   00189E  6EF7               	movwf	tblptrh,c
  3214   0018A0                     	if	0	;There are less than 3 active tblptr bytes
  3215   0018A0                     	endif
  3216   0018A0  0008               	tblrd		*
  3217   0018A2  CFF5 F05B          	movff	tablat,LCD_GraphicsDisplayString@colListB+2
  3218   0018A6  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3219   0018A8  0D05               	mullw	5
  3220   0018AA  0E03               	movlw	3
  3221   0018AC  26F3               	addwf	243,f,c
  3222   0018AE  0E00               	movlw	0
  3223   0018B0  22F4               	addwfc	244,f,c
  3224   0018B2  0EFB               	movlw	low _Alpha1
  3225   0018B4  24F3               	addwf	243,w,c
  3226   0018B6  6EF6               	movwf	tblptrl,c
  3227   0018B8  0E1A               	movlw	high _Alpha1
  3228   0018BA  20F4               	addwfc	244,w,c
  3229   0018BC  6EF7               	movwf	tblptrh,c
  3230   0018BE                     	if	0	;There are less than 3 active tblptr bytes
  3231   0018BE                     	endif
  3232   0018BE  0008               	tblrd		*
  3233   0018C0  CFF5 F05A          	movff	tablat,LCD_GraphicsDisplayString@colListB+1
  3234   0018C4  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3235   0018C6  0D05               	mullw	5
  3236   0018C8  0E04               	movlw	4
  3237   0018CA  26F3               	addwf	243,f,c
  3238   0018CC  0E00               	movlw	0
  3239   0018CE  22F4               	addwfc	244,f,c
  3240   0018D0  0EFB               	movlw	low _Alpha1
  3241   0018D2  24F3               	addwf	243,w,c
  3242   0018D4  6EF6               	movwf	tblptrl,c
  3243   0018D6  0E1A               	movlw	high _Alpha1
  3244   0018D8  20F4               	addwfc	244,w,c
  3245   0018DA  6EF7               	movwf	tblptrh,c
  3246   0018DC                     	if	0	;There are less than 3 active tblptr bytes
  3247   0018DC                     	endif
  3248   0018DC  0008               	tblrd		*
  3249   0018DE  CFF5 F059          	movff	tablat,LCD_GraphicsDisplayString@colListB
  3250   0018E2  EFBA  F00C         	goto	l1585
  3251   0018E6                     l1583:
  3252   0018E6  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3253   0018E8  0D05               	mullw	5
  3254   0018EA  0EF5               	movlw	low _Alpha2
  3255   0018EC  24F3               	addwf	243,w,c
  3256   0018EE  6EF6               	movwf	tblptrl,c
  3257   0018F0  0E1B               	movlw	high _Alpha2
  3258   0018F2  20F4               	addwfc	244,w,c
  3259   0018F4  6EF7               	movwf	tblptrh,c
  3260   0018F6                     	if	0	;There are less than 3 active tblptr bytes
  3261   0018F6                     	endif
  3262   0018F6  0008               	tblrd		*
  3263   0018F8  CFF5 F05D          	movff	tablat,LCD_GraphicsDisplayString@colListB+4
  3264   0018FC  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3265   0018FE  0D05               	mullw	5
  3266   001900  0E01               	movlw	1
  3267   001902  26F3               	addwf	243,f,c
  3268   001904  0E00               	movlw	0
  3269   001906  22F4               	addwfc	244,f,c
  3270   001908  0EF5               	movlw	low _Alpha2
  3271   00190A  24F3               	addwf	243,w,c
  3272   00190C  6EF6               	movwf	tblptrl,c
  3273   00190E  0E1B               	movlw	high _Alpha2
  3274   001910  20F4               	addwfc	244,w,c
  3275   001912  6EF7               	movwf	tblptrh,c
  3276   001914                     	if	0	;There are less than 3 active tblptr bytes
  3277   001914                     	endif
  3278   001914  0008               	tblrd		*
  3279   001916  CFF5 F05C          	movff	tablat,LCD_GraphicsDisplayString@colListB+3
  3280   00191A  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3281   00191C  0D05               	mullw	5
  3282   00191E  0E02               	movlw	2
  3283   001920  26F3               	addwf	243,f,c
  3284   001922  0E00               	movlw	0
  3285   001924  22F4               	addwfc	244,f,c
  3286   001926  0EF5               	movlw	low _Alpha2
  3287   001928  24F3               	addwf	243,w,c
  3288   00192A  6EF6               	movwf	tblptrl,c
  3289   00192C  0E1B               	movlw	high _Alpha2
  3290   00192E  20F4               	addwfc	244,w,c
  3291   001930  6EF7               	movwf	tblptrh,c
  3292   001932                     	if	0	;There are less than 3 active tblptr bytes
  3293   001932                     	endif
  3294   001932  0008               	tblrd		*
  3295   001934  CFF5 F05B          	movff	tablat,LCD_GraphicsDisplayString@colListB+2
  3296   001938  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3297   00193A  0D05               	mullw	5
  3298   00193C  0E03               	movlw	3
  3299   00193E  26F3               	addwf	243,f,c
  3300   001940  0E00               	movlw	0
  3301   001942  22F4               	addwfc	244,f,c
  3302   001944  0EF5               	movlw	low _Alpha2
  3303   001946  24F3               	addwf	243,w,c
  3304   001948  6EF6               	movwf	tblptrl,c
  3305   00194A  0E1B               	movlw	high _Alpha2
  3306   00194C  20F4               	addwfc	244,w,c
  3307   00194E  6EF7               	movwf	tblptrh,c
  3308   001950                     	if	0	;There are less than 3 active tblptr bytes
  3309   001950                     	endif
  3310   001950  0008               	tblrd		*
  3311   001952  CFF5 F05A          	movff	tablat,LCD_GraphicsDisplayString@colListB+1
  3312   001956  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3313   001958  0D05               	mullw	5
  3314   00195A  0E04               	movlw	4
  3315   00195C  26F3               	addwf	243,f,c
  3316   00195E  0E00               	movlw	0
  3317   001960  22F4               	addwfc	244,f,c
  3318   001962  0EF5               	movlw	low _Alpha2
  3319   001964  24F3               	addwf	243,w,c
  3320   001966  6EF6               	movwf	tblptrl,c
  3321   001968  0E1B               	movlw	high _Alpha2
  3322   00196A  20F4               	addwfc	244,w,c
  3323   00196C  6EF7               	movwf	tblptrh,c
  3324   00196E                     	if	0	;There are less than 3 active tblptr bytes
  3325   00196E                     	endif
  3326   00196E  0008               	tblrd		*
  3327   001970  CFF5 F059          	movff	tablat,LCD_GraphicsDisplayString@colListB
  3328   001974                     l1585:
  3329   001974  6A64               	clrf	LCD_GraphicsDisplayString@row^0,c
  3330   001976                     l1591:
  3331   001976  0E04               	movlw	4
  3332   001978  6061               	cpfslt	LCD_GraphicsDisplayString@line^0,c
  3333   00197A  EFC1  F00C         	goto	u871
  3334   00197E  EFC3  F00C         	goto	u870
  3335   001982                     u871:
  3336   001982  EFD0  F00C         	goto	l1597
  3337   001986                     u870:
  3338   001986  5061               	movf	LCD_GraphicsDisplayString@line^0,w,c
  3339   001988  0D08               	mullw	8
  3340   00198A  50F3               	movf	243,w,c
  3341   00198C  2464               	addwf	LCD_GraphicsDisplayString@row^0,w,c
  3342   00198E  0980               	iorlw	128
  3343   001990  ECC1  F005         	call	_LCD_WriteCommand
  3344   001994  505E               	movf	LCD_GraphicsDisplayString@count^0,w,c
  3345   001996  0980               	iorlw	128
  3346   001998  ECC1  F005         	call	_LCD_WriteCommand
  3347   00199C  EFDC  F00C         	goto	l1601
  3348   0019A0                     l1597:
  3349   0019A0  5061               	movf	LCD_GraphicsDisplayString@line^0,w,c
  3350   0019A2  0D08               	mullw	8
  3351   0019A4  50F3               	movf	243,w,c
  3352   0019A6  2464               	addwf	LCD_GraphicsDisplayString@row^0,w,c
  3353   0019A8  0FE0               	addlw	224
  3354   0019AA  0980               	iorlw	128
  3355   0019AC  ECC1  F005         	call	_LCD_WriteCommand
  3356   0019B0  505E               	movf	LCD_GraphicsDisplayString@count^0,w,c
  3357   0019B2  0988               	iorlw	136
  3358   0019B4  ECC1  F005         	call	_LCD_WriteCommand
  3359   0019B8                     l1601:
  3360   0019B8  6A5F               	clrf	LCD_GraphicsDisplayString@dataA^0,c
  3361   0019BA  6A65               	clrf	LCD_GraphicsDisplayString@colInd^0,c
  3362   0019BC                     l1609:
  3363   0019BC  5065               	movf	LCD_GraphicsDisplayString@colInd^0,w,c
  3364   0019BE  0F54               	addlw	low LCD_GraphicsDisplayString@colListA
  3365   0019C0  6ED9               	movwf	fsr2l,c
  3366   0019C2  6ADA               	clrf	fsr2h,c
  3367   0019C4  50DF               	movf	indf2,w,c
  3368   0019C6  6E4C               	movwf	??_LCD_GraphicsDisplayString^0,c
  3369   0019C8  C064  F04D         	movff	LCD_GraphicsDisplayString@row,??_LCD_GraphicsDisplayString+1
  3370   0019CC  0E01               	movlw	1
  3371   0019CE  6E4E               	movwf	(??_LCD_GraphicsDisplayString+2)^0,c
  3372   0019D0  2A4D               	incf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  3373   0019D2  EFED  F00C         	goto	u884
  3374   0019D6                     u885:
  3375   0019D6  90D8               	bcf	status,0,c
  3376   0019D8  364E               	rlcf	(??_LCD_GraphicsDisplayString+2)^0,f,c
  3377   0019DA                     u884:
  3378   0019DA  2E4D               	decfsz	(??_LCD_GraphicsDisplayString+1)^0,f,c
  3379   0019DC  EFEB  F00C         	goto	u885
  3380   0019E0  504E               	movf	(??_LCD_GraphicsDisplayString+2)^0,w,c
  3381   0019E2  144C               	andwf	??_LCD_GraphicsDisplayString^0,w,c
  3382   0019E4  0900               	iorlw	0
  3383   0019E6  B4D8               	btfsc	status,2,c
  3384   0019E8  EFF8  F00C         	goto	u891
  3385   0019EC  EFFA  F00C         	goto	u890
  3386   0019F0                     u891:
  3387   0019F0  EF0B  F00D         	goto	l1613
  3388   0019F4                     u890:
  3389   0019F4  C065  F04C         	movff	LCD_GraphicsDisplayString@colInd,??_LCD_GraphicsDisplayString
  3390   0019F8  0E03               	movlw	3
  3391   0019FA  264C               	addwf	??_LCD_GraphicsDisplayString^0,f,c
  3392   0019FC  0E01               	movlw	1
  3393   0019FE  6E4D               	movwf	(??_LCD_GraphicsDisplayString+1)^0,c
  3394   001A00  2A4C               	incf	??_LCD_GraphicsDisplayString^0,f,c
  3395   001A02  EF05  F00D         	goto	u904
  3396   001A06                     u905:
  3397   001A06  90D8               	bcf	status,0,c
  3398   001A08  364D               	rlcf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  3399   001A0A                     u904:
  3400   001A0A  2E4C               	decfsz	??_LCD_GraphicsDisplayString^0,f,c
  3401   001A0C  EF03  F00D         	goto	u905
  3402   001A10  504D               	movf	(??_LCD_GraphicsDisplayString+1)^0,w,c
  3403   001A12  105F               	iorwf	LCD_GraphicsDisplayString@dataA^0,w,c
  3404   001A14  6E5F               	movwf	LCD_GraphicsDisplayString@dataA^0,c
  3405   001A16                     l1613:
  3406   001A16  2A65               	incf	LCD_GraphicsDisplayString@colInd^0,f,c
  3407   001A18  0E04               	movlw	4
  3408   001A1A  6465               	cpfsgt	LCD_GraphicsDisplayString@colInd^0,c
  3409   001A1C  EF12  F00D         	goto	u911
  3410   001A20  EF14  F00D         	goto	u910
  3411   001A24                     u911:
  3412   001A24  EFDE  F00C         	goto	l1609
  3413   001A28                     u910:
  3414   001A28  6A60               	clrf	LCD_GraphicsDisplayString@dataB^0,c
  3415   001A2A  6A65               	clrf	LCD_GraphicsDisplayString@colInd^0,c
  3416   001A2C                     l1621:
  3417   001A2C  5065               	movf	LCD_GraphicsDisplayString@colInd^0,w,c
  3418   001A2E  0F59               	addlw	low LCD_GraphicsDisplayString@colListB
  3419   001A30  6ED9               	movwf	fsr2l,c
  3420   001A32  6ADA               	clrf	fsr2h,c
  3421   001A34  50DF               	movf	indf2,w,c
  3422   001A36  6E4C               	movwf	??_LCD_GraphicsDisplayString^0,c
  3423   001A38  C064  F04D         	movff	LCD_GraphicsDisplayString@row,??_LCD_GraphicsDisplayString+1
  3424   001A3C  0E01               	movlw	1
  3425   001A3E  6E4E               	movwf	(??_LCD_GraphicsDisplayString+2)^0,c
  3426   001A40  2A4D               	incf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  3427   001A42  EF25  F00D         	goto	u924
  3428   001A46                     u925:
  3429   001A46  90D8               	bcf	status,0,c
  3430   001A48  364E               	rlcf	(??_LCD_GraphicsDisplayString+2)^0,f,c
  3431   001A4A                     u924:
  3432   001A4A  2E4D               	decfsz	(??_LCD_GraphicsDisplayString+1)^0,f,c
  3433   001A4C  EF23  F00D         	goto	u925
  3434   001A50  504E               	movf	(??_LCD_GraphicsDisplayString+2)^0,w,c
  3435   001A52  144C               	andwf	??_LCD_GraphicsDisplayString^0,w,c
  3436   001A54  0900               	iorlw	0
  3437   001A56  B4D8               	btfsc	status,2,c
  3438   001A58  EF30  F00D         	goto	u931
  3439   001A5C  EF32  F00D         	goto	u930
  3440   001A60                     u931:
  3441   001A60  EF43  F00D         	goto	l1625
  3442   001A64                     u930:
  3443   001A64  C065  F04C         	movff	LCD_GraphicsDisplayString@colInd,??_LCD_GraphicsDisplayString
  3444   001A68  0E03               	movlw	3
  3445   001A6A  264C               	addwf	??_LCD_GraphicsDisplayString^0,f,c
  3446   001A6C  0E01               	movlw	1
  3447   001A6E  6E4D               	movwf	(??_LCD_GraphicsDisplayString+1)^0,c
  3448   001A70  2A4C               	incf	??_LCD_GraphicsDisplayString^0,f,c
  3449   001A72  EF3D  F00D         	goto	u944
  3450   001A76                     u945:
  3451   001A76  90D8               	bcf	status,0,c
  3452   001A78  364D               	rlcf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  3453   001A7A                     u944:
  3454   001A7A  2E4C               	decfsz	??_LCD_GraphicsDisplayString^0,f,c
  3455   001A7C  EF3B  F00D         	goto	u945
  3456   001A80  504D               	movf	(??_LCD_GraphicsDisplayString+1)^0,w,c
  3457   001A82  1060               	iorwf	LCD_GraphicsDisplayString@dataB^0,w,c
  3458   001A84  6E60               	movwf	LCD_GraphicsDisplayString@dataB^0,c
  3459   001A86                     l1625:
  3460   001A86  2A65               	incf	LCD_GraphicsDisplayString@colInd^0,f,c
  3461   001A88  0E04               	movlw	4
  3462   001A8A  6465               	cpfsgt	LCD_GraphicsDisplayString@colInd^0,c
  3463   001A8C  EF4A  F00D         	goto	u951
  3464   001A90  EF4C  F00D         	goto	u950
  3465   001A94                     u951:
  3466   001A94  EF16  F00D         	goto	l1621
  3467   001A98                     u950:
  3468   001A98  505F               	movf	LCD_GraphicsDisplayString@dataA^0,w,c
  3469   001A9A  ECC7  F005         	call	_LCD_WriteData
  3470   001A9E  5060               	movf	LCD_GraphicsDisplayString@dataB^0,w,c
  3471   001AA0  ECC7  F005         	call	_LCD_WriteData
  3472   001AA4  2A64               	incf	LCD_GraphicsDisplayString@row^0,f,c
  3473   001AA6  0E07               	movlw	7
  3474   001AA8  6464               	cpfsgt	LCD_GraphicsDisplayString@row^0,c
  3475   001AAA  EF59  F00D         	goto	u961
  3476   001AAE  EF5B  F00D         	goto	u960
  3477   001AB2                     u961:
  3478   001AB2  EFBB  F00C         	goto	l1591
  3479   001AB6                     u960:
  3480   001AB6  2A5E               	incf	LCD_GraphicsDisplayString@count^0,f,c
  3481   001AB8                     l1637:
  3482   001AB8  C04A  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  3483   001ABC  C04B  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  3484   001AC0  6AF8               	clrf	tblptru,c
  3485   001AC2  0E01               	movlw	(high __ramtop+-1)
  3486   001AC4  64F7               	cpfsgt	tblptrh,c
  3487   001AC6  D003               	bra	u977
  3488   001AC8  0008               	tblrd		*
  3489   001ACA  50F5               	movf	tablat,w,c
  3490   001ACC  D005               	bra	u970
  3491   001ACE                     u977:
  3492   001ACE  CFF6 FFE9          	movff	tblptrl,fsr0l
  3493   001AD2  CFF7 FFEA          	movff	tblptrh,fsr0h
  3494   001AD6  50EF               	movf	indf0,w,c
  3495   001AD8                     u970:
  3496   001AD8  0900               	iorlw	0
  3497   001ADA  B4D8               	btfsc	status,2,c
  3498   001ADC  EF72  F00D         	goto	u981
  3499   001AE0  EF74  F00D         	goto	u980
  3500   001AE4                     u981:
  3501   001AE4  EF7C  F00D         	goto	l78
  3502   001AE8                     u980:
  3503   001AE8  5053               	movf	LCD_GraphicsDisplayString@shouldContinue^0,w,c
  3504   001AEA  A4D8               	btfss	status,2,c
  3505   001AEC  EF7A  F00D         	goto	u991
  3506   001AF0  EF7C  F00D         	goto	u990
  3507   001AF4                     u991:
  3508   001AF4  EF1E  F00B         	goto	l1541
  3509   001AF8                     u990:
  3510   001AF8                     l78:
  3511   001AF8  0012               	return		;funcret
  3512   001AFA                     __end_of_LCD_GraphicsDisplayString:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _clearAllChar *****************
  3516 ;; Defined at:
  3517 ;;		line 118 in file "Pls.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  j               1    4[COMRAM] unsigned char 
  3522 ;;  i               1    3[COMRAM] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1
  3532 ;;      Params:         0       0       0
  3533 ;;      Locals:         2       0       0
  3534 ;;      Temps:          0       0       0
  3535 ;;      Totals:         2       0       0
  3536 ;;Total ram usage:        2 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 1
  3539 ;; This function calls:
  3540 ;;		_placeChar
  3541 ;; This function is called by:
  3542 ;;		_draw
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text11
  3547   000BCC                     __ptext11:
  3548                           	callstack 0
  3549   000BCC                     _clearAllChar:
  3550                           	callstack 28
  3551   000BCC                     
  3552                           ;Pls.c: 119:     for(unsigned char i = 0; i < 8; i++){
  3553   000BCC  6A49               	clrf	clearAllChar@i^0,c
  3554   000BCE                     l199:
  3555                           
  3556                           ;Pls.c: 120:          for(unsigned char j = 0; j < 16; j++){
  3557   000BCE  6A4A               	clrf	clearAllChar@j^0,c
  3558   000BD0                     l1721:
  3559                           
  3560                           ;Pls.c: 121:              placeChar(j,i,' ');
  3561   000BD0  C049  F046         	movff	clearAllChar@i,placeChar@y
  3562   000BD4  0E20               	movlw	32
  3563   000BD6  6E47               	movwf	placeChar@c^0,c
  3564   000BD8  504A               	movf	clearAllChar@j^0,w,c
  3565   000BDA  ECD8  F008         	call	_placeChar
  3566   000BDE                     
  3567                           ;Pls.c: 122:         }
  3568   000BDE  2A4A               	incf	clearAllChar@j^0,f,c
  3569   000BE0  0E0F               	movlw	15
  3570   000BE2  644A               	cpfsgt	clearAllChar@j^0,c
  3571   000BE4  EFF6  F005         	goto	u1071
  3572   000BE8  EFF8  F005         	goto	u1070
  3573   000BEC                     u1071:
  3574   000BEC  EFE8  F005         	goto	l1721
  3575   000BF0                     u1070:
  3576   000BF0                     
  3577                           ;Pls.c: 123:     }
  3578   000BF0  2A49               	incf	clearAllChar@i^0,f,c
  3579   000BF2  0E07               	movlw	7
  3580   000BF4  6449               	cpfsgt	clearAllChar@i^0,c
  3581   000BF6  EFFF  F005         	goto	u1081
  3582   000BFA  EF01  F006         	goto	u1080
  3583   000BFE                     u1081:
  3584   000BFE  EFE7  F005         	goto	l199
  3585   000C02                     u1080:
  3586   000C02  0012               	return		;funcret
  3587   000C04                     __end_of_clearAllChar:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function _placeChar *****************
  3591 ;; Defined at:
  3592 ;;		line 64 in file "Pls.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  x               1    wreg     unsigned char 
  3595 ;;  y               1    0[COMRAM] unsigned char 
  3596 ;;  c               1    1[COMRAM] unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  x               1    2[COMRAM] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1
  3608 ;;      Params:         2       0       0
  3609 ;;      Locals:         1       0       0
  3610 ;;      Temps:          0       0       0
  3611 ;;      Totals:         3       0       0
  3612 ;;Total ram usage:        3 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_clearAllChar
  3618 ;;		_draw
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text12
  3623   0011B0                     __ptext12:
  3624                           	callstack 0
  3625   0011B0                     _placeChar:
  3626                           	callstack 29
  3627                           
  3628                           ;incstack = 0
  3629                           ;placeChar@x stored from wreg
  3630   0011B0  6E48               	movwf	placeChar@x^0,c
  3631   0011B2                     
  3632                           ;Pls.c: 65:     switch (y) {
  3633   0011B2  EF1B  F009         	goto	l1667
  3634   0011B6                     l1649:
  3635                           
  3636                           ;Pls.c: 67:               LCDStore0[x] = c;
  3637   0011B6  5048               	movf	placeChar@x^0,w,c
  3638   0011B8  0F35               	addlw	low _LCDStore0
  3639   0011BA  6ED9               	movwf	fsr2l,c
  3640   0011BC  6ADA               	clrf	fsr2h,c
  3641   0011BE  C047  FFDF         	movff	placeChar@c,indf2
  3642                           
  3643                           ;Pls.c: 68:           break;
  3644   0011C2  EF3E  F009         	goto	l187
  3645   0011C6                     l1651:
  3646                           
  3647                           ;Pls.c: 70:               LCDStore1[x] = c;
  3648   0011C6  5048               	movf	placeChar@x^0,w,c
  3649   0011C8  0F24               	addlw	low _LCDStore1
  3650   0011CA  6ED9               	movwf	fsr2l,c
  3651   0011CC  6ADA               	clrf	fsr2h,c
  3652   0011CE  C047  FFDF         	movff	placeChar@c,indf2
  3653                           
  3654                           ;Pls.c: 71:           break;
  3655   0011D2  EF3E  F009         	goto	l187
  3656   0011D6                     l1653:
  3657                           
  3658                           ;Pls.c: 73:               LCDStore2[x] = c;
  3659   0011D6  5048               	movf	placeChar@x^0,w,c
  3660   0011D8  0F13               	addlw	low _LCDStore2
  3661   0011DA  6ED9               	movwf	fsr2l,c
  3662   0011DC  6ADA               	clrf	fsr2h,c
  3663   0011DE  C047  FFDF         	movff	placeChar@c,indf2
  3664                           
  3665                           ;Pls.c: 74:           break;
  3666   0011E2  EF3E  F009         	goto	l187
  3667   0011E6                     l1655:
  3668                           
  3669                           ;Pls.c: 76:               LCDStore3[x] = c;
  3670   0011E6  5048               	movf	placeChar@x^0,w,c
  3671   0011E8  0F02               	addlw	low _LCDStore3
  3672   0011EA  6ED9               	movwf	fsr2l,c
  3673   0011EC  6ADA               	clrf	fsr2h,c
  3674   0011EE  C047  FFDF         	movff	placeChar@c,indf2
  3675                           
  3676                           ;Pls.c: 77:           break;
  3677   0011F2  EF3E  F009         	goto	l187
  3678   0011F6                     l1657:
  3679                           
  3680                           ;Pls.c: 79:               LCDStore4[x] = c;
  3681   0011F6  5048               	movf	placeChar@x^0,w,c
  3682   0011F8  0FB3               	addlw	low _LCDStore4
  3683   0011FA  6ED9               	movwf	fsr2l,c
  3684   0011FC  6ADA               	clrf	fsr2h,c
  3685   0011FE  C047  FFDF         	movff	placeChar@c,indf2
  3686                           
  3687                           ;Pls.c: 80:           break;
  3688   001202  EF3E  F009         	goto	l187
  3689   001206                     l1659:
  3690                           
  3691                           ;Pls.c: 82:               LCDStore5[x] = c;
  3692   001206  5048               	movf	placeChar@x^0,w,c
  3693   001208  0FA2               	addlw	low _LCDStore5
  3694   00120A  6ED9               	movwf	fsr2l,c
  3695   00120C  6ADA               	clrf	fsr2h,c
  3696   00120E  C047  FFDF         	movff	placeChar@c,indf2
  3697                           
  3698                           ;Pls.c: 83:           break;
  3699   001212  EF3E  F009         	goto	l187
  3700   001216                     l1661:
  3701                           
  3702                           ;Pls.c: 85:               LCDStore6[x] = c;
  3703   001216  5048               	movf	placeChar@x^0,w,c
  3704   001218  0F91               	addlw	low _LCDStore6
  3705   00121A  6ED9               	movwf	fsr2l,c
  3706   00121C  6ADA               	clrf	fsr2h,c
  3707   00121E  C047  FFDF         	movff	placeChar@c,indf2
  3708                           
  3709                           ;Pls.c: 86:           break;
  3710   001222  EF3E  F009         	goto	l187
  3711   001226                     l1663:
  3712                           
  3713                           ;Pls.c: 88:               LCDStore7[x] = c;
  3714   001226  5048               	movf	placeChar@x^0,w,c
  3715   001228  0F80               	addlw	low _LCDStore7
  3716   00122A  6ED9               	movwf	fsr2l,c
  3717   00122C  6ADA               	clrf	fsr2h,c
  3718   00122E  C047  FFDF         	movff	placeChar@c,indf2
  3719                           
  3720                           ;Pls.c: 89:           break;
  3721   001232  EF3E  F009         	goto	l187
  3722   001236                     l1667:
  3723   001236  5046               	movf	placeChar@y^0,w,c
  3724                           
  3725                           ; Switch size 1, requested type "simple"
  3726                           ; Number of cases is 8, Range of values is 0 to 7
  3727                           ; switch strategies available:
  3728                           ; Name         Instructions Cycles
  3729                           ; simple_byte           25    13 (average)
  3730                           ;	Chosen strategy is simple_byte
  3731   001238  0A00               	xorlw	0	; case 0
  3732   00123A  B4D8               	btfsc	status,2,c
  3733   00123C  EFDB  F008         	goto	l1649
  3734   001240  0A01               	xorlw	1	; case 1
  3735   001242  B4D8               	btfsc	status,2,c
  3736   001244  EFE3  F008         	goto	l1651
  3737   001248  0A03               	xorlw	3	; case 2
  3738   00124A  B4D8               	btfsc	status,2,c
  3739   00124C  EFEB  F008         	goto	l1653
  3740   001250  0A01               	xorlw	1	; case 3
  3741   001252  B4D8               	btfsc	status,2,c
  3742   001254  EFF3  F008         	goto	l1655
  3743   001258  0A07               	xorlw	7	; case 4
  3744   00125A  B4D8               	btfsc	status,2,c
  3745   00125C  EFFB  F008         	goto	l1657
  3746   001260  0A01               	xorlw	1	; case 5
  3747   001262  B4D8               	btfsc	status,2,c
  3748   001264  EF03  F009         	goto	l1659
  3749   001268  0A03               	xorlw	3	; case 6
  3750   00126A  B4D8               	btfsc	status,2,c
  3751   00126C  EF0B  F009         	goto	l1661
  3752   001270  0A01               	xorlw	1	; case 7
  3753   001272  B4D8               	btfsc	status,2,c
  3754   001274  EF13  F009         	goto	l1663
  3755   001278  EF3E  F009         	goto	l187
  3756   00127C                     l187:
  3757   00127C  0012               	return		;funcret
  3758   00127E                     __end_of_placeChar:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _LCD_Init *****************
  3762 ;; Defined at:
  3763 ;;		line 8 in file "12864_lcd.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1
  3777 ;;      Params:         0       0       0
  3778 ;;      Locals:         0       0       0
  3779 ;;      Temps:          1       0       0
  3780 ;;      Totals:         1       0       0
  3781 ;;Total ram usage:        1 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 2
  3784 ;; This function calls:
  3785 ;;		_LCD_WriteCommand
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text13
  3792   000FB6                     __ptext13:
  3793                           	callstack 0
  3794   000FB6                     _LCD_Init:
  3795                           	callstack 28
  3796   000FB6  6A93               	clrf	147,c	;volatile
  3797   000FB8  848A               	bsf	138,2,c	;volatile
  3798   000FBA  948A               	bcf	138,2,c	;volatile
  3799   000FBC  0E0D               	movlw	13
  3800   000FBE  6E4A               	movwf	??_LCD_Init^0,c
  3801   000FC0  0EFC               	movlw	252
  3802   000FC2                     u1427:
  3803   000FC2  2EE8               	decfsz	wreg,f,c
  3804   000FC4  D7FE               	bra	u1427
  3805   000FC6  2E4A               	decfsz	??_LCD_Init^0,f,c
  3806   000FC8  D7FC               	bra	u1427
  3807   000FCA  848A               	bsf	138,2,c	;volatile
  3808   000FCC  0E82               	movlw	130
  3809   000FCE  6E4A               	movwf	??_LCD_Init^0,c
  3810   000FD0  0EDE               	movlw	222
  3811   000FD2                     u1437:
  3812   000FD2  2EE8               	decfsz	wreg,f,c
  3813   000FD4  D7FE               	bra	u1437
  3814   000FD6  2E4A               	decfsz	??_LCD_Init^0,f,c
  3815   000FD8  D7FC               	bra	u1437
  3816   000FDA  0E20               	movlw	32
  3817   000FDC  ECC1  F005         	call	_LCD_WriteCommand
  3818   000FE0  0E0D               	movlw	13
  3819   000FE2  6E4A               	movwf	??_LCD_Init^0,c
  3820   000FE4  0EFC               	movlw	252
  3821   000FE6                     u1447:
  3822   000FE6  2EE8               	decfsz	wreg,f,c
  3823   000FE8  D7FE               	bra	u1447
  3824   000FEA  2E4A               	decfsz	??_LCD_Init^0,f,c
  3825   000FEC  D7FC               	bra	u1447
  3826   000FEE  0E20               	movlw	32
  3827   000FF0  ECC1  F005         	call	_LCD_WriteCommand
  3828   000FF4  0E0D               	movlw	13
  3829   000FF6  6E4A               	movwf	??_LCD_Init^0,c
  3830   000FF8  0EFC               	movlw	252
  3831   000FFA                     u1457:
  3832   000FFA  2EE8               	decfsz	wreg,f,c
  3833   000FFC  D7FE               	bra	u1457
  3834   000FFE  2E4A               	decfsz	??_LCD_Init^0,f,c
  3835   001000  D7FC               	bra	u1457
  3836   001002  0E0C               	movlw	12
  3837   001004  ECC1  F005         	call	_LCD_WriteCommand
  3838   001008  0E0D               	movlw	13
  3839   00100A  6E4A               	movwf	??_LCD_Init^0,c
  3840   00100C  0EFC               	movlw	252
  3841   00100E                     u1467:
  3842   00100E  2EE8               	decfsz	wreg,f,c
  3843   001010  D7FE               	bra	u1467
  3844   001012  2E4A               	decfsz	??_LCD_Init^0,f,c
  3845   001014  D7FC               	bra	u1467
  3846   001016  0E01               	movlw	1
  3847   001018  ECC1  F005         	call	_LCD_WriteCommand
  3848   00101C  0E0D               	movlw	13
  3849   00101E  6E4A               	movwf	??_LCD_Init^0,c
  3850   001020  0EFC               	movlw	252
  3851   001022                     u1477:
  3852   001022  2EE8               	decfsz	wreg,f,c
  3853   001024  D7FE               	bra	u1477
  3854   001026  2E4A               	decfsz	??_LCD_Init^0,f,c
  3855   001028  D7FC               	bra	u1477
  3856   00102A  0E06               	movlw	6
  3857   00102C  ECC1  F005         	call	_LCD_WriteCommand
  3858   001030  0E0D               	movlw	13
  3859   001032  6E4A               	movwf	??_LCD_Init^0,c
  3860   001034  0EFC               	movlw	252
  3861   001036                     u1487:
  3862   001036  2EE8               	decfsz	wreg,f,c
  3863   001038  D7FE               	bra	u1487
  3864   00103A  2E4A               	decfsz	??_LCD_Init^0,f,c
  3865   00103C  D7FC               	bra	u1487
  3866   00103E  0E02               	movlw	2
  3867   001040  ECC1  F005         	call	_LCD_WriteCommand
  3868   001044  0E0D               	movlw	13
  3869   001046  6E4A               	movwf	??_LCD_Init^0,c
  3870   001048  0EFC               	movlw	252
  3871   00104A                     u1497:
  3872   00104A  2EE8               	decfsz	wreg,f,c
  3873   00104C  D7FE               	bra	u1497
  3874   00104E  2E4A               	decfsz	??_LCD_Init^0,f,c
  3875   001050  D7FC               	bra	u1497
  3876   001052  0012               	return		;funcret
  3877   001054                     __end_of_LCD_Init:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _LCD_EnableGraphics *****************
  3881 ;; Defined at:
  3882 ;;		line 55 in file "12864_lcd.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1
  3896 ;;      Params:         0       0       0
  3897 ;;      Locals:         0       0       0
  3898 ;;      Temps:          1       0       0
  3899 ;;      Totals:         1       0       0
  3900 ;;Total ram usage:        1 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 2
  3903 ;; This function calls:
  3904 ;;		_LCD_WriteCommand
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text14
  3911   000C04                     __ptext14:
  3912                           	callstack 0
  3913   000C04                     _LCD_EnableGraphics:
  3914                           	callstack 28
  3915   000C04  0E20               	movlw	32
  3916   000C06  ECC1  F005         	call	_LCD_WriteCommand
  3917   000C0A  0E03               	movlw	3
  3918   000C0C  6E4A               	movwf	??_LCD_EnableGraphics^0,c
  3919   000C0E  0E98               	movlw	152
  3920   000C10                     u1507:
  3921   000C10  2EE8               	decfsz	wreg,f,c
  3922   000C12  D7FE               	bra	u1507
  3923   000C14  2E4A               	decfsz	??_LCD_EnableGraphics^0,f,c
  3924   000C16  D7FC               	bra	u1507
  3925   000C18  0E24               	movlw	36
  3926   000C1A  ECC1  F005         	call	_LCD_WriteCommand
  3927   000C1E  0E03               	movlw	3
  3928   000C20  6E4A               	movwf	??_LCD_EnableGraphics^0,c
  3929   000C22  0E98               	movlw	152
  3930   000C24                     u1517:
  3931   000C24  2EE8               	decfsz	wreg,f,c
  3932   000C26  D7FE               	bra	u1517
  3933   000C28  2E4A               	decfsz	??_LCD_EnableGraphics^0,f,c
  3934   000C2A  D7FC               	bra	u1517
  3935   000C2C  0E26               	movlw	38
  3936   000C2E  ECC1  F005         	call	_LCD_WriteCommand
  3937   000C32  0E03               	movlw	3
  3938   000C34  6E4A               	movwf	??_LCD_EnableGraphics^0,c
  3939   000C36  0E98               	movlw	152
  3940   000C38                     u1527:
  3941   000C38  2EE8               	decfsz	wreg,f,c
  3942   000C3A  D7FE               	bra	u1527
  3943   000C3C  2E4A               	decfsz	??_LCD_EnableGraphics^0,f,c
  3944   000C3E  D7FC               	bra	u1527
  3945   000C40  0012               	return		;funcret
  3946   000C42                     __end_of_LCD_EnableGraphics:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _LCD_ClearGraphics *****************
  3950 ;; Defined at:
  3951 ;;		line 202 in file "12864_lcd.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  y               1    5[COMRAM] unsigned char 
  3956 ;;  x               1    4[COMRAM] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1
  3966 ;;      Params:         0       0       0
  3967 ;;      Locals:         2       0       0
  3968 ;;      Temps:          0       0       0
  3969 ;;      Totals:         2       0       0
  3970 ;;Total ram usage:        2 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 2
  3973 ;; This function calls:
  3974 ;;		_LCD_WriteCommand
  3975 ;;		_LCD_WriteData
  3976 ;; This function is called by:
  3977 ;;		_main
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text15
  3982   000D2E                     __ptext15:
  3983                           	callstack 0
  3984   000D2E                     _LCD_ClearGraphics:
  3985                           	callstack 28
  3986   000D2E  6A4B               	clrf	LCD_ClearGraphics@y^0,c
  3987   000D30                     l1769:
  3988   000D30  0E20               	movlw	32
  3989   000D32  604B               	cpfslt	LCD_ClearGraphics@y^0,c
  3990   000D34  EF9E  F006         	goto	u1091
  3991   000D38  EFA0  F006         	goto	u1090
  3992   000D3C                     u1091:
  3993   000D3C  EFA9  F006         	goto	l1773
  3994   000D40                     u1090:
  3995   000D40  504B               	movf	LCD_ClearGraphics@y^0,w,c
  3996   000D42  0980               	iorlw	128
  3997   000D44  ECC1  F005         	call	_LCD_WriteCommand
  3998   000D48  0E80               	movlw	128
  3999   000D4A  ECC1  F005         	call	_LCD_WriteCommand
  4000   000D4E  EFB1  F006         	goto	l1775
  4001   000D52                     l1773:
  4002   000D52  504B               	movf	LCD_ClearGraphics@y^0,w,c
  4003   000D54  0FE0               	addlw	224
  4004   000D56  0980               	iorlw	128
  4005   000D58  ECC1  F005         	call	_LCD_WriteCommand
  4006   000D5C  0E88               	movlw	136
  4007   000D5E  ECC1  F005         	call	_LCD_WriteCommand
  4008   000D62                     l1775:
  4009   000D62  6A4A               	clrf	LCD_ClearGraphics@x^0,c
  4010   000D64                     l1781:
  4011   000D64  0E00               	movlw	0
  4012   000D66  ECC7  F005         	call	_LCD_WriteData
  4013   000D6A  0E00               	movlw	0
  4014   000D6C  ECC7  F005         	call	_LCD_WriteData
  4015   000D70  2A4A               	incf	LCD_ClearGraphics@x^0,f,c
  4016   000D72  0E07               	movlw	7
  4017   000D74  644A               	cpfsgt	LCD_ClearGraphics@x^0,c
  4018   000D76  EFBF  F006         	goto	u1101
  4019   000D7A  EFC1  F006         	goto	u1100
  4020   000D7E                     u1101:
  4021   000D7E  EFB2  F006         	goto	l1781
  4022   000D82                     u1100:
  4023   000D82  2A4B               	incf	LCD_ClearGraphics@y^0,f,c
  4024   000D84  0E3F               	movlw	63
  4025   000D86  644B               	cpfsgt	LCD_ClearGraphics@y^0,c
  4026   000D88  EFC8  F006         	goto	u1111
  4027   000D8C  EFCA  F006         	goto	u1110
  4028   000D90                     u1111:
  4029   000D90  EF98  F006         	goto	l1769
  4030   000D94                     u1110:
  4031   000D94  0012               	return		;funcret
  4032   000D96                     __end_of_LCD_ClearGraphics:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _LCD_WriteData *****************
  4036 ;; Defined at:
  4037 ;;		line 253 in file "12864_lcd.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  data            1    wreg     unsigned char 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  data            1    3[COMRAM] unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1
  4051 ;;      Params:         0       0       0
  4052 ;;      Locals:         1       0       0
  4053 ;;      Temps:          0       0       0
  4054 ;;      Totals:         1       0       0
  4055 ;;Total ram usage:        1 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 1
  4058 ;; This function calls:
  4059 ;;		_LCD_WriteByte
  4060 ;; This function is called by:
  4061 ;;		_LCD_GraphicsDisplayString
  4062 ;;		_LCD_ClearGraphics
  4063 ;;		_LCD_TextDisplayString
  4064 ;;		_LCD_FillScreenGraphics
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text16
  4069   000B8E                     __ptext16:
  4070                           	callstack 0
  4071   000B8E                     _LCD_WriteData:
  4072                           	callstack 26
  4073                           
  4074                           ;incstack = 0
  4075                           ;LCD_WriteData@data stored from wreg
  4076   000B8E  6E49               	movwf	LCD_WriteData@data^0,c
  4077   000B90  808A               	bsf	138,0,c	;volatile
  4078   000B92  5049               	movf	LCD_WriteData@data^0,w,c
  4079   000B94  ECB0  F009         	call	_LCD_WriteByte
  4080   000B98  0012               	return		;funcret
  4081   000B9A                     __end_of_LCD_WriteData:
  4082                           	callstack 0
  4083                           
  4084 ;; *************** function _LCD_WriteCommand *****************
  4085 ;; Defined at:
  4086 ;;		line 259 in file "12864_lcd.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  command         1    wreg     unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  command         1    3[COMRAM] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1
  4100 ;;      Params:         0       0       0
  4101 ;;      Locals:         1       0       0
  4102 ;;      Temps:          0       0       0
  4103 ;;      Totals:         1       0       0
  4104 ;;Total ram usage:        1 bytes
  4105 ;; Hardware stack levels used: 1
  4106 ;; Hardware stack levels required when called: 1
  4107 ;; This function calls:
  4108 ;;		_LCD_WriteByte
  4109 ;; This function is called by:
  4110 ;;		_LCD_Init
  4111 ;;		_LCD_EnableGraphics
  4112 ;;		_LCD_GraphicsDisplayString
  4113 ;;		_LCD_ClearGraphics
  4114 ;;		_LCD_TextDisplayString
  4115 ;;		_LCD_DisableGraphics
  4116 ;;		_LCD_FillScreenGraphics
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text17
  4121   000B82                     __ptext17:
  4122                           	callstack 0
  4123   000B82                     _LCD_WriteCommand:
  4124                           	callstack 26
  4125                           
  4126                           ;incstack = 0
  4127                           ;LCD_WriteCommand@command stored from wreg
  4128   000B82  6E49               	movwf	LCD_WriteCommand@command^0,c
  4129   000B84  908A               	bcf	138,0,c	;volatile
  4130   000B86  5049               	movf	LCD_WriteCommand@command^0,w,c
  4131   000B88  ECB0  F009         	call	_LCD_WriteByte
  4132   000B8C  0012               	return		;funcret
  4133   000B8E                     __end_of_LCD_WriteCommand:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _LCD_WriteByte *****************
  4137 ;; Defined at:
  4138 ;;		line 228 in file "12864_lcd.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  command         1    wreg     unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  command         1    2[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1
  4152 ;;      Params:         0       0       0
  4153 ;;      Locals:         1       0       0
  4154 ;;      Temps:          2       0       0
  4155 ;;      Totals:         3       0       0
  4156 ;;Total ram usage:        3 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_LCD_WriteData
  4162 ;;		_LCD_WriteCommand
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text18
  4167   001360                     __ptext18:
  4168                           	callstack 0
  4169   001360                     _LCD_WriteByte:
  4170                           	callstack 26
  4171                           
  4172                           ;incstack = 0
  4173                           ;LCD_WriteByte@command stored from wreg
  4174   001360  6E48               	movwf	LCD_WriteByte@command^0,c
  4175   001362  828A               	bsf	138,1,c	;volatile
  4176   001364  0E0D               	movlw	13
  4177   001366                     u1537:
  4178   001366  2EE8               	decfsz	wreg,f,c
  4179   001368  D7FE               	bra	u1537
  4180   00136A  0000               	nop	
  4181   00136C  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4182   001370  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4183   001372  0E0F               	movlw	15
  4184   001374  1646               	andwf	??_LCD_WriteByte^0,f,c
  4185   001376  0E01               	movlw	1
  4186   001378  1646               	andwf	??_LCD_WriteByte^0,f,c
  4187   00137A  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4188   00137C  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4189   00137E  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4190   001380  508A               	movf	138,w,c	;volatile
  4191   001382  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4192   001384  0BF7               	andlw	-9
  4193   001386  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4194   001388  6E8A               	movwf	138,c	;volatile
  4195   00138A  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4196   00138E  0E05               	movlw	5
  4197   001390  6E47               	movwf	(??_LCD_WriteByte+1)^0,c
  4198   001392                     u745:
  4199   001392  90D8               	bcf	status,0,c
  4200   001394  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4201   001396  2E47               	decfsz	(??_LCD_WriteByte+1)^0,f,c
  4202   001398  EFC9  F009         	goto	u745
  4203   00139C  0E01               	movlw	1
  4204   00139E  1646               	andwf	??_LCD_WriteByte^0,f,c
  4205   0013A0  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4206   0013A2  508A               	movf	138,w,c	;volatile
  4207   0013A4  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4208   0013A6  0BEF               	andlw	-17
  4209   0013A8  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4210   0013AA  6E8A               	movwf	138,c	;volatile
  4211   0013AC  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4212   0013B0  0E06               	movlw	6
  4213   0013B2  6E47               	movwf	(??_LCD_WriteByte+1)^0,c
  4214   0013B4                     u755:
  4215   0013B4  90D8               	bcf	status,0,c
  4216   0013B6  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4217   0013B8  2E47               	decfsz	(??_LCD_WriteByte+1)^0,f,c
  4218   0013BA  EFDA  F009         	goto	u755
  4219   0013BE  0E01               	movlw	1
  4220   0013C0  1646               	andwf	??_LCD_WriteByte^0,f,c
  4221   0013C2  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4222   0013C4  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4223   0013C6  508A               	movf	138,w,c	;volatile
  4224   0013C8  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4225   0013CA  0BDF               	andlw	-33
  4226   0013CC  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4227   0013CE  6E8A               	movwf	138,c	;volatile
  4228   0013D0  6A46               	clrf	??_LCD_WriteByte^0,c
  4229   0013D2  AE48               	btfss	LCD_WriteByte@command^0,7,c
  4230   0013D4  D001               	bra	u765
  4231   0013D6  2A46               	incf	??_LCD_WriteByte^0,f,c
  4232   0013D8                     u765:
  4233   0013D8  0E01               	movlw	1
  4234   0013DA  1646               	andwf	??_LCD_WriteByte^0,f,c
  4235   0013DC  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4236   0013DE  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4237   0013E0  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4238   0013E2  508A               	movf	138,w,c	;volatile
  4239   0013E4  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4240   0013E6  0BBF               	andlw	-65
  4241   0013E8  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4242   0013EA  6E8A               	movwf	138,c	;volatile
  4243   0013EC  0E0D               	movlw	13
  4244   0013EE                     u1547:
  4245   0013EE  2EE8               	decfsz	wreg,f,c
  4246   0013F0  D7FE               	bra	u1547
  4247   0013F2  0000               	nop	
  4248   0013F4  928A               	bcf	138,1,c	;volatile
  4249   0013F6  828A               	bsf	138,1,c	;volatile
  4250   0013F8  0E0D               	movlw	13
  4251   0013FA                     u1557:
  4252   0013FA  2EE8               	decfsz	wreg,f,c
  4253   0013FC  D7FE               	bra	u1557
  4254   0013FE  0000               	nop	
  4255   001400  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4256   001404  0E01               	movlw	1
  4257   001406  1646               	andwf	??_LCD_WriteByte^0,f,c
  4258   001408  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4259   00140A  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4260   00140C  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4261   00140E  508A               	movf	138,w,c	;volatile
  4262   001410  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4263   001412  0BF7               	andlw	-9
  4264   001414  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4265   001416  6E8A               	movwf	138,c	;volatile
  4266   001418  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4267   00141C  90D8               	bcf	status,0,c
  4268   00141E  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4269   001420  0E01               	movlw	1
  4270   001422  1646               	andwf	??_LCD_WriteByte^0,f,c
  4271   001424  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4272   001426  508A               	movf	138,w,c	;volatile
  4273   001428  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4274   00142A  0BEF               	andlw	-17
  4275   00142C  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4276   00142E  6E8A               	movwf	138,c	;volatile
  4277   001430  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4278   001434  90D8               	bcf	status,0,c
  4279   001436  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4280   001438  90D8               	bcf	status,0,c
  4281   00143A  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4282   00143C  0E01               	movlw	1
  4283   00143E  1646               	andwf	??_LCD_WriteByte^0,f,c
  4284   001440  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4285   001442  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4286   001444  508A               	movf	138,w,c	;volatile
  4287   001446  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4288   001448  0BDF               	andlw	-33
  4289   00144A  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4290   00144C  6E8A               	movwf	138,c	;volatile
  4291   00144E  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4292   001452  90D8               	bcf	status,0,c
  4293   001454  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4294   001456  90D8               	bcf	status,0,c
  4295   001458  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4296   00145A  90D8               	bcf	status,0,c
  4297   00145C  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4298   00145E  0E01               	movlw	1
  4299   001460  1646               	andwf	??_LCD_WriteByte^0,f,c
  4300   001462  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4301   001464  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4302   001466  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4303   001468  508A               	movf	138,w,c	;volatile
  4304   00146A  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4305   00146C  0BBF               	andlw	-65
  4306   00146E  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4307   001470  6E8A               	movwf	138,c	;volatile
  4308   001472  0E0D               	movlw	13
  4309   001474                     u1567:
  4310   001474  2EE8               	decfsz	wreg,f,c
  4311   001476  D7FE               	bra	u1567
  4312   001478  0000               	nop	
  4313   00147A  928A               	bcf	138,1,c	;volatile
  4314   00147C  0E0D               	movlw	13
  4315   00147E                     u1577:
  4316   00147E  2EE8               	decfsz	wreg,f,c
  4317   001480  D7FE               	bra	u1577
  4318   001482  0000               	nop	
  4319   001484  0012               	return		;funcret
  4320   001486                     __end_of_LCD_WriteByte:
  4321                           	callstack 0
  4322                           
  4323                           	psect	rparam
  4324   000001                     ___rparam_used  equ	1
  4325   000000                     ___param_bank   equ	0
  4326   000000                     __Lparam        equ	__Lrparam
  4327   000000                     __Hparam        equ	__Hrparam
  4328                           
  4329                           	psect	config
  4330                           
  4331                           ; Padding undefined space
  4332   300000                     	org	3145728
  4333   300000  FF                 	db	255
  4334                           
  4335                           ;Config register CONFIG1H @ 0x300001
  4336                           ;	Oscillator
  4337                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  4338                           ;	Fail-Safe Clock Monitor Enable bit
  4339                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4340                           ;	Internal/External Oscillator Switchover bit
  4341                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4342   300001                     	org	3145729
  4343   300001  08                 	db	8
  4344                           
  4345                           ;Config register CONFIG2L @ 0x300002
  4346                           ;	Power-up Timer Enable bit
  4347                           ;	PWRT = OFF, PWRT disabled
  4348                           ;	Brown-out Reset Enable bits
  4349                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4350                           ;	Brown-out Reset Voltage bits
  4351                           ;	BORV = 3, Minimum Setting
  4352   300002                     	org	3145730
  4353   300002  19                 	db	25
  4354                           
  4355                           ;Config register CONFIG2H @ 0x300003
  4356                           ;	Watchdog Timer Enable bit
  4357                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4358                           ;	Watchdog Timer Postscale Select bits
  4359                           ;	WDTPS = 32768, 1:32768
  4360   300003                     	org	3145731
  4361   300003  1E                 	db	30
  4362                           
  4363                           ; Padding undefined space
  4364   300004                     	org	3145732
  4365   300004  FF                 	db	255
  4366                           
  4367                           ;Config register CONFIG3H @ 0x300005
  4368                           ;	CCP2 MUX bit
  4369                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4370                           ;	PORTB A/D Enable bit
  4371                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  4372                           ;	Low-Power Timer1 Oscillator Enable bit
  4373                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4374                           ;	MCLR Pin Enable bit
  4375                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4376   300005                     	org	3145733
  4377   300005  83                 	db	131
  4378                           
  4379                           ;Config register CONFIG4L @ 0x300006
  4380                           ;	Stack Full/Underflow Reset Enable bit
  4381                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4382                           ;	Single-Supply ICSP Enable bit
  4383                           ;	LVP = OFF, Single-Supply ICSP disabled
  4384                           ;	Boot Block Size Select bits
  4385                           ;	BBSIZ = BB256, 256 Word
  4386                           ;	Extended Instruction Set Enable bit
  4387                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4388                           ;	Background Debugger Enable bit
  4389                           ;	DEBUG = 0x1, unprogrammed default
  4390   300006                     	org	3145734
  4391   300006  81                 	db	129
  4392                           
  4393                           ; Padding undefined space
  4394   300007                     	org	3145735
  4395   300007  FF                 	db	255
  4396                           
  4397                           ;Config register CONFIG5L @ 0x300008
  4398                           ;	Code Protection bit
  4399                           ;	CP0 = OFF, Block 0 not code-protected
  4400                           ;	Code Protection bit
  4401                           ;	CP1 = OFF, Block 1 not code-protected
  4402   300008                     	org	3145736
  4403   300008  03                 	db	3
  4404                           
  4405                           ;Config register CONFIG5H @ 0x300009
  4406                           ;	Boot Block Code Protection bitProtect Boot
  4407                           ;	CPB = OFF, Boot block not code-protected
  4408                           ;	Data EEPROM Code Protection bit
  4409                           ;	CPD = OFF, Data EEPROM not code-protected
  4410   300009                     	org	3145737
  4411   300009  C0                 	db	192
  4412                           
  4413                           ;Config register CONFIG6L @ 0x30000A
  4414                           ;	Write Protection bit
  4415                           ;	WRT0 = OFF, Block 0 not write-protected
  4416                           ;	Write Protection bit
  4417                           ;	WRT1 = OFF, Block 1 not write-protected
  4418   30000A                     	org	3145738
  4419   30000A  03                 	db	3
  4420                           
  4421                           ;Config register CONFIG6H @ 0x30000B
  4422                           ;	Configuration Register Write Protection bit
  4423                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4424                           ;	Boot Block Write Protection bit
  4425                           ;	WRTB = OFF, Boot block not write-protected
  4426                           ;	Data EEPROM Write Protection bit
  4427                           ;	WRTD = OFF, Data EEPROM not write-protected
  4428   30000B                     	org	3145739
  4429   30000B  E0                 	db	224
  4430                           
  4431                           ;Config register CONFIG7L @ 0x30000C
  4432                           ;	Table Read Protection bit
  4433                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  4434                           ;	Table Read Protection bit
  4435                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  4436   30000C                     	org	3145740
  4437   30000C  03                 	db	3
  4438                           
  4439                           ;Config register CONFIG7H @ 0x30000D
  4440                           ;	Boot Block Table Read Protection bit
  4441                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  4442   30000D                     	org	3145741
  4443   30000D  40                 	db	64
  4444                           tosu	equ	0xFFF
  4445                           tosh	equ	0xFFE
  4446                           tosl	equ	0xFFD
  4447                           stkptr	equ	0xFFC
  4448                           pclatu	equ	0xFFB
  4449                           pclath	equ	0xFFA
  4450                           pcl	equ	0xFF9
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           indf0	equ	0xFEF
  4458                           postinc0	equ	0xFEE
  4459                           postdec0	equ	0xFED
  4460                           preinc0	equ	0xFEC
  4461                           plusw0	equ	0xFEB
  4462                           fsr0h	equ	0xFEA
  4463                           fsr0l	equ	0xFE9
  4464                           wreg	equ	0xFE8
  4465                           indf1	equ	0xFE7
  4466                           postinc1	equ	0xFE6
  4467                           postdec1	equ	0xFE5
  4468                           preinc1	equ	0xFE4
  4469                           plusw1	equ	0xFE3
  4470                           fsr1h	equ	0xFE2
  4471                           fsr1l	equ	0xFE1
  4472                           bsr	equ	0xFE0
  4473                           indf2	equ	0xFDF
  4474                           postinc2	equ	0xFDE
  4475                           postdec2	equ	0xFDD
  4476                           preinc2	equ	0xFDC
  4477                           plusw2	equ	0xFDB
  4478                           fsr2h	equ	0xFDA
  4479                           fsr2l	equ	0xFD9
  4480                           status	equ	0xFD8

Data Sizes:
    Strings     100
    Constant    480
    Data        137
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38     121
    BANK0           128      0     100
    BANK1           239      0      32

Pointer List with Targets:

    LCD_GraphicsDisplayString@str	PTR unsigned char  size(2) Largest target is 17
		 -> LCDStore0(COMRAM[17]), LCDStore1(COMRAM[17]), LCDStore2(COMRAM[17]), LCDStore3(COMRAM[17]), 
		 -> LCDStore4(BANK0[17]), LCDStore5(BANK0[17]), LCDStore6(BANK0[17]), LCDStore7(BANK0[17]), 
		 -> STR_1(CODE[6]), STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[16]), 
		 -> STR_5(CODE[17]), STR_6(CODE[16]), STR_7(CODE[15]), STR_8(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_draw
    _setup->_random
    _logic->_random
    _random->___awmod
    _rand->___lmul
    ___awmod->_rand
    _drawGraphics->_LCD_GraphicsDisplayString
    _LCD_GraphicsDisplayString->_LCD_WriteCommand
    _LCD_GraphicsDisplayString->_LCD_WriteData
    _clearAllChar->_placeChar
    _LCD_Init->_LCD_WriteCommand
    _LCD_EnableGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteData
    _LCD_WriteData->_LCD_WriteByte
    _LCD_WriteCommand->_LCD_WriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8334
                  _LCD_ClearGraphics
                 _LCD_EnableGraphics
          _LCD_GraphicsDisplayString
                           _LCD_Init
                               _draw
                              _input
                              _logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     480
                             _random
 ---------------------------------------------------------------------------------
 (1) _logic                                                7     7      0     754
                                             28 COMRAM     7     7      0
                             _random
 ---------------------------------------------------------------------------------
 (2) _random                                               4     3      1     480
                                             24 COMRAM     4     3      1
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2      94
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     298
                                             18 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _input                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _draw                                                 5     5      0    3580
                                             34 COMRAM     4     4      0
                       _clearAllChar
                       _drawGraphics
                          _placeChar
 ---------------------------------------------------------------------------------
 (2) _drawGraphics                                         0     0      0    2318
          _LCD_GraphicsDisplayString
 ---------------------------------------------------------------------------------
 (3) _LCD_GraphicsDisplayString                           30    28      2    2318
                                              4 COMRAM    30    28      2
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _clearAllChar                                         2     2      0     574
                                              3 COMRAM     2     2      0
                          _placeChar
 ---------------------------------------------------------------------------------
 (2) _placeChar                                            3     1      2     438
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     261
                                              4 COMRAM     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_EnableGraphics                                   1     1      0     261
                                              4 COMRAM     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_ClearGraphics                                    2     2      0     680
                                              4 COMRAM     2     2      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        1     1      0     261
                                              3 COMRAM     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteCommand                                     1     1      0     261
                                              3 COMRAM     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (5) _LCD_WriteByte                                        3     3      0     232
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_ClearGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_EnableGraphics
     _LCD_WriteCommand
   _LCD_GraphicsDisplayString
     _LCD_WriteCommand
     _LCD_WriteData
   _LCD_Init
     _LCD_WriteCommand
   _draw
     _clearAllChar
       _placeChar
     _drawGraphics
       _LCD_GraphicsDisplayString
     _placeChar
   _input
   _logic
     _random
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
   _setup
     _random

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             494      0       0      0.0%
BITBANK1           239      0       0      0.0%
BANK1              239      0      32     13.4%
BITBANK0           128      0       0      0.0%
BANK0              128      0     100     78.1%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     38     121     95.3%
BITBIGSFR_1l        36      0       0      0.0%
BITBIGSFR_1h        17      0       0      0.0%
BITBIGSFRh          17      0       0      0.0%
BITBIGSFR_5         12      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     253      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec 04 22:05:13 2024

                   ??_LCD_EnableGraphics 004A                                       l32 0C40  
                                     l17 1052                                       l70 1A28  
                                     l90 1484                                       l93 0B98  
                                     l78 1AF8                                       l87 0D94  
                                     l96 0B8C                                      l203 0C02  
                                    l230 162E                                      l241 1100  
                                    l233 1076                                      l162 0BCA  
                                    l235 1078                                      l171 0F9E  
                                    l165 0F5C                                      l253 134E  
                                    l174 0FB4                                      l254 133C  
                                    l246 12BC                                      l159 0D2C  
                                    l167 0F72                                      l271 0DEE  
                                    l168 0FB4                                      l504 11AE  
                                    l272 0DFE                                      l169 0F88  
                                    l257 135C                                      l187 127C  
                                    l195 0ED2                                      l196 0ED6  
                                    l199 0BCE                                      l939 0E6A  
                                    u400 0F6A                                      u401 0F66  
                                    u410 0F80                                      u411 0F7C  
                                    u420 0F96                                      u421 0F92  
                                    u430 0FAC                                      u431 0FA8  
                                    u390 0F54                                      u391 0F50  
                                    u800 1672                                      u801 166E  
                                    u810 1698                                      u820 16AE  
                                    u821 16AA                                      u910 1A28  
                                    u830 16C4                                      u911 1A24  
                                    u831 16C0                                      u904 1A0A  
                                    u840 16F4                                      u745 1392  
                                    u905 1A06                                      u841 16F0  
                                    u817 168E                                      u930 1A64  
                                    u850 1724                                      u770 0DB4  
                                    u755 13B4                                      u931 1A60  
                                    u851 1720                                      u771 0DB0  
                                    u924 1A4A                                      u860 1854  
                                    u780 0DEE                                      u765 13D8  
                                    u925 1A46                                      u861 1850  
                                    u781 0DEA                                      u950 1A98  
                                    u870 1986                                      u790 165C  
                                    u951 1A94                                      u871 1982  
                                    u960 1AB6                                      u944 1A7A  
                                    u961 1AB2                                      u945 1A76  
                                    u970 1AD8                                      u890 19F4  
                                    u891 19F0                                      u980 1AE8  
                                    u884 19DA                                      u981 1AE4  
                                    u885 19D6                                      u797 1652  
                                    u990 1AF8                                      u991 1AF4  
                                    u977 1ACE                                      _key 006F  
                           ___awmod@sign 005D                                      wreg 0FE8  
                      ?_LCD_WriteCommand 0046                       ??_LCD_WriteCommand 0049  
                                   l2001 12DE                                     l2011 131C  
                                   l2003 12EE                                     l2013 132A  
                                   l2005 12F2                                     l2007 1300  
                                   l2009 130E                                     l1251 0F6A  
                                   l1501 13F6                                     l1253 0F80  
                                   l1511 144E                                     l1503 13F8  
                                   l1255 0F96                                     l1247 0F46  
                                   l1513 1472                                     l1505 1400  
                                   l1521 0B86                                     l1601 19B8  
                                   l1257 0FAC                                     l1249 0F54  
                                   l1515 147A                                     l1507 1418  
                                   l1523 0B90                                     l1611 19F4  
                                   l1603 19BA                                     l1531 0DB4  
                                   l1517 147C                                     l1509 1430  
                                   l1525 0B92                                     l1621 1A2C  
                                   l1613 1A16                                     l1541 163C  
                                   l1701 11A6                                     l1533 0DC4  
                                   l1519 0B84                                     l1711 0BCC  
                                   l1631 1AA4                                     l1623 1A64  
                                   l1615 1A18                                     l1551 1678  
                                   l1543 165E                                     l1535 0DCE  
                                   l1527 0D96                                     l1721 0BD0  
                                   l1633 1AA6                                     l1625 1A86  
                                   l1609 19BC                                     l1561 16B4  
                                   l1553 169A                                     l1545 1662  
                                   l1537 1632                                     l1705 0CCC  
                                   l1529 0DA6                                     l1641 0E00  
                                   l1801 0EA2                                     l1491 138A  
                                   l1731 0FB6                                     l1651 11C6  
                                   l1723 0BDE                                     l1635 1AB6  
                                   l1627 1A88                                     l1571 1704  
                                   l1563 16C4                                     l1555 169E  
                                   l1547 1672                                     l1539 1636  
                                   l1643 0E3C                                     l1707 0B9C  
                                   l1811 149E                                     l1803 0EB6  
                                   l1493 13AC                                     l1485 1362  
                                   l1741 0FF4                                     l1733 0FBC  
                                   l1661 1216                                     l1653 11D6  
                                   l1725 0BE0                                     l1629 1A98  
                                   l1581 1854                                     l1573 1710  
                                   l1565 16D4                                     l1557 16AE  
                                   l1549 1676                                     l1637 1AB8  
                                   l1821 14F6                                     l1813 14D6  
                                   l1805 0EC2                                     l1495 13D0  
                                   l1487 1364                                     l1751 103E  
                                   l1743 1002                                     l1735 0FCA  
                                   l1663 1226                                     l1655 11E6  
                                   l1647 11B2                                     l1727 0BF0  
                                   l1639 1AE8                                     l1591 1976  
                                   l1583 18E6                                     l1575 1724  
                                   l1567 16E0                                     l1559 16B2  
                                   l1671 1104                                     l1823 14FC  
                                   l1831 150E                                     l1815 14DA  
                                   l1807 1486                                     l1497 13EC  
                                   l1489 136C                                     l1761 0C32  
                                   l1753 0C04                                     l1745 1016  
                                   l1737 0FDA                                     l1657 11F6  
                                   l1649 11B6                                     l1729 0BF2  
                                   l1593 1986                                     l1585 1974  
                                   l1577 17B6                                     l1569 16F4  
                                   l1681 1134                                     l1673 1112  
                                   l1841 155E                                     l1825 1502  
                                   l1833 1534                                     l1817 14DE  
                                   l1809 1496                                     l1499 13F4  
                                   l1771 0D40                                     l1763 0D2E  
                                   l1755 0C0A                                     l1747 101C  
                                   l1739 0FE0                                     l1659 1206  
                                   l1667 1236                                     l1595 1994  
                                   l1579 1844                                     l1691 117A  
                                   l1683 1146                                     l1675 111A  
                                   l1851 15AE                                     l1843 1578  
                                   l1835 1544                                     l1827 1508  
                                   l1819 14E0                                     l1781 0D64  
                                   l1773 0D52                                     l1757 0C18  
                                   l1749 1030                                     l1597 19A0  
                                   l1693 1182                                     l1685 114E  
                                   l1677 111E                                     l1669 1102  
                                   l1861 160E                                     l1853 15C0  
                                   l1845 1596                                     l1837 1554  
                                   l1783 0D70                                     l1775 0D62  
                                   l1759 0C2C                                     l1599 19B0  
                                   l1695 1188                                     l1687 1156  
                                   l1679 112C                                     l1863 161A  
                                   l1855 15D2                                     l1847 159A  
                                   l1839 1558                                     l1791 0E6C  
                                   l1785 0D72                                     l1769 0D30  
                                   l1881 1098                                     l1689 1164  
                                   l1697 118E                                     l1865 162A  
                                   l1857 15EE                                     l1849 159C  
                                   l1793 0E70                                     l1787 0D82  
                                   l1891 10D8                                     l1883 10B6  
                                   l1867 1054                                     l1699 119E  
                                   l1859 15FA                                     l1795 0E7A  
                                   l1789 0D84                                     l1893 10DA  
                                   l1885 10C4                                     l1869 1074  
                                   l1797 0E86                                     l1981 1286  
                                   l1895 10EA                                     l1887 10C4  
                                   l1879 107E                                     l1799 0E96  
                                   l1991 12AE                                     l1983 128A  
                                   l1897 10EC                                     l1889 10C6  
                                   l1993 12CA                                     l1985 128E  
                                   l1899 10FC                                     l1995 12D2  
                                   l1987 1292                                     l1979 127E  
                                   l1997 12D6                                     l1989 12A0  
                                   l1999 12DA                                     STR_1 1D39  
                                   STR_2 1CFD                                     STR_3 1CDB  
                                   STR_4 1D0E                                     STR_5 1CEC  
                                   STR_6 1D0E                                     STR_7 1D1E  
                                   STR_8 1D2D                                     u1000 0E5C  
                                   u1010 1112                                     u1011 110E  
                                   u1100 0D82                                     u1020 112C  
                                   u1101 0D7E                                     u1021 1128  
                                   u1005 0E52                                     u1110 0D94  
                                   u1030 1146                                     u1111 0D90  
                                   u1031 1142                                     u1040 1164  
                                   u1200 15C0                                     u1120 0EB2  
                                   u1041 1160                                     u1201 15BC  
                                   u1121 0EAE                                     u1050 117A  
                                   u1210 15D2                                     u1130 0ED2  
                                   u1051 1176                                     u1211 15CE  
                                   u1131 0ECE                                     u1060 119E  
                                   u1220 160A                                     u1140 14F2  
                                   u1061 119A                                     u1221 1606  
                                   u1141 14EE                                     u1070 0BF0  
                                   u1230 162A                                     u1150 1544  
                                   u1071 0BEC                                     u1231 1626  
                                   u1151 1540                                     u1080 0C02  
                                   u1240 1098                                     u1160 1554  
                                   u1400 134A                                     u1081 0BFE  
                                   u1241 1094                                     u1161 1550  
                                   u1401 1346                                     u1090 0D40  
                                   u1250 10B6                                     u1170 1578  
                                   u1410 135C                                     u1091 0D3C  
                                   u1251 10B2                                     u1171 1574  
                                   u1411 1358                                     u1260 10D8  
                                   u1180 1596                                     u1261 10D4  
                                   u1181 1592                                     u1270 10EA  
                                   u1190 15AE                                     u1271 10E6  
                                   u1191 15AA                                     u1280 10FC  
                                   u1281 10F8                                     u1507 0C10  
                                   u1427 0FC2                                     u1380 12CA  
                                   u1517 0C24                                     u1437 0FD2  
                                   u1381 12C6                                     u1390 12EE  
                                   u1527 0C38                                     u1447 0FE6  
                                   u1391 12EA                                     u1537 1366  
                                   u1457 0FFA                                     u1547 13EE  
                                   u1467 100E                                     u1557 13FA  
                                   u1477 1022                                     u1567 1474  
                                   u1487 1036                                     u1577 147E  
                                   u1497 104A                           ??_drawGraphics 0068  
                                   _game 006D                                     _draw 1054  
                      random@lower_bound 0061                                     _main 127E  
                                   _rand 0E00                                     _seed 0076  
                                   fsr0h 0FEA                                     indf0 0FEF  
                                   fsr2h 0FDA                                     fsr0l 0FE9  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodh 0FF4  
                                   prodl 0FF3                                     start 0002  
                   __end_of_clearAllChar 0C04                            _LCD_WriteData 0B8E  
                          _LCD_WriteByte 1360                             ___param_bank 0000  
                       __end_of_LCD_Init 1054                  LCD_WriteCommand@command 0049  
                                  ?_draw 0046                                    ?_main 0046  
                                  ?_rand 0052                          __end_of___awmod 11B0  
         LCD_GraphicsDisplayString@dataA 005F           LCD_GraphicsDisplayString@dataB 0060  
         LCD_GraphicsDisplayString@count 005E                                    _TRISA 0F92  
                                  _TRISB 0F93                      ___lmul@multiplicand 004A  
                                  _logic 1486                                    _input 0F46  
                                  _score 0070                                    _setup 0E6C  
                                  draw@i 006A                                    draw@j 006B  
                                  draw@k 0069                                    tablat 0FF5  
                                  status 0FD8              ??_LCD_GraphicsDisplayString 004C  
                         ?_LCD_WriteData 0046                           ?_LCD_WriteByte 0046  
                        __initialization 0ED8                             __end_of_draw 1102  
                           __end_of_main 1360                             __end_of_rand 0E6C  
                                 ??_draw 0068                                   ??_main 006C  
                                 ??_rand 0054                            __activetblptr 0002  
                                 _ADCON1 0FC1                                   ?_logic 0046  
                                 ?_input 0046                                   ?_setup 0046  
        LCD_GraphicsDisplayString@colInd 0065                                   _OSCCON 0FD3  
                      random@upper_bound 005E                                   _Alpha1 1AFB  
                                 _Alpha2 1BF5  LCD_GraphicsDisplayString@shouldContinue 0053  
                                 ___lmul 0D96                                ??___awmod 005C  
                                 _fruitX 0072                                   _fruitY 0071  
                                 clear_0 0F1E                                   clear_1 0F2A  
                                 clear_2 0F36                                   _random 0B9A  
                        ___awmod@divisor 005A                     __end_of_drawGraphics 0D2E  
                                 isa$std 0001                          ___awmod@counter 005C  
              _LCD_GraphicsDisplayString 1630                                   logic@i 0068  
                           __pdataCOMRAM 0001                             __mediumconst 1AFA  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                              logic@prev2X 0063  
                            logic@prev2Y 0064                               __accesstop 0080  
                __end_of__initialization 0F3C                                ?_LCD_Init 0046  
                        ??_LCD_WriteData 0049                          ??_LCD_WriteByte 0046  
                          ___rparam_used 0001                           __pcstackCOMRAM 0046  
                           __pidataBANK0 0C43                            __end_of_logic 1630  
                          __end_of_input 0FB6                            __end_of_setup 0ED8  
                           _clearAllChar 0BCC                                  ??_logic 0062  
                                ??_input 0046                                  ??_setup 0062  
                             __pbssBANK0 00C4                               __pbssBANK1 0100  
                             ??_LCD_Init 004A                        _LCD_ClearGraphics 0D2E  
                                ?___lmul 0046                       ?_LCD_ClearGraphics 0046  
                         ___lmul@product 004E                                  ?_random 005E  
                    ??_LCD_ClearGraphics 004A             LCD_GraphicsDisplayString@row 0064  
           LCD_GraphicsDisplayString@str 004A                __end_of_LCD_ClearGraphics 0D96  
                                __Hparam 0000                                  __Lparam 0000  
                      LCD_WriteData@data 0049                                  ___awmod 1102  
                                __pcinit 0ED8                                  __ramtop 0200  
                                __ptext0 127E                                  __ptext1 0E6C  
                                __ptext2 1486                                  __ptext3 0B9A  
                                __ptext4 0E00                                  __ptext5 0D96  
                                __ptext6 1102                                  __ptext7 0F46  
                                __ptext8 1054                                  __ptext9 0CCC  
                       ___awmod@dividend 0058                        __end_of_placeChar 127E  
          _LCD_GraphicsDisplayString$113 004F            _LCD_GraphicsDisplayString$115 0051  
                              _LCDStore0 0035                                _LCDStore1 0024  
                              _LCDStore2 0013                                _LCDStore3 0002  
                              _LCDStore4 00B3                                _LCDStore5 00A2  
                              _LCDStore6 0091                                _LCDStore7 0080  
                   end_of_initialization 0F3C                             _drawGraphics 0CCC  
                          clearAllChar@i 0049                            clearAllChar@j 004A  
                          __Lmediumconst 1AFA                               _snakeTailX 00C4  
                             _snakeTailY 0100                                  postdec1 0FE5  
                                postinc0 0FEE                                  postinc2 0FDE  
                              _PORTAbits 0F80        LCD_GraphicsDisplayString@colListA 0054  
      LCD_GraphicsDisplayString@colListB 0059                         _LCD_WriteCommand 0B82  
                         __end_of_Alpha1 1BF5                           __end_of_Alpha2 1CDB  
                         __end_of___lmul 0E00                            __pidataCOMRAM 0C87  
                         __end_of_random 0BCC                      start_initialization 0ED8  
                  __end_of_LCD_WriteData 0B9A                    __end_of_LCD_WriteByte 1486  
                               ??___lmul 004E                     LCD_WriteByte@command 0048  
                            __pdataBANK0 0080                               logic@i_297 0067  
                               ??_random 005F                               logic@prevX 0065  
                             logic@prevY 0066                               placeChar@c 0047  
                             placeChar@x 0048                               placeChar@y 0046  
                            __pbssCOMRAM 006C               __end_of_LCD_EnableGraphics 0C42  
                          __pmediumconst 1AFA                                 ?___awmod 0058  
                              _placeChar 11B0                            _snakeHeadXPos 0075  
                          _snakeHeadYPos 0074                                 _LCD_Init 0FB6  
                               _LATBbits 0F8A            LCD_GraphicsDisplayString@indA 0066  
          LCD_GraphicsDisplayString@indB 0067            LCD_GraphicsDisplayString@line 0061  
               __end_of_LCD_WriteCommand 0B8E                        ___lmul@multiplier 0046  
                              copy_data0 0EEC                                copy_data1 0F0C  
                             ?_placeChar 0046                                 __Hrparam 0000  
                               __Lrparam 0000                            ?_clearAllChar 0046  
                               _gameover 006C                                 __ptext10 1630  
                               __ptext11 0BCC                                 __ptext12 11B0  
                               __ptext13 0FB6                                 __ptext14 0C04  
                               __ptext15 0D2E                                 __ptext16 0B8E  
                               __ptext17 0B82                                 __ptext18 1360  
                               _mainMenu 0001               ?_LCD_GraphicsDisplayString 004A  
                           _snakeTailLen 0073                                 isa$xinst 0000  
                         ??_clearAllChar 0049                              _looseScreen 006E  
                            ??_placeChar 0048        __end_of_LCD_GraphicsDisplayString 1AFA  
                     _LCD_EnableGraphics 0C04         LCD_GraphicsDisplayString@letterA 0062  
       LCD_GraphicsDisplayString@letterB 0063                      ?_LCD_EnableGraphics 0046  
                     LCD_ClearGraphics@x 004A                       LCD_ClearGraphics@y 004B  
                          ?_drawGraphics 0046  
