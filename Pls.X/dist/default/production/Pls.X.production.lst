

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec 04 22:33:48 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 17/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4321 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F80                     PORTA           equ	3968	;# 
   115   000F81                     PORTB           equ	3969	;# 
   116   000F82                     PORTC           equ	3970	;# 
   117   000F83                     PORTD           equ	3971	;# 
   118   000F84                     PORTE           equ	3972	;# 
   119   000F89                     LATA            equ	3977	;# 
   120   000F8A                     LATB            equ	3978	;# 
   121   000F8B                     LATC            equ	3979	;# 
   122   000F8C                     LATD            equ	3980	;# 
   123   000F8D                     LATE            equ	3981	;# 
   124   000F92                     TRISA           equ	3986	;# 
   125   000F92                     DDRA            equ	3986	;# 
   126   000F93                     TRISB           equ	3987	;# 
   127   000F93                     DDRB            equ	3987	;# 
   128   000F94                     TRISC           equ	3988	;# 
   129   000F94                     DDRC            equ	3988	;# 
   130   000F95                     TRISD           equ	3989	;# 
   131   000F95                     DDRD            equ	3989	;# 
   132   000F96                     TRISE           equ	3990	;# 
   133   000F96                     DDRE            equ	3990	;# 
   134   000F9B                     OSCTUNE         equ	3995	;# 
   135   000F9D                     PIE1            equ	3997	;# 
   136   000F9E                     PIR1            equ	3998	;# 
   137   000F9F                     IPR1            equ	3999	;# 
   138   000FA0                     PIE2            equ	4000	;# 
   139   000FA1                     PIR2            equ	4001	;# 
   140   000FA2                     IPR2            equ	4002	;# 
   141   000FA6                     EECON1          equ	4006	;# 
   142   000FA7                     EECON2          equ	4007	;# 
   143   000FA8                     EEDATA          equ	4008	;# 
   144   000FA9                     EEADR           equ	4009	;# 
   145   000FAB                     RCSTA           equ	4011	;# 
   146   000FAB                     RCSTA1          equ	4011	;# 
   147   000FAC                     TXSTA           equ	4012	;# 
   148   000FAC                     TXSTA1          equ	4012	;# 
   149   000FAD                     TXREG           equ	4013	;# 
   150   000FAD                     TXREG1          equ	4013	;# 
   151   000FAE                     RCREG           equ	4014	;# 
   152   000FAE                     RCREG1          equ	4014	;# 
   153   000FAF                     SPBRG           equ	4015	;# 
   154   000FAF                     SPBRG1          equ	4015	;# 
   155   000FB0                     SPBRGH          equ	4016	;# 
   156   000FB1                     T3CON           equ	4017	;# 
   157   000FB2                     TMR3            equ	4018	;# 
   158   000FB2                     TMR3L           equ	4018	;# 
   159   000FB3                     TMR3H           equ	4019	;# 
   160   000FB4                     CMCON           equ	4020	;# 
   161   000FB5                     CVRCON          equ	4021	;# 
   162   000FB6                     ECCP1AS         equ	4022	;# 
   163   000FB7                     ECCP1DEL        equ	4023	;# 
   164   000FB7                     PWM1CON         equ	4023	;# 
   165   000FB8                     BAUDCON         equ	4024	;# 
   166   000FB8                     BAUDCTL         equ	4024	;# 
   167   000FBA                     CCP2CON         equ	4026	;# 
   168   000FBB                     CCPR2           equ	4027	;# 
   169   000FBB                     CCPR2L          equ	4027	;# 
   170   000FBC                     CCPR2H          equ	4028	;# 
   171   000FBD                     CCP1CON         equ	4029	;# 
   172   000FBD                     ECCP1CON        equ	4029	;# 
   173   000FBE                     CCPR1           equ	4030	;# 
   174   000FBE                     CCPR1L          equ	4030	;# 
   175   000FBF                     CCPR1H          equ	4031	;# 
   176   000FC0                     ADCON2          equ	4032	;# 
   177   000FC1                     ADCON1          equ	4033	;# 
   178   000FC2                     ADCON0          equ	4034	;# 
   179   000FC3                     ADRES           equ	4035	;# 
   180   000FC3                     ADRESL          equ	4035	;# 
   181   000FC4                     ADRESH          equ	4036	;# 
   182   000FC5                     SSPCON2         equ	4037	;# 
   183   000FC6                     SSPCON1         equ	4038	;# 
   184   000FC7                     SSPSTAT         equ	4039	;# 
   185   000FC8                     SSPADD          equ	4040	;# 
   186   000FC9                     SSPBUF          equ	4041	;# 
   187   000FCA                     T2CON           equ	4042	;# 
   188   000FCB                     PR2             equ	4043	;# 
   189   000FCB                     MEMCON          equ	4043	;# 
   190   000FCC                     TMR2            equ	4044	;# 
   191   000FCD                     T1CON           equ	4045	;# 
   192   000FCE                     TMR1            equ	4046	;# 
   193   000FCE                     TMR1L           equ	4046	;# 
   194   000FCF                     TMR1H           equ	4047	;# 
   195   000FD0                     RCON            equ	4048	;# 
   196   000FD1                     WDTCON          equ	4049	;# 
   197   000FD2                     HLVDCON         equ	4050	;# 
   198   000FD2                     LVDCON          equ	4050	;# 
   199   000FD3                     OSCCON          equ	4051	;# 
   200   000FD5                     T0CON           equ	4053	;# 
   201   000FD6                     TMR0            equ	4054	;# 
   202   000FD6                     TMR0L           equ	4054	;# 
   203   000FD7                     TMR0H           equ	4055	;# 
   204   000FD8                     STATUS          equ	4056	;# 
   205   000FD9                     FSR2            equ	4057	;# 
   206   000FD9                     FSR2L           equ	4057	;# 
   207   000FDA                     FSR2H           equ	4058	;# 
   208   000FDB                     PLUSW2          equ	4059	;# 
   209   000FDC                     PREINC2         equ	4060	;# 
   210   000FDD                     POSTDEC2        equ	4061	;# 
   211   000FDE                     POSTINC2        equ	4062	;# 
   212   000FDF                     INDF2           equ	4063	;# 
   213   000FE0                     BSR             equ	4064	;# 
   214   000FE1                     FSR1            equ	4065	;# 
   215   000FE1                     FSR1L           equ	4065	;# 
   216   000FE2                     FSR1H           equ	4066	;# 
   217   000FE3                     PLUSW1          equ	4067	;# 
   218   000FE4                     PREINC1         equ	4068	;# 
   219   000FE5                     POSTDEC1        equ	4069	;# 
   220   000FE6                     POSTINC1        equ	4070	;# 
   221   000FE7                     INDF1           equ	4071	;# 
   222   000FE8                     WREG            equ	4072	;# 
   223   000FE9                     FSR0            equ	4073	;# 
   224   000FE9                     FSR0L           equ	4073	;# 
   225   000FEA                     FSR0H           equ	4074	;# 
   226   000FEB                     PLUSW0          equ	4075	;# 
   227   000FEC                     PREINC0         equ	4076	;# 
   228   000FED                     POSTDEC0        equ	4077	;# 
   229   000FEE                     POSTINC0        equ	4078	;# 
   230   000FEF                     INDF0           equ	4079	;# 
   231   000FF0                     INTCON3         equ	4080	;# 
   232   000FF1                     INTCON2         equ	4081	;# 
   233   000FF2                     INTCON          equ	4082	;# 
   234   000FF3                     PROD            equ	4083	;# 
   235   000FF3                     PRODL           equ	4083	;# 
   236   000FF4                     PRODH           equ	4084	;# 
   237   000FF5                     TABLAT          equ	4085	;# 
   238   000FF6                     TBLPTR          equ	4086	;# 
   239   000FF6                     TBLPTRL         equ	4086	;# 
   240   000FF7                     TBLPTRH         equ	4087	;# 
   241   000FF8                     TBLPTRU         equ	4088	;# 
   242   000FF9                     PCLAT           equ	4089	;# 
   243   000FF9                     PC              equ	4089	;# 
   244   000FF9                     PCL             equ	4089	;# 
   245   000FFA                     PCLATH          equ	4090	;# 
   246   000FFB                     PCLATU          equ	4091	;# 
   247   000FFC                     STKPTR          equ	4092	;# 
   248   000FFD                     TOS             equ	4093	;# 
   249   000FFD                     TOSL            equ	4093	;# 
   250   000FFE                     TOSH            equ	4094	;# 
   251   000FFF                     TOSU            equ	4095	;# 
   252   000F80                     PORTA           equ	3968	;# 
   253   000F81                     PORTB           equ	3969	;# 
   254   000F82                     PORTC           equ	3970	;# 
   255   000F83                     PORTD           equ	3971	;# 
   256   000F84                     PORTE           equ	3972	;# 
   257   000F89                     LATA            equ	3977	;# 
   258   000F8A                     LATB            equ	3978	;# 
   259   000F8B                     LATC            equ	3979	;# 
   260   000F8C                     LATD            equ	3980	;# 
   261   000F8D                     LATE            equ	3981	;# 
   262   000F92                     TRISA           equ	3986	;# 
   263   000F92                     DDRA            equ	3986	;# 
   264   000F93                     TRISB           equ	3987	;# 
   265   000F93                     DDRB            equ	3987	;# 
   266   000F94                     TRISC           equ	3988	;# 
   267   000F94                     DDRC            equ	3988	;# 
   268   000F95                     TRISD           equ	3989	;# 
   269   000F95                     DDRD            equ	3989	;# 
   270   000F96                     TRISE           equ	3990	;# 
   271   000F96                     DDRE            equ	3990	;# 
   272   000F9B                     OSCTUNE         equ	3995	;# 
   273   000F9D                     PIE1            equ	3997	;# 
   274   000F9E                     PIR1            equ	3998	;# 
   275   000F9F                     IPR1            equ	3999	;# 
   276   000FA0                     PIE2            equ	4000	;# 
   277   000FA1                     PIR2            equ	4001	;# 
   278   000FA2                     IPR2            equ	4002	;# 
   279   000FA6                     EECON1          equ	4006	;# 
   280   000FA7                     EECON2          equ	4007	;# 
   281   000FA8                     EEDATA          equ	4008	;# 
   282   000FA9                     EEADR           equ	4009	;# 
   283   000FAB                     RCSTA           equ	4011	;# 
   284   000FAB                     RCSTA1          equ	4011	;# 
   285   000FAC                     TXSTA           equ	4012	;# 
   286   000FAC                     TXSTA1          equ	4012	;# 
   287   000FAD                     TXREG           equ	4013	;# 
   288   000FAD                     TXREG1          equ	4013	;# 
   289   000FAE                     RCREG           equ	4014	;# 
   290   000FAE                     RCREG1          equ	4014	;# 
   291   000FAF                     SPBRG           equ	4015	;# 
   292   000FAF                     SPBRG1          equ	4015	;# 
   293   000FB0                     SPBRGH          equ	4016	;# 
   294   000FB1                     T3CON           equ	4017	;# 
   295   000FB2                     TMR3            equ	4018	;# 
   296   000FB2                     TMR3L           equ	4018	;# 
   297   000FB3                     TMR3H           equ	4019	;# 
   298   000FB4                     CMCON           equ	4020	;# 
   299   000FB5                     CVRCON          equ	4021	;# 
   300   000FB6                     ECCP1AS         equ	4022	;# 
   301   000FB7                     ECCP1DEL        equ	4023	;# 
   302   000FB7                     PWM1CON         equ	4023	;# 
   303   000FB8                     BAUDCON         equ	4024	;# 
   304   000FB8                     BAUDCTL         equ	4024	;# 
   305   000FBA                     CCP2CON         equ	4026	;# 
   306   000FBB                     CCPR2           equ	4027	;# 
   307   000FBB                     CCPR2L          equ	4027	;# 
   308   000FBC                     CCPR2H          equ	4028	;# 
   309   000FBD                     CCP1CON         equ	4029	;# 
   310   000FBD                     ECCP1CON        equ	4029	;# 
   311   000FBE                     CCPR1           equ	4030	;# 
   312   000FBE                     CCPR1L          equ	4030	;# 
   313   000FBF                     CCPR1H          equ	4031	;# 
   314   000FC0                     ADCON2          equ	4032	;# 
   315   000FC1                     ADCON1          equ	4033	;# 
   316   000FC2                     ADCON0          equ	4034	;# 
   317   000FC3                     ADRES           equ	4035	;# 
   318   000FC3                     ADRESL          equ	4035	;# 
   319   000FC4                     ADRESH          equ	4036	;# 
   320   000FC5                     SSPCON2         equ	4037	;# 
   321   000FC6                     SSPCON1         equ	4038	;# 
   322   000FC7                     SSPSTAT         equ	4039	;# 
   323   000FC8                     SSPADD          equ	4040	;# 
   324   000FC9                     SSPBUF          equ	4041	;# 
   325   000FCA                     T2CON           equ	4042	;# 
   326   000FCB                     PR2             equ	4043	;# 
   327   000FCB                     MEMCON          equ	4043	;# 
   328   000FCC                     TMR2            equ	4044	;# 
   329   000FCD                     T1CON           equ	4045	;# 
   330   000FCE                     TMR1            equ	4046	;# 
   331   000FCE                     TMR1L           equ	4046	;# 
   332   000FCF                     TMR1H           equ	4047	;# 
   333   000FD0                     RCON            equ	4048	;# 
   334   000FD1                     WDTCON          equ	4049	;# 
   335   000FD2                     HLVDCON         equ	4050	;# 
   336   000FD2                     LVDCON          equ	4050	;# 
   337   000FD3                     OSCCON          equ	4051	;# 
   338   000FD5                     T0CON           equ	4053	;# 
   339   000FD6                     TMR0            equ	4054	;# 
   340   000FD6                     TMR0L           equ	4054	;# 
   341   000FD7                     TMR0H           equ	4055	;# 
   342   000FD8                     STATUS          equ	4056	;# 
   343   000FD9                     FSR2            equ	4057	;# 
   344   000FD9                     FSR2L           equ	4057	;# 
   345   000FDA                     FSR2H           equ	4058	;# 
   346   000FDB                     PLUSW2          equ	4059	;# 
   347   000FDC                     PREINC2         equ	4060	;# 
   348   000FDD                     POSTDEC2        equ	4061	;# 
   349   000FDE                     POSTINC2        equ	4062	;# 
   350   000FDF                     INDF2           equ	4063	;# 
   351   000FE0                     BSR             equ	4064	;# 
   352   000FE1                     FSR1            equ	4065	;# 
   353   000FE1                     FSR1L           equ	4065	;# 
   354   000FE2                     FSR1H           equ	4066	;# 
   355   000FE3                     PLUSW1          equ	4067	;# 
   356   000FE4                     PREINC1         equ	4068	;# 
   357   000FE5                     POSTDEC1        equ	4069	;# 
   358   000FE6                     POSTINC1        equ	4070	;# 
   359   000FE7                     INDF1           equ	4071	;# 
   360   000FE8                     WREG            equ	4072	;# 
   361   000FE9                     FSR0            equ	4073	;# 
   362   000FE9                     FSR0L           equ	4073	;# 
   363   000FEA                     FSR0H           equ	4074	;# 
   364   000FEB                     PLUSW0          equ	4075	;# 
   365   000FEC                     PREINC0         equ	4076	;# 
   366   000FED                     POSTDEC0        equ	4077	;# 
   367   000FEE                     POSTINC0        equ	4078	;# 
   368   000FEF                     INDF0           equ	4079	;# 
   369   000FF0                     INTCON3         equ	4080	;# 
   370   000FF1                     INTCON2         equ	4081	;# 
   371   000FF2                     INTCON          equ	4082	;# 
   372   000FF3                     PROD            equ	4083	;# 
   373   000FF3                     PRODL           equ	4083	;# 
   374   000FF4                     PRODH           equ	4084	;# 
   375   000FF5                     TABLAT          equ	4085	;# 
   376   000FF6                     TBLPTR          equ	4086	;# 
   377   000FF6                     TBLPTRL         equ	4086	;# 
   378   000FF7                     TBLPTRH         equ	4087	;# 
   379   000FF8                     TBLPTRU         equ	4088	;# 
   380   000FF9                     PCLAT           equ	4089	;# 
   381   000FF9                     PC              equ	4089	;# 
   382   000FF9                     PCL             equ	4089	;# 
   383   000FFA                     PCLATH          equ	4090	;# 
   384   000FFB                     PCLATU          equ	4091	;# 
   385   000FFC                     STKPTR          equ	4092	;# 
   386   000FFD                     TOS             equ	4093	;# 
   387   000FFD                     TOSL            equ	4093	;# 
   388   000FFE                     TOSH            equ	4094	;# 
   389   000FFF                     TOSU            equ	4095	;# 
   390                           
   391                           	psect	idataCOMRAM
   392   000D0B                     __pidataCOMRAM:
   393                           	callstack 0
   394                           
   395                           ;initializer for _mainMenu
   396   000D0B  01                 	db	1
   397                           
   398                           ;initializer for _LCDStore3
   399   000D0C  20                 	db	32
   400   000D0D  20                 	db	32
   401   000D0E  20                 	db	32
   402   000D0F  20                 	db	32
   403   000D10  20                 	db	32
   404   000D11  20                 	db	32
   405   000D12  20                 	db	32
   406   000D13  20                 	db	32
   407   000D14  20                 	db	32
   408   000D15  20                 	db	32
   409   000D16  20                 	db	32
   410   000D17  20                 	db	32
   411   000D18  20                 	db	32
   412   000D19  20                 	db	32
   413   000D1A  20                 	db	32
   414   000D1B  20                 	db	32
   415   000D1C  00                 	db	0
   416                           
   417                           ;initializer for _LCDStore2
   418   000D1D  20                 	db	32
   419   000D1E  20                 	db	32
   420   000D1F  20                 	db	32
   421   000D20  20                 	db	32
   422   000D21  20                 	db	32
   423   000D22  20                 	db	32
   424   000D23  20                 	db	32
   425   000D24  20                 	db	32
   426   000D25  20                 	db	32
   427   000D26  20                 	db	32
   428   000D27  20                 	db	32
   429   000D28  20                 	db	32
   430   000D29  20                 	db	32
   431   000D2A  20                 	db	32
   432   000D2B  20                 	db	32
   433   000D2C  20                 	db	32
   434   000D2D  00                 	db	0
   435                           
   436                           ;initializer for _LCDStore1
   437   000D2E  20                 	db	32
   438   000D2F  20                 	db	32
   439   000D30  20                 	db	32
   440   000D31  20                 	db	32
   441   000D32  20                 	db	32
   442   000D33  20                 	db	32
   443   000D34  20                 	db	32
   444   000D35  20                 	db	32
   445   000D36  20                 	db	32
   446   000D37  20                 	db	32
   447   000D38  20                 	db	32
   448   000D39  20                 	db	32
   449   000D3A  20                 	db	32
   450   000D3B  20                 	db	32
   451   000D3C  20                 	db	32
   452   000D3D  20                 	db	32
   453   000D3E  00                 	db	0
   454                           
   455                           ;initializer for _LCDStore0
   456   000D3F  20                 	db	32
   457   000D40  20                 	db	32
   458   000D41  20                 	db	32
   459   000D42  20                 	db	32
   460   000D43  20                 	db	32
   461   000D44  20                 	db	32
   462   000D45  20                 	db	32
   463   000D46  20                 	db	32
   464   000D47  20                 	db	32
   465   000D48  20                 	db	32
   466   000D49  20                 	db	32
   467   000D4A  20                 	db	32
   468   000D4B  20                 	db	32
   469   000D4C  20                 	db	32
   470   000D4D  20                 	db	32
   471   000D4E  20                 	db	32
   472   000D4F  00                 	db	0
   473                           
   474                           	psect	idataBANK0
   475   000CC7                     __pidataBANK0:
   476                           	callstack 0
   477                           
   478                           ;initializer for _LCDStore7
   479   000CC7  20                 	db	32
   480   000CC8  20                 	db	32
   481   000CC9  20                 	db	32
   482   000CCA  20                 	db	32
   483   000CCB  20                 	db	32
   484   000CCC  20                 	db	32
   485   000CCD  20                 	db	32
   486   000CCE  20                 	db	32
   487   000CCF  20                 	db	32
   488   000CD0  20                 	db	32
   489   000CD1  20                 	db	32
   490   000CD2  20                 	db	32
   491   000CD3  20                 	db	32
   492   000CD4  20                 	db	32
   493   000CD5  20                 	db	32
   494   000CD6  20                 	db	32
   495   000CD7  00                 	db	0
   496                           
   497                           ;initializer for _LCDStore6
   498   000CD8  20                 	db	32
   499   000CD9  20                 	db	32
   500   000CDA  20                 	db	32
   501   000CDB  20                 	db	32
   502   000CDC  20                 	db	32
   503   000CDD  20                 	db	32
   504   000CDE  20                 	db	32
   505   000CDF  20                 	db	32
   506   000CE0  20                 	db	32
   507   000CE1  20                 	db	32
   508   000CE2  20                 	db	32
   509   000CE3  20                 	db	32
   510   000CE4  20                 	db	32
   511   000CE5  20                 	db	32
   512   000CE6  20                 	db	32
   513   000CE7  20                 	db	32
   514   000CE8  00                 	db	0
   515                           
   516                           ;initializer for _LCDStore5
   517   000CE9  20                 	db	32
   518   000CEA  20                 	db	32
   519   000CEB  20                 	db	32
   520   000CEC  20                 	db	32
   521   000CED  20                 	db	32
   522   000CEE  20                 	db	32
   523   000CEF  20                 	db	32
   524   000CF0  20                 	db	32
   525   000CF1  20                 	db	32
   526   000CF2  20                 	db	32
   527   000CF3  20                 	db	32
   528   000CF4  20                 	db	32
   529   000CF5  20                 	db	32
   530   000CF6  20                 	db	32
   531   000CF7  20                 	db	32
   532   000CF8  20                 	db	32
   533   000CF9  00                 	db	0
   534                           
   535                           ;initializer for _LCDStore4
   536   000CFA  20                 	db	32
   537   000CFB  20                 	db	32
   538   000CFC  20                 	db	32
   539   000CFD  20                 	db	32
   540   000CFE  20                 	db	32
   541   000CFF  20                 	db	32
   542   000D00  20                 	db	32
   543   000D01  20                 	db	32
   544   000D02  20                 	db	32
   545   000D03  20                 	db	32
   546   000D04  20                 	db	32
   547   000D05  20                 	db	32
   548   000D06  20                 	db	32
   549   000D07  20                 	db	32
   550   000D08  20                 	db	32
   551   000D09  20                 	db	32
   552   000D0A  00                 	db	0
   553                           
   554                           	psect	mediumconst
   555   001D68                     __pmediumconst:
   556                           	callstack 0
   557   001D68  00                 	db	0
   558   001D69                     _Alpha1:
   559                           	callstack 0
   560   001D69  00                 	db	0
   561   001D6A  00                 	db	0
   562   001D6B  00                 	db	0
   563   001D6C  00                 	db	0
   564   001D6D  00                 	db	0
   565   001D6E  00                 	db	0
   566   001D6F  00                 	db	0
   567   001D70  5F                 	db	95
   568   001D71  00                 	db	0
   569   001D72  00                 	db	0
   570   001D73  00                 	db	0
   571   001D74  07                 	db	7
   572   001D75  00                 	db	0
   573   001D76  07                 	db	7
   574   001D77  00                 	db	0
   575   001D78  14                 	db	20
   576   001D79  7F                 	db	127
   577   001D7A  14                 	db	20
   578   001D7B  7F                 	db	127
   579   001D7C  14                 	db	20
   580   001D7D  24                 	db	36
   581   001D7E  2A                 	db	42
   582   001D7F  7F                 	db	127
   583   001D80  2A                 	db	42
   584   001D81  12                 	db	18
   585   001D82  23                 	db	35
   586   001D83  13                 	db	19
   587   001D84  08                 	db	8
   588   001D85  64                 	db	100
   589   001D86  62                 	db	98
   590   001D87  36                 	db	54
   591   001D88  49                 	db	73
   592   001D89  55                 	db	85
   593   001D8A  22                 	db	34
   594   001D8B  50                 	db	80
   595   001D8C  00                 	db	0
   596   001D8D  05                 	db	5
   597   001D8E  03                 	db	3
   598   001D8F  00                 	db	0
   599   001D90  00                 	db	0
   600   001D91  00                 	db	0
   601   001D92  1C                 	db	28
   602   001D93  22                 	db	34
   603   001D94  41                 	db	65
   604   001D95  00                 	db	0
   605   001D96  00                 	db	0
   606   001D97  41                 	db	65
   607   001D98  22                 	db	34
   608   001D99  1C                 	db	28
   609   001D9A  00                 	db	0
   610   001D9B  14                 	db	20
   611   001D9C  08                 	db	8
   612   001D9D  3E                 	db	62
   613   001D9E  08                 	db	8
   614   001D9F  14                 	db	20
   615   001DA0  08                 	db	8
   616   001DA1  08                 	db	8
   617   001DA2  3E                 	db	62
   618   001DA3  08                 	db	8
   619   001DA4  08                 	db	8
   620   001DA5  00                 	db	0
   621   001DA6  50                 	db	80
   622   001DA7  30                 	db	48
   623   001DA8  00                 	db	0
   624   001DA9  00                 	db	0
   625   001DAA  08                 	db	8
   626   001DAB  08                 	db	8
   627   001DAC  08                 	db	8
   628   001DAD  08                 	db	8
   629   001DAE  08                 	db	8
   630   001DAF  00                 	db	0
   631   001DB0  60                 	db	96
   632   001DB1  60                 	db	96
   633   001DB2  00                 	db	0
   634   001DB3  00                 	db	0
   635   001DB4  20                 	db	32
   636   001DB5  10                 	db	16
   637   001DB6  08                 	db	8
   638   001DB7  04                 	db	4
   639   001DB8  02                 	db	2
   640   001DB9  3E                 	db	62
   641   001DBA  51                 	db	81
   642   001DBB  49                 	db	73
   643   001DBC  45                 	db	69
   644   001DBD  3E                 	db	62
   645   001DBE  00                 	db	0
   646   001DBF  42                 	db	66
   647   001DC0  7F                 	db	127
   648   001DC1  40                 	db	64
   649   001DC2  00                 	db	0
   650   001DC3  42                 	db	66
   651   001DC4  61                 	db	97
   652   001DC5  51                 	db	81
   653   001DC6  49                 	db	73
   654   001DC7  46                 	db	70
   655   001DC8  21                 	db	33
   656   001DC9  41                 	db	65
   657   001DCA  45                 	db	69
   658   001DCB  4B                 	db	75
   659   001DCC  31                 	db	49
   660   001DCD  18                 	db	24
   661   001DCE  14                 	db	20
   662   001DCF  12                 	db	18
   663   001DD0  7F                 	db	127
   664   001DD1  10                 	db	16
   665   001DD2  27                 	db	39
   666   001DD3  45                 	db	69
   667   001DD4  45                 	db	69
   668   001DD5  45                 	db	69
   669   001DD6  39                 	db	57
   670   001DD7  3C                 	db	60
   671   001DD8  4A                 	db	74
   672   001DD9  49                 	db	73
   673   001DDA  49                 	db	73
   674   001DDB  30                 	db	48
   675   001DDC  01                 	db	1
   676   001DDD  71                 	db	113
   677   001DDE  09                 	db	9
   678   001DDF  05                 	db	5
   679   001DE0  03                 	db	3
   680   001DE1  36                 	db	54
   681   001DE2  49                 	db	73
   682   001DE3  49                 	db	73
   683   001DE4  49                 	db	73
   684   001DE5  36                 	db	54
   685   001DE6  06                 	db	6
   686   001DE7  49                 	db	73
   687   001DE8  49                 	db	73
   688   001DE9  29                 	db	41
   689   001DEA  1E                 	db	30
   690   001DEB  00                 	db	0
   691   001DEC  36                 	db	54
   692   001DED  36                 	db	54
   693   001DEE  00                 	db	0
   694   001DEF  00                 	db	0
   695   001DF0  00                 	db	0
   696   001DF1  56                 	db	86
   697   001DF2  36                 	db	54
   698   001DF3  00                 	db	0
   699   001DF4  00                 	db	0
   700   001DF5  08                 	db	8
   701   001DF6  14                 	db	20
   702   001DF7  22                 	db	34
   703   001DF8  41                 	db	65
   704   001DF9  00                 	db	0
   705   001DFA  14                 	db	20
   706   001DFB  14                 	db	20
   707   001DFC  14                 	db	20
   708   001DFD  14                 	db	20
   709   001DFE  14                 	db	20
   710   001DFF  00                 	db	0
   711   001E00  41                 	db	65
   712   001E01  22                 	db	34
   713   001E02  14                 	db	20
   714   001E03  08                 	db	8
   715   001E04  02                 	db	2
   716   001E05  01                 	db	1
   717   001E06  51                 	db	81
   718   001E07  09                 	db	9
   719   001E08  06                 	db	6
   720   001E09  32                 	db	50
   721   001E0A  49                 	db	73
   722   001E0B  79                 	db	121
   723   001E0C  41                 	db	65
   724   001E0D  3E                 	db	62
   725   001E0E  7E                 	db	126
   726   001E0F  11                 	db	17
   727   001E10  11                 	db	17
   728   001E11  11                 	db	17
   729   001E12  7E                 	db	126
   730   001E13  7F                 	db	127
   731   001E14  49                 	db	73
   732   001E15  49                 	db	73
   733   001E16  49                 	db	73
   734   001E17  36                 	db	54
   735   001E18  3E                 	db	62
   736   001E19  41                 	db	65
   737   001E1A  41                 	db	65
   738   001E1B  41                 	db	65
   739   001E1C  22                 	db	34
   740   001E1D  7F                 	db	127
   741   001E1E  41                 	db	65
   742   001E1F  41                 	db	65
   743   001E20  22                 	db	34
   744   001E21  1C                 	db	28
   745   001E22  7F                 	db	127
   746   001E23  49                 	db	73
   747   001E24  49                 	db	73
   748   001E25  49                 	db	73
   749   001E26  41                 	db	65
   750   001E27  7F                 	db	127
   751   001E28  09                 	db	9
   752   001E29  09                 	db	9
   753   001E2A  09                 	db	9
   754   001E2B  01                 	db	1
   755   001E2C  3E                 	db	62
   756   001E2D  41                 	db	65
   757   001E2E  49                 	db	73
   758   001E2F  49                 	db	73
   759   001E30  7A                 	db	122
   760   001E31  7F                 	db	127
   761   001E32  08                 	db	8
   762   001E33  08                 	db	8
   763   001E34  08                 	db	8
   764   001E35  7F                 	db	127
   765   001E36  00                 	db	0
   766   001E37  41                 	db	65
   767   001E38  7F                 	db	127
   768   001E39  41                 	db	65
   769   001E3A  00                 	db	0
   770   001E3B  20                 	db	32
   771   001E3C  40                 	db	64
   772   001E3D  41                 	db	65
   773   001E3E  3F                 	db	63
   774   001E3F  01                 	db	1
   775   001E40  7F                 	db	127
   776   001E41  08                 	db	8
   777   001E42  14                 	db	20
   778   001E43  22                 	db	34
   779   001E44  41                 	db	65
   780   001E45  7F                 	db	127
   781   001E46  40                 	db	64
   782   001E47  40                 	db	64
   783   001E48  40                 	db	64
   784   001E49  40                 	db	64
   785   001E4A  7F                 	db	127
   786   001E4B  02                 	db	2
   787   001E4C  0C                 	db	12
   788   001E4D  02                 	db	2
   789   001E4E  7F                 	db	127
   790   001E4F  7F                 	db	127
   791   001E50  04                 	db	4
   792   001E51  08                 	db	8
   793   001E52  10                 	db	16
   794   001E53  7F                 	db	127
   795   001E54  3E                 	db	62
   796   001E55  41                 	db	65
   797   001E56  41                 	db	65
   798   001E57  41                 	db	65
   799   001E58  3E                 	db	62
   800   001E59  7F                 	db	127
   801   001E5A  09                 	db	9
   802   001E5B  09                 	db	9
   803   001E5C  09                 	db	9
   804   001E5D  06                 	db	6
   805   001E5E  3E                 	db	62
   806   001E5F  41                 	db	65
   807   001E60  51                 	db	81
   808   001E61  21                 	db	33
   809   001E62  5E                 	db	94
   810   001E63                     __end_of_Alpha1:
   811                           	callstack 0
   812   001E63                     _Alpha2:
   813                           	callstack 0
   814   001E63  7F                 	db	127
   815   001E64  09                 	db	9
   816   001E65  19                 	db	25
   817   001E66  29                 	db	41
   818   001E67  46                 	db	70
   819   001E68  46                 	db	70
   820   001E69  49                 	db	73
   821   001E6A  49                 	db	73
   822   001E6B  49                 	db	73
   823   001E6C  31                 	db	49
   824   001E6D  01                 	db	1
   825   001E6E  01                 	db	1
   826   001E6F  7F                 	db	127
   827   001E70  01                 	db	1
   828   001E71  01                 	db	1
   829   001E72  3F                 	db	63
   830   001E73  40                 	db	64
   831   001E74  40                 	db	64
   832   001E75  40                 	db	64
   833   001E76  3F                 	db	63
   834   001E77  1F                 	db	31
   835   001E78  20                 	db	32
   836   001E79  40                 	db	64
   837   001E7A  20                 	db	32
   838   001E7B  1F                 	db	31
   839   001E7C  3F                 	db	63
   840   001E7D  40                 	db	64
   841   001E7E  38                 	db	56
   842   001E7F  40                 	db	64
   843   001E80  3F                 	db	63
   844   001E81  63                 	db	99
   845   001E82  14                 	db	20
   846   001E83  08                 	db	8
   847   001E84  14                 	db	20
   848   001E85  63                 	db	99
   849   001E86  07                 	db	7
   850   001E87  08                 	db	8
   851   001E88  70                 	db	112
   852   001E89  08                 	db	8
   853   001E8A  07                 	db	7
   854   001E8B  61                 	db	97
   855   001E8C  51                 	db	81
   856   001E8D  49                 	db	73
   857   001E8E  45                 	db	69
   858   001E8F  43                 	db	67
   859   001E90  00                 	db	0
   860   001E91  7F                 	db	127
   861   001E92  41                 	db	65
   862   001E93  41                 	db	65
   863   001E94  00                 	db	0
   864   001E95  02                 	db	2
   865   001E96  04                 	db	4
   866   001E97  08                 	db	8
   867   001E98  10                 	db	16
   868   001E99  20                 	db	32
   869   001E9A  00                 	db	0
   870   001E9B  41                 	db	65
   871   001E9C  41                 	db	65
   872   001E9D  7F                 	db	127
   873   001E9E  00                 	db	0
   874   001E9F  04                 	db	4
   875   001EA0  02                 	db	2
   876   001EA1  01                 	db	1
   877   001EA2  02                 	db	2
   878   001EA3  04                 	db	4
   879   001EA4  40                 	db	64
   880   001EA5  40                 	db	64
   881   001EA6  40                 	db	64
   882   001EA7  40                 	db	64
   883   001EA8  40                 	db	64
   884   001EA9  00                 	db	0
   885   001EAA  01                 	db	1
   886   001EAB  02                 	db	2
   887   001EAC  04                 	db	4
   888   001EAD  00                 	db	0
   889   001EAE  20                 	db	32
   890   001EAF  54                 	db	84
   891   001EB0  54                 	db	84
   892   001EB1  54                 	db	84
   893   001EB2  78                 	db	120
   894   001EB3  7F                 	db	127
   895   001EB4  48                 	db	72
   896   001EB5  44                 	db	68
   897   001EB6  44                 	db	68
   898   001EB7  38                 	db	56
   899   001EB8  38                 	db	56
   900   001EB9  44                 	db	68
   901   001EBA  44                 	db	68
   902   001EBB  44                 	db	68
   903   001EBC  20                 	db	32
   904   001EBD  38                 	db	56
   905   001EBE  44                 	db	68
   906   001EBF  44                 	db	68
   907   001EC0  48                 	db	72
   908   001EC1  7F                 	db	127
   909   001EC2  38                 	db	56
   910   001EC3  54                 	db	84
   911   001EC4  54                 	db	84
   912   001EC5  54                 	db	84
   913   001EC6  18                 	db	24
   914   001EC7  08                 	db	8
   915   001EC8  7E                 	db	126
   916   001EC9  09                 	db	9
   917   001ECA  01                 	db	1
   918   001ECB  02                 	db	2
   919   001ECC  0C                 	db	12
   920   001ECD  52                 	db	82
   921   001ECE  52                 	db	82
   922   001ECF  52                 	db	82
   923   001ED0  3E                 	db	62
   924   001ED1  7F                 	db	127
   925   001ED2  08                 	db	8
   926   001ED3  04                 	db	4
   927   001ED4  04                 	db	4
   928   001ED5  78                 	db	120
   929   001ED6  00                 	db	0
   930   001ED7  44                 	db	68
   931   001ED8  7D                 	db	125
   932   001ED9  40                 	db	64
   933   001EDA  00                 	db	0
   934   001EDB  20                 	db	32
   935   001EDC  40                 	db	64
   936   001EDD  44                 	db	68
   937   001EDE  3D                 	db	61
   938   001EDF  00                 	db	0
   939   001EE0  7F                 	db	127
   940   001EE1  10                 	db	16
   941   001EE2  28                 	db	40
   942   001EE3  44                 	db	68
   943   001EE4  00                 	db	0
   944   001EE5  00                 	db	0
   945   001EE6  41                 	db	65
   946   001EE7  7F                 	db	127
   947   001EE8  40                 	db	64
   948   001EE9  00                 	db	0
   949   001EEA  7C                 	db	124
   950   001EEB  04                 	db	4
   951   001EEC  18                 	db	24
   952   001EED  04                 	db	4
   953   001EEE  78                 	db	120
   954   001EEF  7C                 	db	124
   955   001EF0  08                 	db	8
   956   001EF1  04                 	db	4
   957   001EF2  04                 	db	4
   958   001EF3  78                 	db	120
   959   001EF4  38                 	db	56
   960   001EF5  44                 	db	68
   961   001EF6  44                 	db	68
   962   001EF7  44                 	db	68
   963   001EF8  38                 	db	56
   964   001EF9  7C                 	db	124
   965   001EFA  14                 	db	20
   966   001EFB  14                 	db	20
   967   001EFC  14                 	db	20
   968   001EFD  08                 	db	8
   969   001EFE  08                 	db	8
   970   001EFF  14                 	db	20
   971   001F00  14                 	db	20
   972   001F01  18                 	db	24
   973   001F02  7C                 	db	124
   974   001F03  7C                 	db	124
   975   001F04  08                 	db	8
   976   001F05  04                 	db	4
   977   001F06  04                 	db	4
   978   001F07  08                 	db	8
   979   001F08  48                 	db	72
   980   001F09  54                 	db	84
   981   001F0A  54                 	db	84
   982   001F0B  54                 	db	84
   983   001F0C  20                 	db	32
   984   001F0D  04                 	db	4
   985   001F0E  3F                 	db	63
   986   001F0F  44                 	db	68
   987   001F10  40                 	db	64
   988   001F11  20                 	db	32
   989   001F12  3C                 	db	60
   990   001F13  40                 	db	64
   991   001F14  40                 	db	64
   992   001F15  20                 	db	32
   993   001F16  7C                 	db	124
   994   001F17  1C                 	db	28
   995   001F18  20                 	db	32
   996   001F19  40                 	db	64
   997   001F1A  20                 	db	32
   998   001F1B  1C                 	db	28
   999   001F1C  3C                 	db	60
  1000   001F1D  40                 	db	64
  1001   001F1E  30                 	db	48
  1002   001F1F  40                 	db	64
  1003   001F20  3C                 	db	60
  1004   001F21  44                 	db	68
  1005   001F22  28                 	db	40
  1006   001F23  10                 	db	16
  1007   001F24  28                 	db	40
  1008   001F25  44                 	db	68
  1009   001F26  0C                 	db	12
  1010   001F27  50                 	db	80
  1011   001F28  50                 	db	80
  1012   001F29  50                 	db	80
  1013   001F2A  3C                 	db	60
  1014   001F2B  44                 	db	68
  1015   001F2C  64                 	db	100
  1016   001F2D  54                 	db	84
  1017   001F2E  4C                 	db	76
  1018   001F2F  44                 	db	68
  1019   001F30  00                 	db	0
  1020   001F31  08                 	db	8
  1021   001F32  36                 	db	54
  1022   001F33  41                 	db	65
  1023   001F34  00                 	db	0
  1024   001F35  00                 	db	0
  1025   001F36  00                 	db	0
  1026   001F37  7F                 	db	127
  1027   001F38  00                 	db	0
  1028   001F39  00                 	db	0
  1029   001F3A  00                 	db	0
  1030   001F3B  41                 	db	65
  1031   001F3C  36                 	db	54
  1032   001F3D  08                 	db	8
  1033   001F3E  00                 	db	0
  1034   001F3F  10                 	db	16
  1035   001F40  08                 	db	8
  1036   001F41  08                 	db	8
  1037   001F42  10                 	db	16
  1038   001F43  08                 	db	8
  1039   001F44  78                 	db	120
  1040   001F45  46                 	db	70
  1041   001F46  41                 	db	65
  1042   001F47  46                 	db	70
  1043   001F48  78                 	db	120
  1044   001F49                     __end_of_Alpha2:
  1045                           	callstack 0
  1046   000FD3                     _OSCCON         set	4051
  1047   000FC1                     _ADCON1         set	4033
  1048   000F92                     _TRISA          set	3986
  1049   000F80                     _PORTAbits      set	3968
  1050   000F8A                     _LATBbits       set	3978
  1051   000F93                     _TRISB          set	3987
  1052   001F49                     STR_9:
  1053   001F49  20                 	db	32
  1054   001F4A  20                 	db	32
  1055   001F4B  20                 	db	32
  1056   001F4C  20                 	db	32
  1057   001F4D  20                 	db	32
  1058   001F4E  41                 	db	65	;'A'
  1059   001F4F  4E                 	db	78	;'N'
  1060   001F50  55                 	db	85	;'U'
  1061   001F51  20                 	db	32
  1062   001F52  20                 	db	32
  1063   001F53  20                 	db	32
  1064   001F54  20                 	db	32
  1065   001F55  20                 	db	32
  1066   001F56  20                 	db	32
  1067   001F57  20                 	db	32
  1068   001F58  20                 	db	32
  1069   001F59  00                 	db	0
  1070   001F5A                     STR_12:
  1071   001F5A  20                 	db	32
  1072   001F5B  20                 	db	32
  1073   001F5C  20                 	db	32
  1074   001F5D  20                 	db	32
  1075   001F5E  47                 	db	71	;'G'
  1076   001F5F  41                 	db	65	;'A'
  1077   001F60  4D                 	db	77	;'M'
  1078   001F61  45                 	db	69	;'E'
  1079   001F62  20                 	db	32
  1080   001F63  4F                 	db	79	;'O'
  1081   001F64  56                 	db	86	;'V'
  1082   001F65  45                 	db	69	;'E'
  1083   001F66  52                 	db	82	;'R'
  1084   001F67  20                 	db	32
  1085   001F68  20                 	db	32
  1086   001F69  20                 	db	32
  1087   001F6A  00                 	db	0
  1088   001F6B                     STR_8:
  1089   001F6B  42                 	db	66	;'B'
  1090   001F6C  59                 	db	89	;'Y'
  1091   001F6D  3A                 	db	58	;':'
  1092   001F6E  20                 	db	32
  1093   001F6F  20                 	db	32
  1094   001F70  53                 	db	83	;'S'
  1095   001F71  45                 	db	69	;'E'
  1096   001F72  42                 	db	66	;'B'
  1097   001F73  41                 	db	65	;'A'
  1098   001F74  53                 	db	83	;'S'
  1099   001F75  54                 	db	84	;'T'
  1100   001F76  49                 	db	73	;'I'
  1101   001F77  41                 	db	65	;'A'
  1102   001F78  4E                 	db	78	;'N'
  1103   001F79  20                 	db	32
  1104   001F7A  20                 	db	32
  1105   001F7B  00                 	db	0
  1106   001F7C                     STR_10:
  1107   001F7C  53                 	db	83	;'S'
  1108   001F7D  74                 	db	116	;'t'
  1109   001F7E  61                 	db	97	;'a'
  1110   001F7F  72                 	db	114	;'r'
  1111   001F80  74                 	db	116	;'t'
  1112   001F81  20                 	db	32
  1113   001F82  2D                 	db	45
  1114   001F83  20                 	db	32
  1115   001F84  53                 	db	83	;'S'
  1116   001F85  65                 	db	101	;'e'
  1117   001F86  6C                 	db	108	;'l'
  1118   001F87  65                 	db	101	;'e'
  1119   001F88  63                 	db	99	;'c'
  1120   001F89  74                 	db	116	;'t'
  1121   001F8A  20                 	db	32
  1122   001F8B  20                 	db	32
  1123   001F8C  00                 	db	0
  1124   001F8D                     STR_7:
  1125   001F8D  2A                 	db	42
  1126   001F8E  2A                 	db	42
  1127   001F8F  2A                 	db	42
  1128   001F90  2A                 	db	42
  1129   001F91  2A                 	db	42
  1130   001F92  53                 	db	83	;'S'
  1131   001F93  4E                 	db	78	;'N'
  1132   001F94  41                 	db	65	;'A'
  1133   001F95  4B                 	db	75	;'K'
  1134   001F96  45                 	db	69	;'E'
  1135   001F97  2A                 	db	42
  1136   001F98  2A                 	db	42
  1137   001F99  2A                 	db	42
  1138   001F9A  2A                 	db	42
  1139   001F9B  2A                 	db	42
  1140   001F9C  2A                 	db	42
  1141   001F9D  00                 	db	0
  1142   001F9E                     STR_11:
  1143   001F9E  2A                 	db	42
  1144   001F9F  2A                 	db	42
  1145   001FA0  2A                 	db	42
  1146   001FA1  2A                 	db	42
  1147   001FA2  2A                 	db	42
  1148   001FA3  2A                 	db	42
  1149   001FA4  2A                 	db	42
  1150   001FA5  2A                 	db	42
  1151   001FA6  2A                 	db	42
  1152   001FA7  2A                 	db	42
  1153   001FA8  2A                 	db	42
  1154   001FA9  2A                 	db	42
  1155   001FAA  2A                 	db	42
  1156   001FAB  2A                 	db	42
  1157   001FAC  2A                 	db	42
  1158   001FAD  00                 	db	0
  1159   001FAE                     STR_14:
  1160   001FAE  52                 	db	82	;'R'
  1161   001FAF  65                 	db	101	;'e'
  1162   001FB0  74                 	db	116	;'t'
  1163   001FB1  72                 	db	114	;'r'
  1164   001FB2  79                 	db	121	;'y'
  1165   001FB3  20                 	db	32
  1166   001FB4  2D                 	db	45
  1167   001FB5  20                 	db	32
  1168   001FB6  53                 	db	83	;'S'
  1169   001FB7  65                 	db	101	;'e'
  1170   001FB8  6C                 	db	108	;'l'
  1171   001FB9  65                 	db	101	;'e'
  1172   001FBA  63                 	db	99	;'c'
  1173   001FBB  74                 	db	116	;'t'
  1174   001FBC  00                 	db	0
  1175   001FBD                     STR_15:
  1176   001FBD  4D                 	db	77	;'M'
  1177   001FBE  65                 	db	101	;'e'
  1178   001FBF  6E                 	db	110	;'n'
  1179   001FC0  75                 	db	117	;'u'
  1180   001FC1  20                 	db	32
  1181   001FC2  2D                 	db	45
  1182   001FC3  20                 	db	32
  1183   001FC4  45                 	db	69	;'E'
  1184   001FC5  78                 	db	120	;'x'
  1185   001FC6  69                 	db	105	;'i'
  1186   001FC7  74                 	db	116	;'t'
  1187   001FC8  00                 	db	0
  1188   001FC9                     STR_1:
  1189   001FC9  53                 	db	83	;'S'
  1190   001FCA  70                 	db	112	;'p'
  1191   001FCB  65                 	db	101	;'e'
  1192   001FCC  65                 	db	101	;'e'
  1193   001FCD  64                 	db	100	;'d'
  1194   001FCE  3A                 	db	58	;':'
  1195   001FCF  20                 	db	32
  1196   001FD0  30                 	db	48	;'0'
  1197   001FD1  00                 	db	0
  1198   001FD2                     STR_2:
  1199   001FD2  53                 	db	83	;'S'
  1200   001FD3  70                 	db	112	;'p'
  1201   001FD4  65                 	db	101	;'e'
  1202   001FD5  65                 	db	101	;'e'
  1203   001FD6  64                 	db	100	;'d'
  1204   001FD7  3A                 	db	58	;':'
  1205   001FD8  20                 	db	32
  1206   001FD9  31                 	db	49	;'1'
  1207   001FDA  00                 	db	0
  1208   001FDB                     STR_3:
  1209   001FDB  53                 	db	83	;'S'
  1210   001FDC  70                 	db	112	;'p'
  1211   001FDD  65                 	db	101	;'e'
  1212   001FDE  65                 	db	101	;'e'
  1213   001FDF  64                 	db	100	;'d'
  1214   001FE0  3A                 	db	58	;':'
  1215   001FE1  20                 	db	32
  1216   001FE2  32                 	db	50	;'2'
  1217   001FE3  00                 	db	0
  1218   001FE4                     STR_4:
  1219   001FE4  53                 	db	83	;'S'
  1220   001FE5  70                 	db	112	;'p'
  1221   001FE6  65                 	db	101	;'e'
  1222   001FE7  65                 	db	101	;'e'
  1223   001FE8  64                 	db	100	;'d'
  1224   001FE9  3A                 	db	58	;':'
  1225   001FEA  20                 	db	32
  1226   001FEB  33                 	db	51	;'3'
  1227   001FEC  00                 	db	0
  1228   001FED                     STR_5:
  1229   001FED  53                 	db	83	;'S'
  1230   001FEE  70                 	db	112	;'p'
  1231   001FEF  65                 	db	101	;'e'
  1232   001FF0  65                 	db	101	;'e'
  1233   001FF1  64                 	db	100	;'d'
  1234   001FF2  3A                 	db	58	;':'
  1235   001FF3  20                 	db	32
  1236   001FF4  34                 	db	52	;'4'
  1237   001FF5  00                 	db	0
  1238   001FF6                     STR_6:
  1239   001FF6  53                 	db	83	;'S'
  1240   001FF7  70                 	db	112	;'p'
  1241   001FF8  65                 	db	101	;'e'
  1242   001FF9  65                 	db	101	;'e'
  1243   001FFA  64                 	db	100	;'d'
  1244   001FFB  3A                 	db	58	;':'
  1245   001FFC  20                 	db	32
  1246   001FFD  35                 	db	53	;'5'
  1247   001FFE  00                 	db	0
  1248   001F9E                     STR_13          equ	STR_11
  1249   001FFF  00                 	db	0	; dummy byte at the end
  1250   000002                     __activetblptr  equ	2
  1251                           
  1252                           ; #config settings
  1253                           
  1254                           	psect	cinit
  1255   000F5E                     __pcinit:
  1256                           	callstack 0
  1257   000F5E                     start_initialization:
  1258                           	callstack 0
  1259   000F5E                     __initialization:
  1260                           	callstack 0
  1261                           
  1262                           ; Initialize objects allocated to BANK0 (68 bytes)
  1263                           ; load TBLPTR registers with __pidataBANK0
  1264   000F5E  0EC7               	movlw	low __pidataBANK0
  1265   000F60  6EF6               	movwf	tblptrl,c
  1266   000F62  0E0C               	movlw	high __pidataBANK0
  1267   000F64  6EF7               	movwf	tblptrh,c
  1268   000F66  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1269   000F68  6EF8               	movwf	tblptru,c
  1270   000F6A  EE00  F080         	lfsr	0,__pdataBANK0
  1271   000F6E  EE10 F044          	lfsr	1,68
  1272   000F72                     copy_data0:
  1273   000F72  0009               	tblrd		*+
  1274   000F74  CFF5 FFEE          	movff	tablat,postinc0
  1275   000F78  50E5               	movf	postdec1,w,c
  1276   000F7A  50E1               	movf	fsr1l,w,c
  1277   000F7C  E1FA               	bnz	copy_data0
  1278                           
  1279                           ; Initialize objects allocated to COMRAM (69 bytes)
  1280                           ; load TBLPTR registers with __pidataCOMRAM
  1281   000F7E  0E0B               	movlw	low __pidataCOMRAM
  1282   000F80  6EF6               	movwf	tblptrl,c
  1283   000F82  0E0D               	movlw	high __pidataCOMRAM
  1284   000F84  6EF7               	movwf	tblptrh,c
  1285   000F86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1286   000F88  6EF8               	movwf	tblptru,c
  1287   000F8A  EE00  F001         	lfsr	0,__pdataCOMRAM
  1288   000F8E  EE10 F045          	lfsr	1,69
  1289   000F92                     copy_data1:
  1290   000F92  0009               	tblrd		*+
  1291   000F94  CFF5 FFEE          	movff	tablat,postinc0
  1292   000F98  50E5               	movf	postdec1,w,c
  1293   000F9A  50E1               	movf	fsr1l,w,c
  1294   000F9C  E1FA               	bnz	copy_data1
  1295                           
  1296                           ; Clear objects allocated to BANK1 (32 bytes)
  1297   000F9E  EE01  F000         	lfsr	0,__pbssBANK1
  1298   000FA2  0E20               	movlw	32
  1299   000FA4                     clear_0:
  1300   000FA4  6AEE               	clrf	postinc0,c
  1301   000FA6  06E8               	decf	wreg,f,c
  1302   000FA8  E1FD               	bnz	clear_0
  1303                           
  1304                           ; Clear objects allocated to BANK0 (32 bytes)
  1305   000FAA  EE00  F0C4         	lfsr	0,__pbssBANK0
  1306   000FAE  0E20               	movlw	32
  1307   000FB0                     clear_1:
  1308   000FB0  6AEE               	clrf	postinc0,c
  1309   000FB2  06E8               	decf	wreg,f,c
  1310   000FB4  E1FD               	bnz	clear_1
  1311                           
  1312                           ; Clear objects allocated to COMRAM (15 bytes)
  1313   000FB6  EE00  F06E         	lfsr	0,__pbssCOMRAM
  1314   000FBA  0E0F               	movlw	15
  1315   000FBC                     clear_2:
  1316   000FBC  6AEE               	clrf	postinc0,c
  1317   000FBE  06E8               	decf	wreg,f,c
  1318   000FC0  E1FD               	bnz	clear_2
  1319   000FC2                     end_of_initialization:
  1320                           	callstack 0
  1321   000FC2                     __end_of__initialization:
  1322                           	callstack 0
  1323   000FC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1324   000FC4  6EF8               	movwf	tblptru,c
  1325   000FC6  0100               	movlb	0
  1326   000FC8  EF3E  F00B         	goto	_main	;jump to C main() function
  1327                           
  1328                           	psect	bssCOMRAM
  1329   00006E                     __pbssCOMRAM:
  1330                           	callstack 0
  1331   00006E                     _gameover:
  1332                           	callstack 0
  1333   00006E                     	ds	1
  1334   00006F                     _game:
  1335                           	callstack 0
  1336   00006F                     	ds	1
  1337   000070                     _looseScreen:
  1338                           	callstack 0
  1339   000070                     	ds	1
  1340   000071                     _speed:
  1341                           	callstack 0
  1342   000071                     	ds	1
  1343   000072                     _key:
  1344                           	callstack 0
  1345   000072                     	ds	1
  1346   000073                     _score:
  1347                           	callstack 0
  1348   000073                     	ds	1
  1349   000074                     _fruitY:
  1350                           	callstack 0
  1351   000074                     	ds	1
  1352   000075                     _fruitX:
  1353                           	callstack 0
  1354   000075                     	ds	1
  1355   000076                     _snakeTailLen:
  1356                           	callstack 0
  1357   000076                     	ds	1
  1358   000077                     _snakeHeadYPos:
  1359                           	callstack 0
  1360   000077                     	ds	1
  1361   000078                     _snakeHeadXPos:
  1362                           	callstack 0
  1363   000078                     	ds	1
  1364   000079                     _seed:
  1365                           	callstack 0
  1366   000079                     	ds	4
  1367                           
  1368                           	psect	dataCOMRAM
  1369   000001                     __pdataCOMRAM:
  1370                           	callstack 0
  1371   000001                     _mainMenu:
  1372                           	callstack 0
  1373   000001                     	ds	1
  1374   000002                     _LCDStore3:
  1375                           	callstack 0
  1376   000002                     	ds	17
  1377   000013                     _LCDStore2:
  1378                           	callstack 0
  1379   000013                     	ds	17
  1380   000024                     _LCDStore1:
  1381                           	callstack 0
  1382   000024                     	ds	17
  1383   000035                     _LCDStore0:
  1384                           	callstack 0
  1385   000035                     	ds	17
  1386                           
  1387                           	psect	bssBANK0
  1388   0000C4                     __pbssBANK0:
  1389                           	callstack 0
  1390   0000C4                     _snakeTailX:
  1391                           	callstack 0
  1392   0000C4                     	ds	32
  1393                           
  1394                           	psect	dataBANK0
  1395   000080                     __pdataBANK0:
  1396                           	callstack 0
  1397   000080                     _LCDStore7:
  1398                           	callstack 0
  1399   000080                     	ds	17
  1400   000091                     _LCDStore6:
  1401                           	callstack 0
  1402   000091                     	ds	17
  1403   0000A2                     _LCDStore5:
  1404                           	callstack 0
  1405   0000A2                     	ds	17
  1406   0000B3                     _LCDStore4:
  1407                           	callstack 0
  1408   0000B3                     	ds	17
  1409                           
  1410                           	psect	bssBANK1
  1411   000100                     __pbssBANK1:
  1412                           	callstack 0
  1413   000100                     _snakeTailY:
  1414                           	callstack 0
  1415   000100                     	ds	32
  1416                           
  1417                           	psect	cstackCOMRAM
  1418   000046                     __pcstackCOMRAM:
  1419                           	callstack 0
  1420   000046                     ?___lmul:
  1421                           	callstack 0
  1422   000046                     placeChar@y:
  1423                           	callstack 0
  1424   000046                     ___lmul@multiplier:
  1425                           	callstack 0
  1426   000046                     ??_LCD_WriteByte:
  1427   000046                     
  1428                           ; 1 bytes @ 0x0
  1429   000046                     	ds	1
  1430   000047                     placeChar@c:
  1431                           	callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x1
  1434   000047                     	ds	1
  1435   000048                     LCD_WriteByte@command:
  1436                           	callstack 0
  1437   000048                     placeChar@x:
  1438                           	callstack 0
  1439   000048                     
  1440                           ; 1 bytes @ 0x2
  1441   000048                     	ds	1
  1442   000049                     LCD_WriteData@data:
  1443                           	callstack 0
  1444   000049                     LCD_WriteCommand@command:
  1445                           	callstack 0
  1446   000049                     clearAllChar@i:
  1447                           	callstack 0
  1448   000049                     
  1449                           ; 1 bytes @ 0x3
  1450   000049                     	ds	1
  1451   00004A                     LCD_ClearGraphics@x:
  1452                           	callstack 0
  1453   00004A                     clearAllChar@j:
  1454                           	callstack 0
  1455   00004A                     LCD_GraphicsDisplayString@str:
  1456                           	callstack 0
  1457   00004A                     ___lmul@multiplicand:
  1458                           	callstack 0
  1459   00004A                     ??_LCD_Init:
  1460   00004A                     ??_LCD_EnableGraphics:
  1461   00004A                     
  1462                           ; 1 bytes @ 0x4
  1463   00004A                     	ds	1
  1464   00004B                     LCD_ClearGraphics@y:
  1465                           	callstack 0
  1466                           
  1467                           ; 1 bytes @ 0x5
  1468   00004B                     	ds	1
  1469   00004C                     ??_LCD_GraphicsDisplayString:
  1470                           
  1471                           ; 1 bytes @ 0x6
  1472   00004C                     	ds	2
  1473   00004E                     ___lmul@product:
  1474                           	callstack 0
  1475   00004E                     
  1476                           ; 1 bytes @ 0x8
  1477   00004E                     	ds	1
  1478   00004F                     _LCD_GraphicsDisplayString$113:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x9
  1482   00004F                     	ds	2
  1483   000051                     _LCD_GraphicsDisplayString$115:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0xB
  1487   000051                     	ds	1
  1488   000052                     ?_rand:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0xC
  1492   000052                     	ds	1
  1493   000053                     LCD_GraphicsDisplayString@shouldContinue:
  1494                           	callstack 0
  1495                           
  1496                           ; 1 bytes @ 0xD
  1497   000053                     	ds	1
  1498   000054                     LCD_GraphicsDisplayString@colListA:
  1499                           	callstack 0
  1500   000054                     ??_rand:
  1501                           
  1502                           ; 1 bytes @ 0xE
  1503   000054                     	ds	4
  1504   000058                     ?___awmod:
  1505                           	callstack 0
  1506   000058                     ___awmod@dividend:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x12
  1510   000058                     	ds	1
  1511   000059                     LCD_GraphicsDisplayString@colListB:
  1512                           	callstack 0
  1513                           
  1514                           ; 5 bytes @ 0x13
  1515   000059                     	ds	1
  1516   00005A                     ___awmod@divisor:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x14
  1520   00005A                     	ds	2
  1521   00005C                     ___awmod@counter:
  1522                           	callstack 0
  1523   00005C                     
  1524                           ; 1 bytes @ 0x16
  1525   00005C                     	ds	1
  1526   00005D                     ___awmod@sign:
  1527                           	callstack 0
  1528                           
  1529                           ; 1 bytes @ 0x17
  1530   00005D                     	ds	1
  1531   00005E                     LCD_GraphicsDisplayString@count:
  1532                           	callstack 0
  1533   00005E                     random@upper_bound:
  1534                           	callstack 0
  1535                           
  1536                           ; 1 bytes @ 0x18
  1537   00005E                     	ds	1
  1538   00005F                     LCD_GraphicsDisplayString@dataA:
  1539                           	callstack 0
  1540   00005F                     ??_random:
  1541                           
  1542                           ; 1 bytes @ 0x19
  1543   00005F                     	ds	1
  1544   000060                     LCD_GraphicsDisplayString@dataB:
  1545                           	callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x1A
  1548   000060                     	ds	1
  1549   000061                     LCD_GraphicsDisplayString@line:
  1550                           	callstack 0
  1551   000061                     random@lower_bound:
  1552                           	callstack 0
  1553                           
  1554                           ; 1 bytes @ 0x1B
  1555   000061                     	ds	1
  1556   000062                     LCD_GraphicsDisplayString@letterA:
  1557                           	callstack 0
  1558   000062                     
  1559                           ; 1 bytes @ 0x1C
  1560   000062                     	ds	1
  1561   000063                     LCD_GraphicsDisplayString@letterB:
  1562                           	callstack 0
  1563   000063                     logic@prev2X:
  1564                           	callstack 0
  1565                           
  1566                           ; 1 bytes @ 0x1D
  1567   000063                     	ds	1
  1568   000064                     LCD_GraphicsDisplayString@row:
  1569                           	callstack 0
  1570   000064                     logic@prev2Y:
  1571                           	callstack 0
  1572                           
  1573                           ; 1 bytes @ 0x1E
  1574   000064                     	ds	1
  1575   000065                     LCD_GraphicsDisplayString@colInd:
  1576                           	callstack 0
  1577   000065                     logic@prevX:
  1578                           	callstack 0
  1579                           
  1580                           ; 1 bytes @ 0x1F
  1581   000065                     	ds	1
  1582   000066                     LCD_GraphicsDisplayString@indA:
  1583                           	callstack 0
  1584   000066                     logic@prevY:
  1585                           	callstack 0
  1586                           
  1587                           ; 1 bytes @ 0x20
  1588   000066                     	ds	1
  1589   000067                     LCD_GraphicsDisplayString@indB:
  1590                           	callstack 0
  1591   000067                     logic@i_307:
  1592                           	callstack 0
  1593                           
  1594                           ; 1 bytes @ 0x21
  1595   000067                     	ds	1
  1596   000068                     logic@i:
  1597                           	callstack 0
  1598   000068                     
  1599                           ; 1 bytes @ 0x22
  1600   000068                     	ds	1
  1601   000069                     draw@k:
  1602                           	callstack 0
  1603                           
  1604                           ; 1 bytes @ 0x23
  1605   000069                     	ds	1
  1606   00006A                     draw@i:
  1607                           	callstack 0
  1608                           
  1609                           ; 1 bytes @ 0x24
  1610   00006A                     	ds	1
  1611   00006B                     draw@j:
  1612                           	callstack 0
  1613                           
  1614                           ; 1 bytes @ 0x25
  1615   00006B                     	ds	1
  1616   00006C                     ??_main:
  1617                           
  1618                           ; 1 bytes @ 0x26
  1619   00006C                     	ds	2
  1620                           
  1621 ;;
  1622 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1623 ;;
  1624 ;; *************** function _main *****************
  1625 ;; Defined at:
  1626 ;;		line 234 in file "Pls.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1
  1640 ;;      Params:         0       0       0
  1641 ;;      Locals:         0       0       0
  1642 ;;      Temps:          2       0       0
  1643 ;;      Totals:         2       0       0
  1644 ;;Total ram usage:        2 bytes
  1645 ;; Hardware stack levels required when called: 5
  1646 ;; This function calls:
  1647 ;;		_LCD_ClearGraphics
  1648 ;;		_LCD_EnableGraphics
  1649 ;;		_LCD_GraphicsDisplayString
  1650 ;;		_LCD_Init
  1651 ;;		_displaySpeed
  1652 ;;		_draw
  1653 ;;		_input
  1654 ;;		_logic
  1655 ;;		_setup
  1656 ;; This function is called by:
  1657 ;;		Startup code after reset
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text0
  1662   00167C                     __ptext0:
  1663                           	callstack 0
  1664   00167C                     _main:
  1665                           	callstack 26
  1666   00167C                     
  1667                           ;Pls.c: 235:     ADCON1 = 0x0F;
  1668   00167C  0E0F               	movlw	15
  1669   00167E  6EC1               	movwf	193,c	;volatile
  1670                           
  1671                           ;Pls.c: 236:     OSCCON = 0x70;
  1672   001680  0E70               	movlw	112
  1673   001682  6ED3               	movwf	211,c	;volatile
  1674   001684                     
  1675                           ;Pls.c: 238:     LCD_Init();
  1676   001684  EC1E  F008         	call	_LCD_Init	;wreg free
  1677   001688                     
  1678                           ;Pls.c: 239:     LCD_EnableGraphics();
  1679   001688  EC44  F006         	call	_LCD_EnableGraphics	;wreg free
  1680   00168C                     
  1681                           ;Pls.c: 240:     LCD_ClearGraphics();
  1682   00168C  ECD9  F006         	call	_LCD_ClearGraphics	;wreg free
  1683   001690                     
  1684                           ;Pls.c: 242:     LCD_GraphicsDisplayString(0,"*****SNAKE******");
  1685   001690  0E8D               	movlw	low STR_7
  1686   001692  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1687   001694  0E1F               	movlw	high STR_7
  1688   001696  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1689   001698  0E00               	movlw	0
  1690   00169A  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1691   00169E                     
  1692                           ;Pls.c: 244:     LCD_GraphicsDisplayString(2,"BY:  SEBASTIAN  ");
  1693   00169E  0E6B               	movlw	low STR_8
  1694   0016A0  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1695   0016A2  0E1F               	movlw	high STR_8
  1696   0016A4  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1697   0016A6  0E02               	movlw	2
  1698   0016A8  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1699   0016AC                     
  1700                           ;Pls.c: 245:     LCD_GraphicsDisplayString(3,"     ANU        ");
  1701   0016AC  0E49               	movlw	low STR_9
  1702   0016AE  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1703   0016B0  0E1F               	movlw	high STR_9
  1704   0016B2  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1705   0016B4  0E03               	movlw	3
  1706   0016B6  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1707   0016BA                     
  1708                           ;Pls.c: 246:     LCD_GraphicsDisplayString(5,"Start - Select  ");
  1709   0016BA  0E7C               	movlw	low STR_10
  1710   0016BC  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1711   0016BE  0E1F               	movlw	high STR_10
  1712   0016C0  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1713   0016C2  0E05               	movlw	5
  1714   0016C4  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1715   0016C8                     l2092:
  1716                           
  1717                           ;Pls.c: 249:     displaySpeed();
  1718   0016C8  EC6D  F008         	call	_displaySpeed	;wreg free
  1719                           
  1720                           ;Pls.c: 251:     while(!PORTAbits.RA5){
  1721   0016CC  EF9A  F00B         	goto	l262
  1722   0016D0                     l263:
  1723                           
  1724                           ;Pls.c: 252:         if(PORTAbits.RA0 && speed < 5){
  1725   0016D0  A080               	btfss	128,0,c	;volatile
  1726   0016D2  EF6D  F00B         	goto	u1441
  1727   0016D6  EF6F  F00B         	goto	u1440
  1728   0016DA                     u1441:
  1729   0016DA  EF81  F00B         	goto	l264
  1730   0016DE                     u1440:
  1731   0016DE  0E05               	movlw	5
  1732   0016E0  6071               	cpfslt	_speed^0,c
  1733   0016E2  EF75  F00B         	goto	u1451
  1734   0016E6  EF77  F00B         	goto	u1450
  1735   0016EA                     u1451:
  1736   0016EA  EF81  F00B         	goto	l264
  1737   0016EE                     u1450:
  1738   0016EE                     
  1739                           ;Pls.c: 253:             speed++;
  1740   0016EE  2A71               	incf	_speed^0,f,c
  1741   0016F0                     l265:
  1742   0016F0  B080               	btfsc	128,0,c	;volatile
  1743   0016F2  EF7D  F00B         	goto	u1461
  1744   0016F6  EF7F  F00B         	goto	u1460
  1745   0016FA                     u1461:
  1746   0016FA  EF78  F00B         	goto	l265
  1747   0016FE                     u1460:
  1748   0016FE  EF64  F00B         	goto	l2092
  1749   001702                     l264:
  1750   001702  A280               	btfss	128,1,c	;volatile
  1751   001704  EF86  F00B         	goto	u1471
  1752   001708  EF88  F00B         	goto	u1470
  1753   00170C                     u1471:
  1754   00170C  EF9A  F00B         	goto	l262
  1755   001710                     u1470:
  1756   001710  5071               	movf	_speed^0,w,c
  1757   001712  B4D8               	btfsc	status,2,c
  1758   001714  EF8E  F00B         	goto	u1481
  1759   001718  EF90  F00B         	goto	u1480
  1760   00171C                     u1481:
  1761   00171C  EF9A  F00B         	goto	l262
  1762   001720                     u1480:
  1763   001720                     
  1764                           ;Pls.c: 257:             speed--;
  1765   001720  0671               	decf	_speed^0,f,c
  1766   001722                     l270:
  1767   001722  B280               	btfsc	128,1,c	;volatile
  1768   001724  EF96  F00B         	goto	u1491
  1769   001728  EF98  F00B         	goto	u1490
  1770   00172C                     u1491:
  1771   00172C  EF91  F00B         	goto	l270
  1772   001730                     u1490:
  1773   001730  EF64  F00B         	goto	l2092
  1774   001734                     l262:
  1775                           
  1776                           ;Pls.c: 251:     while(!PORTAbits.RA5){
  1777   001734  AA80               	btfss	128,5,c	;volatile
  1778   001736  EF9F  F00B         	goto	u1501
  1779   00173A  EFA1  F00B         	goto	u1500
  1780   00173E                     u1501:
  1781   00173E  EF68  F00B         	goto	l263
  1782   001742                     u1500:
  1783   001742                     l2104:
  1784                           
  1785                           ;Pls.c: 267:     setup();
  1786   001742  EC78  F007         	call	_setup	;wreg free
  1787                           
  1788                           ;Pls.c: 269:     while(!gameover){
  1789   001746  EF0E  F00C         	goto	l2126
  1790   00174A                     l2106:
  1791                           
  1792                           ;Pls.c: 270:            draw();
  1793   00174A  ECC1  F008         	call	_draw	;wreg free
  1794   00174E                     
  1795                           ;Pls.c: 271:            input();
  1796   00174E  ECE6  F007         	call	_input	;wreg free
  1797   001752                     
  1798                           ;Pls.c: 272:            logic();
  1799   001752  EC69  F00A         	call	_logic	;wreg free
  1800                           
  1801                           ;Pls.c: 274:            switch (speed){
  1802   001756  EFF3  F00B         	goto	l2124
  1803   00175A                     l278:
  1804                           
  1805                           ;Pls.c: 276:                 _delay((unsigned long)((0)*(8000000/4000.0)));
  1806                           ;Pls.c: 277:                 break;
  1807   00175A  EF0E  F00C         	goto	l2126
  1808   00175E                     l2112:
  1809                           
  1810                           ;Pls.c: 279:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1811   00175E  0E02               	movlw	2
  1812   001760  6E6D               	movwf	(??_main+1)^0,c
  1813   001762  0E04               	movlw	4
  1814   001764  6E6C               	movwf	??_main^0,c
  1815   001766  0EBA               	movlw	186
  1816   001768                     u1547:
  1817   001768  2EE8               	decfsz	wreg,f,c
  1818   00176A  D7FE               	bra	u1547
  1819   00176C  2E6C               	decfsz	??_main^0,f,c
  1820   00176E  D7FC               	bra	u1547
  1821   001770  2E6D               	decfsz	(??_main+1)^0,f,c
  1822   001772  D7FA               	bra	u1547
  1823   001774  D000               	nop2	
  1824                           
  1825                           ;Pls.c: 280:                 break;
  1826   001776  EF0E  F00C         	goto	l2126
  1827   00177A                     l2114:
  1828                           
  1829                           ;Pls.c: 282:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  1830   00177A  0E03               	movlw	3
  1831   00177C  6E6D               	movwf	(??_main+1)^0,c
  1832   00177E  0E08               	movlw	8
  1833   001780  6E6C               	movwf	??_main^0,c
  1834   001782  0E77               	movlw	119
  1835   001784                     u1557:
  1836   001784  2EE8               	decfsz	wreg,f,c
  1837   001786  D7FE               	bra	u1557
  1838   001788  2E6C               	decfsz	??_main^0,f,c
  1839   00178A  D7FC               	bra	u1557
  1840   00178C  2E6D               	decfsz	(??_main+1)^0,f,c
  1841   00178E  D7FA               	bra	u1557
  1842   001790  0000               	nop	
  1843                           
  1844                           ;Pls.c: 283:                 break;
  1845   001792  EF0E  F00C         	goto	l2126
  1846   001796                     l2116:
  1847                           
  1848                           ;Pls.c: 285:                 _delay((unsigned long)((300)*(8000000/4000.0)));
  1849   001796  0E04               	movlw	4
  1850   001798  6E6D               	movwf	(??_main+1)^0,c
  1851   00179A  0E0C               	movlw	12
  1852   00179C  6E6C               	movwf	??_main^0,c
  1853   00179E  0E34               	movlw	52
  1854   0017A0                     u1567:
  1855   0017A0  2EE8               	decfsz	wreg,f,c
  1856   0017A2  D7FE               	bra	u1567
  1857   0017A4  2E6C               	decfsz	??_main^0,f,c
  1858   0017A6  D7FC               	bra	u1567
  1859   0017A8  2E6D               	decfsz	(??_main+1)^0,f,c
  1860   0017AA  D7FA               	bra	u1567
  1861                           
  1862                           ;Pls.c: 286:                 break;
  1863   0017AC  EF0E  F00C         	goto	l2126
  1864   0017B0                     l2118:
  1865                           
  1866                           ;Pls.c: 288:                 _delay((unsigned long)((400)*(8000000/4000.0)));
  1867   0017B0  0E05               	movlw	5
  1868   0017B2  6E6D               	movwf	(??_main+1)^0,c
  1869   0017B4  0E0F               	movlw	15
  1870   0017B6  6E6C               	movwf	??_main^0,c
  1871   0017B8  0EF1               	movlw	241
  1872   0017BA                     u1577:
  1873   0017BA  2EE8               	decfsz	wreg,f,c
  1874   0017BC  D7FE               	bra	u1577
  1875   0017BE  2E6C               	decfsz	??_main^0,f,c
  1876   0017C0  D7FC               	bra	u1577
  1877   0017C2  2E6D               	decfsz	(??_main+1)^0,f,c
  1878   0017C4  D7FA               	bra	u1577
  1879   0017C6  0000               	nop	
  1880                           
  1881                           ;Pls.c: 289:                 break;
  1882   0017C8  EF0E  F00C         	goto	l2126
  1883   0017CC                     l2120:
  1884                           
  1885                           ;Pls.c: 291:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  1886   0017CC  0E06               	movlw	6
  1887   0017CE  6E6D               	movwf	(??_main+1)^0,c
  1888   0017D0  0E13               	movlw	19
  1889   0017D2  6E6C               	movwf	??_main^0,c
  1890   0017D4  0EAE               	movlw	174
  1891   0017D6                     u1587:
  1892   0017D6  2EE8               	decfsz	wreg,f,c
  1893   0017D8  D7FE               	bra	u1587
  1894   0017DA  2E6C               	decfsz	??_main^0,f,c
  1895   0017DC  D7FC               	bra	u1587
  1896   0017DE  2E6D               	decfsz	(??_main+1)^0,f,c
  1897   0017E0  D7FA               	bra	u1587
  1898                           
  1899                           ;Pls.c: 292:                 break;
  1900   0017E2  EF0E  F00C         	goto	l2126
  1901   0017E6                     l2124:
  1902   0017E6  5071               	movf	_speed^0,w,c
  1903                           
  1904                           ; Switch size 1, requested type "simple"
  1905                           ; Number of cases is 6, Range of values is 0 to 5
  1906                           ; switch strategies available:
  1907                           ; Name         Instructions Cycles
  1908                           ; simple_byte           19    10 (average)
  1909                           ;	Chosen strategy is simple_byte
  1910   0017E8  0A00               	xorlw	0	; case 0
  1911   0017EA  B4D8               	btfsc	status,2,c
  1912   0017EC  EFAD  F00B         	goto	l278
  1913   0017F0  0A01               	xorlw	1	; case 1
  1914   0017F2  B4D8               	btfsc	status,2,c
  1915   0017F4  EFAF  F00B         	goto	l2112
  1916   0017F8  0A03               	xorlw	3	; case 2
  1917   0017FA  B4D8               	btfsc	status,2,c
  1918   0017FC  EFBD  F00B         	goto	l2114
  1919   001800  0A01               	xorlw	1	; case 3
  1920   001802  B4D8               	btfsc	status,2,c
  1921   001804  EFCB  F00B         	goto	l2116
  1922   001808  0A07               	xorlw	7	; case 4
  1923   00180A  B4D8               	btfsc	status,2,c
  1924   00180C  EFD8  F00B         	goto	l2118
  1925   001810  0A01               	xorlw	1	; case 5
  1926   001812  B4D8               	btfsc	status,2,c
  1927   001814  EFE6  F00B         	goto	l2120
  1928   001818  EF0E  F00C         	goto	l2126
  1929   00181C                     l2126:
  1930                           
  1931                           ;Pls.c: 269:     while(!gameover){
  1932   00181C  506E               	movf	_gameover^0,w,c
  1933   00181E  B4D8               	btfsc	status,2,c
  1934   001820  EF14  F00C         	goto	u1511
  1935   001824  EF16  F00C         	goto	u1510
  1936   001828                     u1511:
  1937   001828  EFA5  F00B         	goto	l2106
  1938   00182C                     u1510:
  1939   00182C                     
  1940                           ;Pls.c: 295:     LCD_ClearGraphics();
  1941   00182C  ECD9  F006         	call	_LCD_ClearGraphics	;wreg free
  1942   001830                     
  1943                           ;Pls.c: 296:     LCD_GraphicsDisplayString(1,"***************");
  1944   001830  0E9E               	movlw	low STR_11
  1945   001832  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1946   001834  0E1F               	movlw	high STR_11
  1947   001836  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1948   001838  0E01               	movlw	1
  1949   00183A  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1950   00183E                     
  1951                           ;Pls.c: 297:     LCD_GraphicsDisplayString(2,"    GAME OVER   ");
  1952   00183E  0E5A               	movlw	low STR_12
  1953   001840  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1954   001842  0E1F               	movlw	high STR_12
  1955   001844  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1956   001846  0E02               	movlw	2
  1957   001848  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1958   00184C                     
  1959                           ;Pls.c: 298:     LCD_GraphicsDisplayString(3,"***************");
  1960   00184C  0E9E               	movlw	low STR_11
  1961   00184E  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1962   001850  0E1F               	movlw	high STR_11
  1963   001852  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1964   001854  0E03               	movlw	3
  1965   001856  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1966   00185A                     
  1967                           ;Pls.c: 299:     LCD_GraphicsDisplayString(5,"Retry - Select");
  1968   00185A  0EAE               	movlw	low STR_14
  1969   00185C  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1970   00185E  0E1F               	movlw	high STR_14
  1971   001860  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1972   001862  0E05               	movlw	5
  1973   001864  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1974   001868                     
  1975                           ;Pls.c: 300:     LCD_GraphicsDisplayString(6,"Menu - Exit");
  1976   001868  0EBD               	movlw	low STR_15
  1977   00186A  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  1978   00186C  0E1F               	movlw	high STR_15
  1979   00186E  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1980   001870  0E06               	movlw	6
  1981   001872  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  1982                           
  1983                           ;Pls.c: 302:     while(!PORTAbits.RA4){
  1984   001876  EF46  F00C         	goto	l286
  1985   00187A                     l287:
  1986                           
  1987                           ;Pls.c: 303:        if(PORTAbits.RA5){
  1988   00187A  AA80               	btfss	128,5,c	;volatile
  1989   00187C  EF42  F00C         	goto	u1521
  1990   001880  EF44  F00C         	goto	u1520
  1991   001884                     u1521:
  1992   001884  EF46  F00C         	goto	l286
  1993   001888                     u1520:
  1994   001888  EFA1  F00B         	goto	l2104
  1995   00188C                     l286:
  1996                           
  1997                           ;Pls.c: 302:     while(!PORTAbits.RA4){
  1998   00188C  A880               	btfss	128,4,c	;volatile
  1999   00188E  EF4B  F00C         	goto	u1531
  2000   001892  EF4D  F00C         	goto	u1530
  2001   001896                     u1531:
  2002   001896  EF3D  F00C         	goto	l287
  2003   00189A                     u1530:
  2004   00189A  EF00  F000         	goto	start
  2005   00189E                     __end_of_main:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _setup *****************
  2009 ;; Defined at:
  2010 ;;		line 117 in file "Pls.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1
  2024 ;;      Params:         0       0       0
  2025 ;;      Locals:         0       0       0
  2026 ;;      Temps:          0       0       0
  2027 ;;      Totals:         0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 3
  2031 ;; This function calls:
  2032 ;;		_random
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text1
  2039   000EF0                     __ptext1:
  2040                           	callstack 0
  2041   000EF0                     _setup:
  2042                           	callstack 27
  2043   000EF0                     
  2044                           ;Pls.c: 119:     TRISA = 0x0F;
  2045   000EF0  0E0F               	movlw	15
  2046   000EF2  6E92               	movwf	146,c	;volatile
  2047   000EF4                     
  2048                           ;Pls.c: 122:     gameover = 0;
  2049   000EF4  6A6E               	clrf	_gameover^0,c
  2050                           
  2051                           ;Pls.c: 125:     snakeHeadXPos = 7;
  2052   000EF6  0E07               	movlw	7
  2053   000EF8  6E78               	movwf	_snakeHeadXPos^0,c
  2054                           
  2055                           ;Pls.c: 126:     snakeHeadYPos = 4;
  2056   000EFA  0E04               	movlw	4
  2057   000EFC  6E77               	movwf	_snakeHeadYPos^0,c
  2058   000EFE                     
  2059                           ;Pls.c: 129:     fruitX = random(0,15);
  2060   000EFE  0E0F               	movlw	15
  2061   000F00  6E5E               	movwf	random@upper_bound^0,c
  2062   000F02  0E00               	movlw	0
  2063   000F04  EC0F  F006         	call	_random
  2064   000F08  6E75               	movwf	_fruitX^0,c
  2065   000F0A                     
  2066                           ;Pls.c: 130:     fruitY = random(0,7);
  2067   000F0A  0E07               	movlw	7
  2068   000F0C  6E5E               	movwf	random@upper_bound^0,c
  2069   000F0E  0E00               	movlw	0
  2070   000F10  EC0F  F006         	call	_random
  2071   000F14  6E74               	movwf	_fruitY^0,c
  2072                           
  2073                           ;Pls.c: 132:     while (fruitX == 0)
  2074   000F16  EF93  F007         	goto	l1898
  2075   000F1A                     l1896:
  2076                           
  2077                           ;Pls.c: 133:         fruitX = random(0,15);
  2078   000F1A  0E0F               	movlw	15
  2079   000F1C  6E5E               	movwf	random@upper_bound^0,c
  2080   000F1E  0E00               	movlw	0
  2081   000F20  EC0F  F006         	call	_random
  2082   000F24  6E75               	movwf	_fruitX^0,c
  2083   000F26                     l1898:
  2084                           
  2085                           ;Pls.c: 132:     while (fruitX == 0)
  2086   000F26  5075               	movf	_fruitX^0,w,c
  2087   000F28  B4D8               	btfsc	status,2,c
  2088   000F2A  EF99  F007         	goto	u1181
  2089   000F2E  EF9B  F007         	goto	u1180
  2090   000F32                     u1181:
  2091   000F32  EF8D  F007         	goto	l1896
  2092   000F36                     u1180:
  2093   000F36  EFA3  F007         	goto	l1902
  2094   000F3A                     l1900:
  2095                           
  2096                           ;Pls.c: 136:         fruitY = random(0,7);
  2097   000F3A  0E07               	movlw	7
  2098   000F3C  6E5E               	movwf	random@upper_bound^0,c
  2099   000F3E  0E00               	movlw	0
  2100   000F40  EC0F  F006         	call	_random
  2101   000F44  6E74               	movwf	_fruitY^0,c
  2102   000F46                     l1902:
  2103                           
  2104                           ;Pls.c: 135:     while (fruitY == 0)
  2105   000F46  5074               	movf	_fruitY^0,w,c
  2106   000F48  B4D8               	btfsc	status,2,c
  2107   000F4A  EFA9  F007         	goto	u1191
  2108   000F4E  EFAB  F007         	goto	u1190
  2109   000F52                     u1191:
  2110   000F52  EF9D  F007         	goto	l1900
  2111   000F56                     u1190:
  2112   000F56                     
  2113                           ;Pls.c: 139:     score = 0;
  2114   000F56  6A73               	clrf	_score^0,c
  2115                           
  2116                           ;Pls.c: 140:     snakeTailLen = 0;
  2117   000F58  6A76               	clrf	_snakeTailLen^0,c
  2118                           
  2119                           ;Pls.c: 141:     key = 0;
  2120   000F5A  6A72               	clrf	_key^0,c
  2121   000F5C  0012               	return		;funcret
  2122   000F5E                     __end_of_setup:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _logic *****************
  2126 ;; Defined at:
  2127 ;;		line 150 in file "Pls.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  i               1   33[COMRAM] unsigned char 
  2132 ;;  i               1   34[COMRAM] unsigned char 
  2133 ;;  prevY           1   32[COMRAM] unsigned char 
  2134 ;;  prevX           1   31[COMRAM] unsigned char 
  2135 ;;  prev2Y          1   30[COMRAM] unsigned char 
  2136 ;;  prev2X          1   29[COMRAM] unsigned char 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1
  2146 ;;      Params:         0       0       0
  2147 ;;      Locals:         6       0       0
  2148 ;;      Temps:          1       0       0
  2149 ;;      Totals:         7       0       0
  2150 ;;Total ram usage:        7 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 3
  2153 ;; This function calls:
  2154 ;;		_random
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text2
  2161   0014D2                     __ptext2:
  2162                           	callstack 0
  2163   0014D2                     _logic:
  2164                           	callstack 27
  2165   0014D2                     
  2166                           ;Pls.c: 154:     unsigned char prevX = snakeTailX[0];
  2167   0014D2  C0C4  F065         	movff	_snakeTailX,logic@prevX
  2168                           
  2169                           ;Pls.c: 155:     unsigned char prevY = snakeTailY[0];
  2170   0014D6  C100  F066         	movff	_snakeTailY,logic@prevY
  2171                           
  2172                           ;Pls.c: 156:     unsigned char prev2X, prev2Y;;Pls.c: 157:     snakeTailX[0] = snakeHead
      +                          XPos;
  2173   0014DA  C078  F0C4         	movff	_snakeHeadXPos,_snakeTailX
  2174                           
  2175                           ;Pls.c: 158:     snakeTailY[0] = snakeHeadYPos;
  2176   0014DE  C077  F100         	movff	_snakeHeadYPos,_snakeTailY
  2177   0014E2                     
  2178                           ;Pls.c: 159:     for (unsigned char i = 1; i < snakeTailLen; i++) {
  2179   0014E2  0E01               	movlw	1
  2180   0014E4  6E68               	movwf	logic@i^0,c
  2181   0014E6  EF96  F00A         	goto	l1916
  2182   0014EA                     l1908:
  2183                           
  2184                           ;Pls.c: 160:         prev2X = snakeTailX[i];
  2185   0014EA  5068               	movf	logic@i^0,w,c
  2186   0014EC  0FC4               	addlw	low _snakeTailX
  2187   0014EE  6ED9               	movwf	fsr2l,c
  2188   0014F0  6ADA               	clrf	fsr2h,c
  2189   0014F2  50DF               	movf	indf2,w,c
  2190   0014F4  6E63               	movwf	logic@prev2X^0,c
  2191                           
  2192                           ;Pls.c: 161:         prev2Y = snakeTailY[i];
  2193   0014F6  0E00               	movlw	low _snakeTailY
  2194   0014F8  2468               	addwf	logic@i^0,w,c
  2195   0014FA  6ED9               	movwf	fsr2l,c
  2196   0014FC  6ADA               	clrf	fsr2h,c
  2197   0014FE  0E01               	movlw	high _snakeTailY
  2198   001500  22DA               	addwfc	fsr2h,f,c
  2199   001502  50DF               	movf	indf2,w,c
  2200   001504  6E64               	movwf	logic@prev2Y^0,c
  2201                           
  2202                           ;Pls.c: 162:         snakeTailX[i] = prevX;
  2203   001506  5068               	movf	logic@i^0,w,c
  2204   001508  0FC4               	addlw	low _snakeTailX
  2205   00150A  6ED9               	movwf	fsr2l,c
  2206   00150C  6ADA               	clrf	fsr2h,c
  2207   00150E  C065  FFDF         	movff	logic@prevX,indf2
  2208                           
  2209                           ;Pls.c: 163:         snakeTailY[i] = prevY;
  2210   001512  0E00               	movlw	low _snakeTailY
  2211   001514  2468               	addwf	logic@i^0,w,c
  2212   001516  6ED9               	movwf	fsr2l,c
  2213   001518  6ADA               	clrf	fsr2h,c
  2214   00151A  0E01               	movlw	high _snakeTailY
  2215   00151C  22DA               	addwfc	fsr2h,f,c
  2216   00151E  C066  FFDF         	movff	logic@prevY,indf2
  2217   001522                     
  2218                           ;Pls.c: 164:         prevX = prev2X;
  2219   001522  C063  F065         	movff	logic@prev2X,logic@prevX
  2220   001526                     
  2221                           ;Pls.c: 165:         prevY = prev2Y;
  2222   001526  C064  F066         	movff	logic@prev2Y,logic@prevY
  2223   00152A                     
  2224                           ;Pls.c: 166:     }
  2225   00152A  2A68               	incf	logic@i^0,f,c
  2226   00152C                     l1916:
  2227   00152C  5076               	movf	_snakeTailLen^0,w,c
  2228   00152E  5C68               	subwf	logic@i^0,w,c
  2229   001530  A0D8               	btfss	status,0,c
  2230   001532  EF9D  F00A         	goto	u1201
  2231   001536  EF9F  F00A         	goto	u1200
  2232   00153A                     u1201:
  2233   00153A  EF75  F00A         	goto	l1908
  2234   00153E                     u1200:
  2235   00153E  EFAD  F00A         	goto	l1928
  2236   001542                     l1918:
  2237                           
  2238                           ;Pls.c: 171:         snakeHeadXPos--;
  2239   001542  0678               	decf	_snakeHeadXPos^0,f,c
  2240                           
  2241                           ;Pls.c: 172:         break;
  2242   001544  EFC0  F00A         	goto	l1930
  2243   001548                     l1920:
  2244                           
  2245                           ;Pls.c: 174:         snakeHeadXPos++;
  2246   001548  2A78               	incf	_snakeHeadXPos^0,f,c
  2247                           
  2248                           ;Pls.c: 175:         break;
  2249   00154A  EFC0  F00A         	goto	l1930
  2250   00154E                     l1922:
  2251                           
  2252                           ;Pls.c: 177:         snakeHeadYPos--;
  2253   00154E  0677               	decf	_snakeHeadYPos^0,f,c
  2254                           
  2255                           ;Pls.c: 178:         break;
  2256   001550  EFC0  F00A         	goto	l1930
  2257   001554                     l1924:
  2258                           
  2259                           ;Pls.c: 180:         snakeHeadYPos++;
  2260   001554  2A77               	incf	_snakeHeadYPos^0,f,c
  2261                           
  2262                           ;Pls.c: 181:         break;
  2263   001556  EFC0  F00A         	goto	l1930
  2264   00155A                     l1928:
  2265   00155A  5072               	movf	_key^0,w,c
  2266                           
  2267                           ; Switch size 1, requested type "simple"
  2268                           ; Number of cases is 4, Range of values is 1 to 4
  2269                           ; switch strategies available:
  2270                           ; Name         Instructions Cycles
  2271                           ; simple_byte           13     7 (average)
  2272                           ;	Chosen strategy is simple_byte
  2273   00155C  0A01               	xorlw	1	; case 1
  2274   00155E  B4D8               	btfsc	status,2,c
  2275   001560  EFA1  F00A         	goto	l1918
  2276   001564  0A03               	xorlw	3	; case 2
  2277   001566  B4D8               	btfsc	status,2,c
  2278   001568  EFA4  F00A         	goto	l1920
  2279   00156C  0A01               	xorlw	1	; case 3
  2280   00156E  B4D8               	btfsc	status,2,c
  2281   001570  EFA7  F00A         	goto	l1922
  2282   001574  0A07               	xorlw	7	; case 4
  2283   001576  B4D8               	btfsc	status,2,c
  2284   001578  EFAA  F00A         	goto	l1924
  2285   00157C  EFC0  F00A         	goto	l1930
  2286   001580                     l1930:
  2287                           
  2288                           ;Pls.c: 187:     if (snakeHeadXPos < 0 || snakeHeadXPos >= 16 || snakeHeadYPos < 0 || sn
      +                          akeHeadYPos >= 8)
  2289   001580  0E10               	movlw	16
  2290   001582  6078               	cpfslt	_snakeHeadXPos^0,c
  2291   001584  EFC6  F00A         	goto	u1211
  2292   001588  EFC8  F00A         	goto	u1210
  2293   00158C                     u1211:
  2294   00158C  EFD0  F00A         	goto	l1934
  2295   001590                     u1210:
  2296   001590  0E07               	movlw	7
  2297   001592  6477               	cpfsgt	_snakeHeadYPos^0,c
  2298   001594  EFCE  F00A         	goto	u1221
  2299   001598  EFD0  F00A         	goto	u1220
  2300   00159C                     u1221:
  2301   00159C  EFD2  F00A         	goto	l1936
  2302   0015A0                     u1220:
  2303   0015A0                     l1934:
  2304                           
  2305                           ;Pls.c: 188:         gameover = 1;
  2306   0015A0  0E01               	movlw	1
  2307   0015A2  6E6E               	movwf	_gameover^0,c
  2308   0015A4                     l1936:
  2309                           
  2310                           ;Pls.c: 191:     for (unsigned char i = 0; i < snakeTailLen; i++) {
  2311   0015A4  6A67               	clrf	logic@i_307^0,c
  2312   0015A6  EFF4  F00A         	goto	l1946
  2313   0015AA                     l1938:
  2314                           
  2315                           ;Pls.c: 192:         if (snakeTailX[i] == snakeHeadXPos && snakeTailY[i] == snakeHeadYPo
      +                          s)
  2316   0015AA  5067               	movf	logic@i_307^0,w,c
  2317   0015AC  0FC4               	addlw	low _snakeTailX
  2318   0015AE  6ED9               	movwf	fsr2l,c
  2319   0015B0  6ADA               	clrf	fsr2h,c
  2320   0015B2  5078               	movf	_snakeHeadXPos^0,w,c
  2321   0015B4  18DE               	xorwf	postinc2,w,c
  2322   0015B6  A4D8               	btfss	status,2,c
  2323   0015B8  EFE0  F00A         	goto	u1231
  2324   0015BC  EFE2  F00A         	goto	u1230
  2325   0015C0                     u1231:
  2326   0015C0  EFF3  F00A         	goto	l1944
  2327   0015C4                     u1230:
  2328   0015C4  0E00               	movlw	low _snakeTailY
  2329   0015C6  2467               	addwf	logic@i_307^0,w,c
  2330   0015C8  6ED9               	movwf	fsr2l,c
  2331   0015CA  6ADA               	clrf	fsr2h,c
  2332   0015CC  0E01               	movlw	high _snakeTailY
  2333   0015CE  22DA               	addwfc	fsr2h,f,c
  2334   0015D0  5077               	movf	_snakeHeadYPos^0,w,c
  2335   0015D2  18DE               	xorwf	postinc2,w,c
  2336   0015D4  A4D8               	btfss	status,2,c
  2337   0015D6  EFEF  F00A         	goto	u1241
  2338   0015DA  EFF1  F00A         	goto	u1240
  2339   0015DE                     u1241:
  2340   0015DE  EFF3  F00A         	goto	l1944
  2341   0015E2                     u1240:
  2342   0015E2                     
  2343                           ;Pls.c: 193:             gameover = 1;
  2344   0015E2  0E01               	movlw	1
  2345   0015E4  6E6E               	movwf	_gameover^0,c
  2346   0015E6                     l1944:
  2347                           
  2348                           ;Pls.c: 194:     }
  2349   0015E6  2A67               	incf	logic@i_307^0,f,c
  2350   0015E8                     l1946:
  2351   0015E8  5076               	movf	_snakeTailLen^0,w,c
  2352   0015EA  5C67               	subwf	logic@i_307^0,w,c
  2353   0015EC  A0D8               	btfss	status,0,c
  2354   0015EE  EFFB  F00A         	goto	u1251
  2355   0015F2  EFFD  F00A         	goto	u1250
  2356   0015F6                     u1251:
  2357   0015F6  EFD5  F00A         	goto	l1938
  2358   0015FA                     u1250:
  2359   0015FA                     
  2360                           ;Pls.c: 198:     if (snakeHeadXPos == fruitX && snakeHeadYPos == fruitY) {
  2361   0015FA  5075               	movf	_fruitX^0,w,c
  2362   0015FC  1878               	xorwf	_snakeHeadXPos^0,w,c
  2363   0015FE  A4D8               	btfss	status,2,c
  2364   001600  EF04  F00B         	goto	u1261
  2365   001604  EF06  F00B         	goto	u1260
  2366   001608                     u1261:
  2367   001608  EF3D  F00B         	goto	l245
  2368   00160C                     u1260:
  2369   00160C  5074               	movf	_fruitY^0,w,c
  2370   00160E  1877               	xorwf	_snakeHeadYPos^0,w,c
  2371   001610  A4D8               	btfss	status,2,c
  2372   001612  EF0D  F00B         	goto	u1271
  2373   001616  EF0F  F00B         	goto	u1270
  2374   00161A                     u1271:
  2375   00161A  EF3D  F00B         	goto	l245
  2376   00161E                     u1270:
  2377   00161E                     
  2378                           ;Pls.c: 199:         fruitX = random(0,15);
  2379   00161E  0E0F               	movlw	15
  2380   001620  6E5E               	movwf	random@upper_bound^0,c
  2381   001622  0E00               	movlw	0
  2382   001624  EC0F  F006         	call	_random
  2383   001628  6E75               	movwf	_fruitX^0,c
  2384                           
  2385                           ;Pls.c: 200:         fruitY = random(0,7);
  2386   00162A  0E07               	movlw	7
  2387   00162C  6E5E               	movwf	random@upper_bound^0,c
  2388   00162E  0E00               	movlw	0
  2389   001630  EC0F  F006         	call	_random
  2390   001634  6E74               	movwf	_fruitY^0,c
  2391                           
  2392                           ;Pls.c: 201:         while (fruitX == 0)
  2393   001636  EF23  F00B         	goto	l1956
  2394   00163A                     l1954:
  2395                           
  2396                           ;Pls.c: 202:             fruitX = random(0,15);
  2397   00163A  0E0F               	movlw	15
  2398   00163C  6E5E               	movwf	random@upper_bound^0,c
  2399   00163E  0E00               	movlw	0
  2400   001640  EC0F  F006         	call	_random
  2401   001644  6E75               	movwf	_fruitX^0,c
  2402   001646                     l1956:
  2403                           
  2404                           ;Pls.c: 201:         while (fruitX == 0)
  2405   001646  5075               	movf	_fruitX^0,w,c
  2406   001648  B4D8               	btfsc	status,2,c
  2407   00164A  EF29  F00B         	goto	u1281
  2408   00164E  EF2B  F00B         	goto	u1280
  2409   001652                     u1281:
  2410   001652  EF1D  F00B         	goto	l1954
  2411   001656                     u1280:
  2412   001656  EF33  F00B         	goto	l1960
  2413   00165A                     l1958:
  2414                           
  2415                           ;Pls.c: 206:             fruitY = random(0,7);
  2416   00165A  0E07               	movlw	7
  2417   00165C  6E5E               	movwf	random@upper_bound^0,c
  2418   00165E  0E00               	movlw	0
  2419   001660  EC0F  F006         	call	_random
  2420   001664  6E74               	movwf	_fruitY^0,c
  2421   001666                     l1960:
  2422                           
  2423                           ;Pls.c: 205:         while (fruitY == 0)
  2424   001666  5074               	movf	_fruitY^0,w,c
  2425   001668  B4D8               	btfsc	status,2,c
  2426   00166A  EF39  F00B         	goto	u1291
  2427   00166E  EF3B  F00B         	goto	u1290
  2428   001672                     u1291:
  2429   001672  EF2D  F00B         	goto	l1958
  2430   001676                     u1290:
  2431   001676                     
  2432                           ;Pls.c: 207:          score += 1;
  2433   001676  2A73               	incf	_score^0,f,c
  2434                           
  2435                           ;Pls.c: 208:          snakeTailLen++;
  2436   001678  2A76               	incf	_snakeTailLen^0,f,c
  2437   00167A                     l245:
  2438   00167A  0012               	return		;funcret
  2439   00167C                     __end_of_logic:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function _random *****************
  2443 ;; Defined at:
  2444 ;;		line 73 in file "Pls.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  lower_bound     1    wreg     unsigned char 
  2447 ;;  upper_bound     1   24[COMRAM] unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  lower_bound     1   27[COMRAM] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      unsigned char 
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1
  2459 ;;      Params:         1       0       0
  2460 ;;      Locals:         1       0       0
  2461 ;;      Temps:          2       0       0
  2462 ;;      Totals:         4       0       0
  2463 ;;Total ram usage:        4 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 2
  2466 ;; This function calls:
  2467 ;;		___awmod
  2468 ;;		_rand
  2469 ;; This function is called by:
  2470 ;;		_setup
  2471 ;;		_logic
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text3
  2476   000C1E                     __ptext3:
  2477                           	callstack 0
  2478   000C1E                     _random:
  2479                           	callstack 27
  2480                           
  2481                           ;incstack = 0
  2482                           ;random@lower_bound stored from wreg
  2483   000C1E  6E61               	movwf	random@lower_bound^0,c
  2484   000C20                     
  2485                           ;Pls.c: 74:     return rand() % (upper_bound - lower_bound + 1) + lower_bound;
  2486   000C20  EC42  F007         	call	_rand	;wreg free
  2487   000C24  C052  F058         	movff	?_rand,___awmod@dividend
  2488   000C28  C053  F059         	movff	?_rand+1,___awmod@dividend+1
  2489   000C2C  5061               	movf	random@lower_bound^0,w,c
  2490   000C2E  C05E  F05F         	movff	random@upper_bound,??_random
  2491   000C32  6A60               	clrf	(??_random+1)^0,c
  2492   000C34  5E5F               	subwf	??_random^0,f,c
  2493   000C36  0E00               	movlw	0
  2494   000C38  5A60               	subwfb	(??_random+1)^0,f,c
  2495   000C3A  0E01               	movlw	1
  2496   000C3C  245F               	addwf	??_random^0,w,c
  2497   000C3E  6E5A               	movwf	___awmod@divisor^0,c
  2498   000C40  0E00               	movlw	0
  2499   000C42  2060               	addwfc	(??_random+1)^0,w,c
  2500   000C44  6E5B               	movwf	(___awmod@divisor+1)^0,c
  2501   000C46  EC18  F009         	call	___awmod	;wreg free
  2502   000C4A  5058               	movf	?___awmod^0,w,c
  2503   000C4C  2461               	addwf	random@lower_bound^0,w,c
  2504   000C4E  0012               	return		;funcret
  2505   000C50                     __end_of_random:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _rand *****************
  2509 ;; Defined at:
  2510 ;;		line 11 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\rand.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  2   12[COMRAM] int 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1
  2524 ;;      Params:         2       0       0
  2525 ;;      Locals:         0       0       0
  2526 ;;      Temps:          4       0       0
  2527 ;;      Totals:         6       0       0
  2528 ;;Total ram usage:        6 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 1
  2531 ;; This function calls:
  2532 ;;		___lmul
  2533 ;; This function is called by:
  2534 ;;		_random
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text4
  2539   000E84                     __ptext4:
  2540                           	callstack 0
  2541   000E84                     _rand:
  2542                           	callstack 27
  2543   000E84  C079  F046         	movff	_seed,___lmul@multiplier
  2544   000E88  C07A  F047         	movff	_seed+1,___lmul@multiplier+1
  2545   000E8C  C07B  F048         	movff	_seed+2,___lmul@multiplier+2
  2546   000E90  C07C  F049         	movff	_seed+3,___lmul@multiplier+3
  2547   000E94  0E2D               	movlw	45
  2548   000E96  6E4A               	movwf	___lmul@multiplicand^0,c
  2549   000E98  0E7F               	movlw	127
  2550   000E9A  6E4B               	movwf	(___lmul@multiplicand+1)^0,c
  2551   000E9C  0E95               	movlw	149
  2552   000E9E  6E4C               	movwf	(___lmul@multiplicand+2)^0,c
  2553   000EA0  0E4C               	movlw	76
  2554   000EA2  6E4D               	movwf	(___lmul@multiplicand+3)^0,c
  2555   000EA4  EC0D  F007         	call	___lmul	;wreg free
  2556   000EA8  0E01               	movlw	1
  2557   000EAA  2446               	addwf	?___lmul^0,w,c
  2558   000EAC  6E79               	movwf	_seed^0,c
  2559   000EAE  0E00               	movlw	0
  2560   000EB0  2047               	addwfc	(?___lmul+1)^0,w,c
  2561   000EB2  6E7A               	movwf	(_seed+1)^0,c
  2562   000EB4  0E00               	movlw	0
  2563   000EB6  2048               	addwfc	(?___lmul+2)^0,w,c
  2564   000EB8  6E7B               	movwf	(_seed+2)^0,c
  2565   000EBA  0E00               	movlw	0
  2566   000EBC  2049               	addwfc	(?___lmul+3)^0,w,c
  2567   000EBE  6E7C               	movwf	(_seed+3)^0,c
  2568   000EC0  C079  F054         	movff	_seed,??_rand
  2569   000EC4  C07A  F055         	movff	_seed+1,??_rand+1
  2570   000EC8  C07B  F056         	movff	_seed+2,??_rand+2
  2571   000ECC  C07C  F057         	movff	_seed+3,??_rand+3
  2572   000ED0  0E12               	movlw	18
  2573   000ED2  EF70  F007         	goto	u1060
  2574   000ED6                     u1065:
  2575   000ED6  90D8               	bcf	status,0,c
  2576   000ED8  3257               	rrcf	(??_rand+3)^0,f,c
  2577   000EDA  3256               	rrcf	(??_rand+2)^0,f,c
  2578   000EDC  3255               	rrcf	(??_rand+1)^0,f,c
  2579   000EDE  3254               	rrcf	??_rand^0,f,c
  2580   000EE0                     u1060:
  2581   000EE0  2EE8               	decfsz	wreg,f,c
  2582   000EE2  EF6B  F007         	goto	u1065
  2583   000EE6  C054  F052         	movff	??_rand,?_rand
  2584   000EEA  C055  F053         	movff	??_rand+1,?_rand+1
  2585   000EEE  0012               	return		;funcret
  2586   000EF0                     __end_of_rand:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function ___lmul *****************
  2590 ;; Defined at:
  2591 ;;		line 15 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  multiplier      4    0[COMRAM] unsigned long 
  2594 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  product         4    8[COMRAM] unsigned long 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  4    0[COMRAM] unsigned long 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1
  2606 ;;      Params:         8       0       0
  2607 ;;      Locals:         4       0       0
  2608 ;;      Temps:          0       0       0
  2609 ;;      Totals:        12       0       0
  2610 ;;Total ram usage:       12 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_rand
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text5
  2620   000E1A                     __ptext5:
  2621                           	callstack 0
  2622   000E1A                     ___lmul:
  2623                           	callstack 27
  2624   000E1A  0E00               	movlw	0
  2625   000E1C  6E4E               	movwf	___lmul@product^0,c
  2626   000E1E  0E00               	movlw	0
  2627   000E20  6E4F               	movwf	(___lmul@product+1)^0,c
  2628   000E22  0E00               	movlw	0
  2629   000E24  6E50               	movwf	(___lmul@product+2)^0,c
  2630   000E26  0E00               	movlw	0
  2631   000E28  6E51               	movwf	(___lmul@product+3)^0,c
  2632   000E2A                     l1608:
  2633   000E2A  A046               	btfss	___lmul@multiplier^0,0,c
  2634   000E2C  EF1A  F007         	goto	u831
  2635   000E30  EF1C  F007         	goto	u830
  2636   000E34                     u831:
  2637   000E34  EF24  F007         	goto	l1612
  2638   000E38                     u830:
  2639   000E38  504A               	movf	___lmul@multiplicand^0,w,c
  2640   000E3A  264E               	addwf	___lmul@product^0,f,c
  2641   000E3C  504B               	movf	(___lmul@multiplicand+1)^0,w,c
  2642   000E3E  224F               	addwfc	(___lmul@product+1)^0,f,c
  2643   000E40  504C               	movf	(___lmul@multiplicand+2)^0,w,c
  2644   000E42  2250               	addwfc	(___lmul@product+2)^0,f,c
  2645   000E44  504D               	movf	(___lmul@multiplicand+3)^0,w,c
  2646   000E46  2251               	addwfc	(___lmul@product+3)^0,f,c
  2647   000E48                     l1612:
  2648   000E48  90D8               	bcf	status,0,c
  2649   000E4A  364A               	rlcf	___lmul@multiplicand^0,f,c
  2650   000E4C  364B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2651   000E4E  364C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2652   000E50  364D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2653   000E52  90D8               	bcf	status,0,c
  2654   000E54  3249               	rrcf	(___lmul@multiplier+3)^0,f,c
  2655   000E56  3248               	rrcf	(___lmul@multiplier+2)^0,f,c
  2656   000E58  3247               	rrcf	(___lmul@multiplier+1)^0,f,c
  2657   000E5A  3246               	rrcf	___lmul@multiplier^0,f,c
  2658   000E5C  5046               	movf	___lmul@multiplier^0,w,c
  2659   000E5E  1047               	iorwf	(___lmul@multiplier+1)^0,w,c
  2660   000E60  1048               	iorwf	(___lmul@multiplier+2)^0,w,c
  2661   000E62  1049               	iorwf	(___lmul@multiplier+3)^0,w,c
  2662   000E64  A4D8               	btfss	status,2,c
  2663   000E66  EF37  F007         	goto	u841
  2664   000E6A  EF39  F007         	goto	u840
  2665   000E6E                     u841:
  2666   000E6E  EF15  F007         	goto	l1608
  2667   000E72                     u840:
  2668   000E72  C04E  F046         	movff	___lmul@product,?___lmul
  2669   000E76  C04F  F047         	movff	___lmul@product+1,?___lmul+1
  2670   000E7A  C050  F048         	movff	___lmul@product+2,?___lmul+2
  2671   000E7E  C051  F049         	movff	___lmul@product+3,?___lmul+3
  2672   000E82  0012               	return		;funcret
  2673   000E84                     __end_of___lmul:
  2674                           	callstack 0
  2675                           
  2676 ;; *************** function ___awmod *****************
  2677 ;; Defined at:
  2678 ;;		line 7 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  dividend        2   18[COMRAM] int 
  2681 ;;  divisor         2   20[COMRAM] int 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  sign            1   23[COMRAM] unsigned char 
  2684 ;;  counter         1   22[COMRAM] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  2   18[COMRAM] int 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1
  2694 ;;      Params:         4       0       0
  2695 ;;      Locals:         2       0       0
  2696 ;;      Temps:          0       0       0
  2697 ;;      Totals:         6       0       0
  2698 ;;Total ram usage:        6 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_random
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text6
  2708   001230                     __ptext6:
  2709                           	callstack 0
  2710   001230                     ___awmod:
  2711                           	callstack 28
  2712   001230  6A5D               	clrf	___awmod@sign^0,c
  2713   001232  BE59               	btfsc	(___awmod@dividend+1)^0,7,c
  2714   001234  EF20  F009         	goto	u1070
  2715   001238  EF1E  F009         	goto	u1071
  2716   00123C                     u1071:
  2717   00123C  EF26  F009         	goto	l1756
  2718   001240                     u1070:
  2719   001240  6C58               	negf	___awmod@dividend^0,c
  2720   001242  1E59               	comf	(___awmod@dividend+1)^0,f,c
  2721   001244  B0D8               	btfsc	status,0,c
  2722   001246  2A59               	incf	(___awmod@dividend+1)^0,f,c
  2723   001248  0E01               	movlw	1
  2724   00124A  6E5D               	movwf	___awmod@sign^0,c
  2725   00124C                     l1756:
  2726   00124C  BE5B               	btfsc	(___awmod@divisor+1)^0,7,c
  2727   00124E  EF2D  F009         	goto	u1080
  2728   001252  EF2B  F009         	goto	u1081
  2729   001256                     u1081:
  2730   001256  EF31  F009         	goto	l1760
  2731   00125A                     u1080:
  2732   00125A  6C5A               	negf	___awmod@divisor^0,c
  2733   00125C  1E5B               	comf	(___awmod@divisor+1)^0,f,c
  2734   00125E  B0D8               	btfsc	status,0,c
  2735   001260  2A5B               	incf	(___awmod@divisor+1)^0,f,c
  2736   001262                     l1760:
  2737   001262  505A               	movf	___awmod@divisor^0,w,c
  2738   001264  105B               	iorwf	(___awmod@divisor+1)^0,w,c
  2739   001266  B4D8               	btfsc	status,2,c
  2740   001268  EF38  F009         	goto	u1091
  2741   00126C  EF3A  F009         	goto	u1090
  2742   001270                     u1091:
  2743   001270  EF5E  F009         	goto	l1776
  2744   001274                     u1090:
  2745   001274  0E01               	movlw	1
  2746   001276  6E5C               	movwf	___awmod@counter^0,c
  2747   001278  EF42  F009         	goto	l1766
  2748   00127C                     l1764:
  2749   00127C  90D8               	bcf	status,0,c
  2750   00127E  365A               	rlcf	___awmod@divisor^0,f,c
  2751   001280  365B               	rlcf	(___awmod@divisor+1)^0,f,c
  2752   001282  2A5C               	incf	___awmod@counter^0,f,c
  2753   001284                     l1766:
  2754   001284  AE5B               	btfss	(___awmod@divisor+1)^0,7,c
  2755   001286  EF47  F009         	goto	u1101
  2756   00128A  EF49  F009         	goto	u1100
  2757   00128E                     u1101:
  2758   00128E  EF3E  F009         	goto	l1764
  2759   001292                     u1100:
  2760   001292                     l1768:
  2761   001292  505A               	movf	___awmod@divisor^0,w,c
  2762   001294  5C58               	subwf	___awmod@dividend^0,w,c
  2763   001296  505B               	movf	(___awmod@divisor+1)^0,w,c
  2764   001298  5859               	subwfb	(___awmod@dividend+1)^0,w,c
  2765   00129A  A0D8               	btfss	status,0,c
  2766   00129C  EF52  F009         	goto	u1111
  2767   0012A0  EF54  F009         	goto	u1110
  2768   0012A4                     u1111:
  2769   0012A4  EF58  F009         	goto	l1772
  2770   0012A8                     u1110:
  2771   0012A8  505A               	movf	___awmod@divisor^0,w,c
  2772   0012AA  5E58               	subwf	___awmod@dividend^0,f,c
  2773   0012AC  505B               	movf	(___awmod@divisor+1)^0,w,c
  2774   0012AE  5A59               	subwfb	(___awmod@dividend+1)^0,f,c
  2775   0012B0                     l1772:
  2776   0012B0  90D8               	bcf	status,0,c
  2777   0012B2  325B               	rrcf	(___awmod@divisor+1)^0,f,c
  2778   0012B4  325A               	rrcf	___awmod@divisor^0,f,c
  2779   0012B6  2E5C               	decfsz	___awmod@counter^0,f,c
  2780   0012B8  EF49  F009         	goto	l1768
  2781   0012BC                     l1776:
  2782   0012BC  505D               	movf	___awmod@sign^0,w,c
  2783   0012BE  B4D8               	btfsc	status,2,c
  2784   0012C0  EF64  F009         	goto	u1121
  2785   0012C4  EF66  F009         	goto	u1120
  2786   0012C8                     u1121:
  2787   0012C8  EF6A  F009         	goto	l1780
  2788   0012CC                     u1120:
  2789   0012CC  6C58               	negf	___awmod@dividend^0,c
  2790   0012CE  1E59               	comf	(___awmod@dividend+1)^0,f,c
  2791   0012D0  B0D8               	btfsc	status,0,c
  2792   0012D2  2A59               	incf	(___awmod@dividend+1)^0,f,c
  2793   0012D4                     l1780:
  2794   0012D4  C058  F058         	movff	___awmod@dividend,?___awmod
  2795   0012D8  C059  F059         	movff	___awmod@dividend+1,?___awmod+1
  2796   0012DC  0012               	return		;funcret
  2797   0012DE                     __end_of___awmod:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _input *****************
  2801 ;; Defined at:
  2802 ;;		line 76 in file "Pls.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1
  2816 ;;      Params:         0       0       0
  2817 ;;      Locals:         0       0       0
  2818 ;;      Temps:          0       0       0
  2819 ;;      Totals:         0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text7
  2830   000FCC                     __ptext7:
  2831                           	callstack 0
  2832   000FCC                     _input:
  2833                           	callstack 30
  2834   000FCC                     
  2835                           ;Pls.c: 77:     if(PORTAbits.RA2 == 1)
  2836   000FCC  A480               	btfss	128,2,c	;volatile
  2837   000FCE  EFEB  F007         	goto	u391
  2838   000FD2  EFED  F007         	goto	u390
  2839   000FD6                     u391:
  2840   000FD6  EFF1  F007         	goto	l180
  2841   000FDA                     u390:
  2842   000FDA                     
  2843                           ;Pls.c: 78:         key = 1;
  2844   000FDA  0E01               	movlw	1
  2845   000FDC  6E72               	movwf	_key^0,c
  2846   000FDE  EF1D  F008         	goto	l189
  2847   000FE2                     l180:
  2848   000FE2  A680               	btfss	128,3,c	;volatile
  2849   000FE4  EFF6  F007         	goto	u401
  2850   000FE8  EFF8  F007         	goto	u400
  2851   000FEC                     u401:
  2852   000FEC  EFFC  F007         	goto	l182
  2853   000FF0                     u400:
  2854   000FF0                     
  2855                           ;Pls.c: 80:         key = 2;
  2856   000FF0  0E02               	movlw	2
  2857   000FF2  6E72               	movwf	_key^0,c
  2858   000FF4  EF1D  F008         	goto	l189
  2859   000FF8                     l182:
  2860   000FF8  A080               	btfss	128,0,c	;volatile
  2861   000FFA  EF01  F008         	goto	u411
  2862   000FFE  EF03  F008         	goto	u410
  2863   001002                     u411:
  2864   001002  EF07  F008         	goto	l184
  2865   001006                     u410:
  2866   001006                     
  2867                           ;Pls.c: 82:         key = 3;
  2868   001006  0E03               	movlw	3
  2869   001008  6E72               	movwf	_key^0,c
  2870   00100A  EF1D  F008         	goto	l189
  2871   00100E                     l184:
  2872   00100E  A280               	btfss	128,1,c	;volatile
  2873   001010  EF0C  F008         	goto	u421
  2874   001014  EF0E  F008         	goto	u420
  2875   001018                     u421:
  2876   001018  EF12  F008         	goto	l186
  2877   00101C                     u420:
  2878   00101C                     
  2879                           ;Pls.c: 84:         key = 4;
  2880   00101C  0E04               	movlw	4
  2881   00101E  6E72               	movwf	_key^0,c
  2882   001020  EF1D  F008         	goto	l189
  2883   001024                     l186:
  2884   001024  A880               	btfss	128,4,c	;volatile
  2885   001026  EF17  F008         	goto	u431
  2886   00102A  EF19  F008         	goto	u430
  2887   00102E                     u431:
  2888   00102E  EF1D  F008         	goto	l183
  2889   001032                     u430:
  2890   001032                     
  2891                           ;Pls.c: 86:         gameover = 1;
  2892   001032  0E01               	movlw	1
  2893   001034  6E6E               	movwf	_gameover^0,c
  2894   001036  EF1D  F008         	goto	l189
  2895   00103A                     l183:
  2896   00103A                     l189:
  2897   00103A  0012               	return		;funcret
  2898   00103C                     __end_of_input:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _draw *****************
  2902 ;; Defined at:
  2903 ;;		line 212 in file "Pls.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  k               1   35[COMRAM] unsigned char 
  2908 ;;  prTail          1    0        unsigned char 
  2909 ;;  j               1   37[COMRAM] unsigned char 
  2910 ;;  i               1   36[COMRAM] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1
  2920 ;;      Params:         0       0       0
  2921 ;;      Locals:         3       0       0
  2922 ;;      Temps:          1       0       0
  2923 ;;      Totals:         4       0       0
  2924 ;;Total ram usage:        4 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 4
  2927 ;; This function calls:
  2928 ;;		_clearAllChar
  2929 ;;		_drawGraphics
  2930 ;;		_placeChar
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text8
  2937   001182                     __ptext8:
  2938                           	callstack 0
  2939   001182                     _draw:
  2940                           	callstack 26
  2941   001182                     
  2942                           ;Pls.c: 213:     clearAllChar();
  2943   001182  EC28  F006         	call	_clearAllChar	;wreg free
  2944                           
  2945                           ;Pls.c: 214:     placeChar(snakeHeadXPos,snakeHeadYPos,'O');
  2946   001186  C077  F046         	movff	_snakeHeadYPos,placeChar@y
  2947   00118A  0E4F               	movlw	79
  2948   00118C  6E47               	movwf	placeChar@c^0,c
  2949   00118E  5078               	movf	_snakeHeadXPos^0,w,c
  2950   001190  EC6F  F009         	call	_placeChar
  2951                           
  2952                           ;Pls.c: 215:     placeChar(fruitX,fruitY,'a');
  2953   001194  C074  F046         	movff	_fruitY,placeChar@y
  2954   001198  0E61               	movlw	97
  2955   00119A  6E47               	movwf	placeChar@c^0,c
  2956   00119C  5075               	movf	_fruitX^0,w,c
  2957   00119E  EC6F  F009         	call	_placeChar
  2958   0011A2                     
  2959                           ;Pls.c: 218:     for (unsigned char i = 0; i < 8; i++) {
  2960   0011A2  6A6A               	clrf	draw@i^0,c
  2961   0011A4                     l248:
  2962                           
  2963                           ;Pls.c: 219:         for (unsigned char j = 0; j <= 16; j++) {
  2964   0011A4  6A6B               	clrf	draw@j^0,c
  2965   0011A6                     l250:
  2966                           
  2967                           ;Pls.c: 221:                 for (unsigned char k = 0; k < snakeTailLen; k++) {
  2968   0011A6  6A69               	clrf	draw@k^0,c
  2969   0011A8  EFFA  F008         	goto	l1986
  2970   0011AC                     l1976:
  2971                           
  2972                           ;Pls.c: 222:                     if (snakeTailX[k] == j && snakeTailY[k] == i) {
  2973   0011AC  5069               	movf	draw@k^0,w,c
  2974   0011AE  0FC4               	addlw	low _snakeTailX
  2975   0011B0  6ED9               	movwf	fsr2l,c
  2976   0011B2  6ADA               	clrf	fsr2h,c
  2977   0011B4  506B               	movf	draw@j^0,w,c
  2978   0011B6  18DE               	xorwf	postinc2,w,c
  2979   0011B8  A4D8               	btfss	status,2,c
  2980   0011BA  EFE1  F008         	goto	u1301
  2981   0011BE  EFE3  F008         	goto	u1300
  2982   0011C2                     u1301:
  2983   0011C2  EFF9  F008         	goto	l1984
  2984   0011C6                     u1300:
  2985   0011C6  0E00               	movlw	low _snakeTailY
  2986   0011C8  2469               	addwf	draw@k^0,w,c
  2987   0011CA  6ED9               	movwf	fsr2l,c
  2988   0011CC  6ADA               	clrf	fsr2h,c
  2989   0011CE  0E01               	movlw	high _snakeTailY
  2990   0011D0  22DA               	addwfc	fsr2h,f,c
  2991   0011D2  506A               	movf	draw@i^0,w,c
  2992   0011D4  18DE               	xorwf	postinc2,w,c
  2993   0011D6  A4D8               	btfss	status,2,c
  2994   0011D8  EFF0  F008         	goto	u1311
  2995   0011DC  EFF2  F008         	goto	u1310
  2996   0011E0                     u1311:
  2997   0011E0  EFF9  F008         	goto	l1984
  2998   0011E4                     u1310:
  2999   0011E4                     
  3000                           ;Pls.c: 223:                         placeChar(j,i,'#');
  3001   0011E4  C06A  F046         	movff	draw@i,placeChar@y
  3002   0011E8  0E23               	movlw	35
  3003   0011EA  6E47               	movwf	placeChar@c^0,c
  3004   0011EC  506B               	movf	draw@j^0,w,c
  3005   0011EE  EC6F  F009         	call	_placeChar
  3006   0011F2                     l1984:
  3007                           
  3008                           ;Pls.c: 226:                 }
  3009   0011F2  2A69               	incf	draw@k^0,f,c
  3010   0011F4                     l1986:
  3011   0011F4  5076               	movf	_snakeTailLen^0,w,c
  3012   0011F6  5C69               	subwf	draw@k^0,w,c
  3013   0011F8  A0D8               	btfss	status,0,c
  3014   0011FA  EF01  F009         	goto	u1321
  3015   0011FE  EF03  F009         	goto	u1320
  3016   001202                     u1321:
  3017   001202  EFD6  F008         	goto	l1976
  3018   001206                     u1320:
  3019   001206                     
  3020                           ;Pls.c: 227:         }
  3021   001206  2A6B               	incf	draw@j^0,f,c
  3022   001208  0E10               	movlw	16
  3023   00120A  646B               	cpfsgt	draw@j^0,c
  3024   00120C  EF0A  F009         	goto	u1331
  3025   001210  EF0C  F009         	goto	u1330
  3026   001214                     u1331:
  3027   001214  EFD3  F008         	goto	l250
  3028   001218                     u1330:
  3029   001218                     
  3030                           ;Pls.c: 229:     }
  3031   001218  2A6A               	incf	draw@i^0,f,c
  3032   00121A  0E07               	movlw	7
  3033   00121C  646A               	cpfsgt	draw@i^0,c
  3034   00121E  EF13  F009         	goto	u1341
  3035   001222  EF15  F009         	goto	u1340
  3036   001226                     u1341:
  3037   001226  EFD2  F008         	goto	l248
  3038   00122A                     u1340:
  3039   00122A                     
  3040                           ;Pls.c: 231:     drawGraphics();
  3041   00122A  ECA8  F006         	call	_drawGraphics	;wreg free
  3042   00122E  0012               	return		;funcret
  3043   001230                     __end_of_draw:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _drawGraphics *****************
  3047 ;; Defined at:
  3048 ;;		line 63 in file "Pls.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1
  3062 ;;      Params:         0       0       0
  3063 ;;      Locals:         0       0       0
  3064 ;;      Temps:          0       0       0
  3065 ;;      Totals:         0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 3
  3069 ;; This function calls:
  3070 ;;		_LCD_GraphicsDisplayString
  3071 ;; This function is called by:
  3072 ;;		_draw
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text9
  3077   000D50                     __ptext9:
  3078                           	callstack 0
  3079   000D50                     _drawGraphics:
  3080                           	callstack 26
  3081   000D50                     
  3082                           ;Pls.c: 64:     LCD_GraphicsDisplayString(0,LCDStore0);
  3083   000D50  0E35               	movlw	low _LCDStore0
  3084   000D52  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3085   000D54  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3086   000D56  0E00               	movlw	0
  3087   000D58  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3088                           
  3089                           ;Pls.c: 65:     LCD_GraphicsDisplayString(1,LCDStore1);
  3090   000D5C  0E24               	movlw	low _LCDStore1
  3091   000D5E  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3092   000D60  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3093   000D62  0E01               	movlw	1
  3094   000D64  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3095                           
  3096                           ;Pls.c: 66:     LCD_GraphicsDisplayString(2,LCDStore2);
  3097   000D68  0E13               	movlw	low _LCDStore2
  3098   000D6A  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3099   000D6C  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3100   000D6E  0E02               	movlw	2
  3101   000D70  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3102                           
  3103                           ;Pls.c: 67:     LCD_GraphicsDisplayString(3,LCDStore3);
  3104   000D74  0E02               	movlw	low _LCDStore3
  3105   000D76  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3106   000D78  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3107   000D7A  0E03               	movlw	3
  3108   000D7C  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3109                           
  3110                           ;Pls.c: 68:     LCD_GraphicsDisplayString(4,LCDStore4);
  3111   000D80  0EB3               	movlw	low _LCDStore4
  3112   000D82  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3113   000D84  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3114   000D86  0E04               	movlw	4
  3115   000D88  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3116                           
  3117                           ;Pls.c: 69:     LCD_GraphicsDisplayString(5,LCDStore5);
  3118   000D8C  0EA2               	movlw	low _LCDStore5
  3119   000D8E  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3120   000D90  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3121   000D92  0E05               	movlw	5
  3122   000D94  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3123                           
  3124                           ;Pls.c: 70:     LCD_GraphicsDisplayString(6,LCDStore6);
  3125   000D98  0E91               	movlw	low _LCDStore6
  3126   000D9A  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3127   000D9C  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3128   000D9E  0E06               	movlw	6
  3129   000DA0  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3130                           
  3131                           ;Pls.c: 71:     LCD_GraphicsDisplayString(7,LCDStore7);
  3132   000DA4  0E80               	movlw	low _LCDStore7
  3133   000DA6  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3134   000DA8  6A4B               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3135   000DAA  0E07               	movlw	7
  3136   000DAC  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3137   000DB0  0012               	return		;funcret
  3138   000DB2                     __end_of_drawGraphics:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _clearAllChar *****************
  3142 ;; Defined at:
  3143 ;;		line 143 in file "Pls.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  j               1    4[COMRAM] unsigned char 
  3148 ;;  i               1    3[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1
  3158 ;;      Params:         0       0       0
  3159 ;;      Locals:         2       0       0
  3160 ;;      Temps:          0       0       0
  3161 ;;      Totals:         2       0       0
  3162 ;;Total ram usage:        2 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 1
  3165 ;; This function calls:
  3166 ;;		_placeChar
  3167 ;; This function is called by:
  3168 ;;		_draw
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text10
  3173   000C50                     __ptext10:
  3174                           	callstack 0
  3175   000C50                     _clearAllChar:
  3176                           	callstack 28
  3177   000C50                     
  3178                           ;Pls.c: 144:     for(unsigned char i = 0; i < 8; i++){
  3179   000C50  6A49               	clrf	clearAllChar@i^0,c
  3180   000C52                     l214:
  3181                           
  3182                           ;Pls.c: 145:          for(unsigned char j = 0; j < 16; j++){
  3183   000C52  6A4A               	clrf	clearAllChar@j^0,c
  3184   000C54                     l1800:
  3185                           
  3186                           ;Pls.c: 146:              placeChar(j,i,' ');
  3187   000C54  C049  F046         	movff	clearAllChar@i,placeChar@y
  3188   000C58  0E20               	movlw	32
  3189   000C5A  6E47               	movwf	placeChar@c^0,c
  3190   000C5C  504A               	movf	clearAllChar@j^0,w,c
  3191   000C5E  EC6F  F009         	call	_placeChar
  3192   000C62                     
  3193                           ;Pls.c: 147:         }
  3194   000C62  2A4A               	incf	clearAllChar@j^0,f,c
  3195   000C64  0E0F               	movlw	15
  3196   000C66  644A               	cpfsgt	clearAllChar@j^0,c
  3197   000C68  EF38  F006         	goto	u1131
  3198   000C6C  EF3A  F006         	goto	u1130
  3199   000C70                     u1131:
  3200   000C70  EF2A  F006         	goto	l1800
  3201   000C74                     u1130:
  3202   000C74                     
  3203                           ;Pls.c: 148:     }
  3204   000C74  2A49               	incf	clearAllChar@i^0,f,c
  3205   000C76  0E07               	movlw	7
  3206   000C78  6449               	cpfsgt	clearAllChar@i^0,c
  3207   000C7A  EF41  F006         	goto	u1141
  3208   000C7E  EF43  F006         	goto	u1140
  3209   000C82                     u1141:
  3210   000C82  EF29  F006         	goto	l214
  3211   000C86                     u1140:
  3212   000C86  0012               	return		;funcret
  3213   000C88                     __end_of_clearAllChar:
  3214                           	callstack 0
  3215                           
  3216 ;; *************** function _placeChar *****************
  3217 ;; Defined at:
  3218 ;;		line 88 in file "Pls.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  x               1    wreg     unsigned char 
  3221 ;;  y               1    0[COMRAM] unsigned char 
  3222 ;;  c               1    1[COMRAM] unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  x               1    2[COMRAM] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1
  3234 ;;      Params:         2       0       0
  3235 ;;      Locals:         1       0       0
  3236 ;;      Temps:          0       0       0
  3237 ;;      Totals:         3       0       0
  3238 ;;Total ram usage:        3 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_clearAllChar
  3244 ;;		_draw
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text11
  3249   0012DE                     __ptext11:
  3250                           	callstack 0
  3251   0012DE                     _placeChar:
  3252                           	callstack 29
  3253                           
  3254                           ;incstack = 0
  3255                           ;placeChar@x stored from wreg
  3256   0012DE  6E48               	movwf	placeChar@x^0,c
  3257   0012E0                     
  3258                           ;Pls.c: 89:     switch (y) {
  3259   0012E0  EFB2  F009         	goto	l1746
  3260   0012E4                     l1728:
  3261                           
  3262                           ;Pls.c: 91:               LCDStore0[x] = c;
  3263   0012E4  5048               	movf	placeChar@x^0,w,c
  3264   0012E6  0F35               	addlw	low _LCDStore0
  3265   0012E8  6ED9               	movwf	fsr2l,c
  3266   0012EA  6ADA               	clrf	fsr2h,c
  3267   0012EC  C047  FFDF         	movff	placeChar@c,indf2
  3268                           
  3269                           ;Pls.c: 92:           break;
  3270   0012F0  EFD5  F009         	goto	l202
  3271   0012F4                     l1730:
  3272                           
  3273                           ;Pls.c: 94:               LCDStore1[x] = c;
  3274   0012F4  5048               	movf	placeChar@x^0,w,c
  3275   0012F6  0F24               	addlw	low _LCDStore1
  3276   0012F8  6ED9               	movwf	fsr2l,c
  3277   0012FA  6ADA               	clrf	fsr2h,c
  3278   0012FC  C047  FFDF         	movff	placeChar@c,indf2
  3279                           
  3280                           ;Pls.c: 95:           break;
  3281   001300  EFD5  F009         	goto	l202
  3282   001304                     l1732:
  3283                           
  3284                           ;Pls.c: 97:               LCDStore2[x] = c;
  3285   001304  5048               	movf	placeChar@x^0,w,c
  3286   001306  0F13               	addlw	low _LCDStore2
  3287   001308  6ED9               	movwf	fsr2l,c
  3288   00130A  6ADA               	clrf	fsr2h,c
  3289   00130C  C047  FFDF         	movff	placeChar@c,indf2
  3290                           
  3291                           ;Pls.c: 98:           break;
  3292   001310  EFD5  F009         	goto	l202
  3293   001314                     l1734:
  3294                           
  3295                           ;Pls.c: 100:               LCDStore3[x] = c;
  3296   001314  5048               	movf	placeChar@x^0,w,c
  3297   001316  0F02               	addlw	low _LCDStore3
  3298   001318  6ED9               	movwf	fsr2l,c
  3299   00131A  6ADA               	clrf	fsr2h,c
  3300   00131C  C047  FFDF         	movff	placeChar@c,indf2
  3301                           
  3302                           ;Pls.c: 101:           break;
  3303   001320  EFD5  F009         	goto	l202
  3304   001324                     l1736:
  3305                           
  3306                           ;Pls.c: 103:               LCDStore4[x] = c;
  3307   001324  5048               	movf	placeChar@x^0,w,c
  3308   001326  0FB3               	addlw	low _LCDStore4
  3309   001328  6ED9               	movwf	fsr2l,c
  3310   00132A  6ADA               	clrf	fsr2h,c
  3311   00132C  C047  FFDF         	movff	placeChar@c,indf2
  3312                           
  3313                           ;Pls.c: 104:           break;
  3314   001330  EFD5  F009         	goto	l202
  3315   001334                     l1738:
  3316                           
  3317                           ;Pls.c: 106:               LCDStore5[x] = c;
  3318   001334  5048               	movf	placeChar@x^0,w,c
  3319   001336  0FA2               	addlw	low _LCDStore5
  3320   001338  6ED9               	movwf	fsr2l,c
  3321   00133A  6ADA               	clrf	fsr2h,c
  3322   00133C  C047  FFDF         	movff	placeChar@c,indf2
  3323                           
  3324                           ;Pls.c: 107:           break;
  3325   001340  EFD5  F009         	goto	l202
  3326   001344                     l1740:
  3327                           
  3328                           ;Pls.c: 109:               LCDStore6[x] = c;
  3329   001344  5048               	movf	placeChar@x^0,w,c
  3330   001346  0F91               	addlw	low _LCDStore6
  3331   001348  6ED9               	movwf	fsr2l,c
  3332   00134A  6ADA               	clrf	fsr2h,c
  3333   00134C  C047  FFDF         	movff	placeChar@c,indf2
  3334                           
  3335                           ;Pls.c: 110:           break;
  3336   001350  EFD5  F009         	goto	l202
  3337   001354                     l1742:
  3338                           
  3339                           ;Pls.c: 112:               LCDStore7[x] = c;
  3340   001354  5048               	movf	placeChar@x^0,w,c
  3341   001356  0F80               	addlw	low _LCDStore7
  3342   001358  6ED9               	movwf	fsr2l,c
  3343   00135A  6ADA               	clrf	fsr2h,c
  3344   00135C  C047  FFDF         	movff	placeChar@c,indf2
  3345                           
  3346                           ;Pls.c: 113:           break;
  3347   001360  EFD5  F009         	goto	l202
  3348   001364                     l1746:
  3349   001364  5046               	movf	placeChar@y^0,w,c
  3350                           
  3351                           ; Switch size 1, requested type "simple"
  3352                           ; Number of cases is 8, Range of values is 0 to 7
  3353                           ; switch strategies available:
  3354                           ; Name         Instructions Cycles
  3355                           ; simple_byte           25    13 (average)
  3356                           ;	Chosen strategy is simple_byte
  3357   001366  0A00               	xorlw	0	; case 0
  3358   001368  B4D8               	btfsc	status,2,c
  3359   00136A  EF72  F009         	goto	l1728
  3360   00136E  0A01               	xorlw	1	; case 1
  3361   001370  B4D8               	btfsc	status,2,c
  3362   001372  EF7A  F009         	goto	l1730
  3363   001376  0A03               	xorlw	3	; case 2
  3364   001378  B4D8               	btfsc	status,2,c
  3365   00137A  EF82  F009         	goto	l1732
  3366   00137E  0A01               	xorlw	1	; case 3
  3367   001380  B4D8               	btfsc	status,2,c
  3368   001382  EF8A  F009         	goto	l1734
  3369   001386  0A07               	xorlw	7	; case 4
  3370   001388  B4D8               	btfsc	status,2,c
  3371   00138A  EF92  F009         	goto	l1736
  3372   00138E  0A01               	xorlw	1	; case 5
  3373   001390  B4D8               	btfsc	status,2,c
  3374   001392  EF9A  F009         	goto	l1738
  3375   001396  0A03               	xorlw	3	; case 6
  3376   001398  B4D8               	btfsc	status,2,c
  3377   00139A  EFA2  F009         	goto	l1740
  3378   00139E  0A01               	xorlw	1	; case 7
  3379   0013A0  B4D8               	btfsc	status,2,c
  3380   0013A2  EFAA  F009         	goto	l1742
  3381   0013A6  EFD5  F009         	goto	l202
  3382   0013AA                     l202:
  3383   0013AA  0012               	return		;funcret
  3384   0013AC                     __end_of_placeChar:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _displaySpeed *****************
  3388 ;; Defined at:
  3389 ;;		line 40 in file "Pls.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1
  3403 ;;      Params:         0       0       0
  3404 ;;      Locals:         0       0       0
  3405 ;;      Temps:          0       0       0
  3406 ;;      Totals:         0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 3
  3410 ;; This function calls:
  3411 ;;		_LCD_GraphicsDisplayString
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text12
  3418   0010DA                     __ptext12:
  3419                           	callstack 0
  3420   0010DA                     _displaySpeed:
  3421                           	callstack 27
  3422   0010DA                     
  3423                           ;Pls.c: 41:     switch(speed){
  3424   0010DA  EFA5  F008         	goto	l1886
  3425   0010DE                     l1872:
  3426                           
  3427                           ;Pls.c: 43:              LCD_GraphicsDisplayString(6,"Speed: 0");
  3428   0010DE  0EC9               	movlw	low STR_1
  3429   0010E0  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3430   0010E2  0E1F               	movlw	high STR_1
  3431   0010E4  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3432   0010E6  0E06               	movlw	6
  3433   0010E8  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3434                           
  3435                           ;Pls.c: 44:              break;
  3436   0010EC  EFC0  F008         	goto	l171
  3437   0010F0                     l1874:
  3438                           
  3439                           ;Pls.c: 46:              LCD_GraphicsDisplayString(6,"Speed: 1");
  3440   0010F0  0ED2               	movlw	low STR_2
  3441   0010F2  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3442   0010F4  0E1F               	movlw	high STR_2
  3443   0010F6  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3444   0010F8  0E06               	movlw	6
  3445   0010FA  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3446                           
  3447                           ;Pls.c: 47:              break;
  3448   0010FE  EFC0  F008         	goto	l171
  3449   001102                     l1876:
  3450                           
  3451                           ;Pls.c: 49:              LCD_GraphicsDisplayString(6,"Speed: 2");
  3452   001102  0EDB               	movlw	low STR_3
  3453   001104  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3454   001106  0E1F               	movlw	high STR_3
  3455   001108  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3456   00110A  0E06               	movlw	6
  3457   00110C  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3458                           
  3459                           ;Pls.c: 50:              break;
  3460   001110  EFC0  F008         	goto	l171
  3461   001114                     l1878:
  3462                           
  3463                           ;Pls.c: 52:              LCD_GraphicsDisplayString(6,"Speed: 3");
  3464   001114  0EE4               	movlw	low STR_4
  3465   001116  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3466   001118  0E1F               	movlw	high STR_4
  3467   00111A  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3468   00111C  0E06               	movlw	6
  3469   00111E  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3470                           
  3471                           ;Pls.c: 53:              break;
  3472   001122  EFC0  F008         	goto	l171
  3473   001126                     l1880:
  3474                           
  3475                           ;Pls.c: 55:              LCD_GraphicsDisplayString(6,"Speed: 4");
  3476   001126  0EED               	movlw	low STR_5
  3477   001128  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3478   00112A  0E1F               	movlw	high STR_5
  3479   00112C  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3480   00112E  0E06               	movlw	6
  3481   001130  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3482                           
  3483                           ;Pls.c: 56:              break;
  3484   001134  EFC0  F008         	goto	l171
  3485   001138                     l1882:
  3486                           
  3487                           ;Pls.c: 58:              LCD_GraphicsDisplayString(6,"Speed: 5");
  3488   001138  0EF6               	movlw	low STR_6
  3489   00113A  6E4A               	movwf	LCD_GraphicsDisplayString@str^0,c
  3490   00113C  0E1F               	movlw	high STR_6
  3491   00113E  6E4B               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3492   001140  0E06               	movlw	6
  3493   001142  EC4F  F00C         	call	_LCD_GraphicsDisplayString
  3494                           
  3495                           ;Pls.c: 59:              break;
  3496   001146  EFC0  F008         	goto	l171
  3497   00114A                     l1886:
  3498   00114A  5071               	movf	_speed^0,w,c
  3499                           
  3500                           ; Switch size 1, requested type "simple"
  3501                           ; Number of cases is 6, Range of values is 0 to 5
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte           19    10 (average)
  3505                           ;	Chosen strategy is simple_byte
  3506   00114C  0A00               	xorlw	0	; case 0
  3507   00114E  B4D8               	btfsc	status,2,c
  3508   001150  EF6F  F008         	goto	l1872
  3509   001154  0A01               	xorlw	1	; case 1
  3510   001156  B4D8               	btfsc	status,2,c
  3511   001158  EF78  F008         	goto	l1874
  3512   00115C  0A03               	xorlw	3	; case 2
  3513   00115E  B4D8               	btfsc	status,2,c
  3514   001160  EF81  F008         	goto	l1876
  3515   001164  0A01               	xorlw	1	; case 3
  3516   001166  B4D8               	btfsc	status,2,c
  3517   001168  EF8A  F008         	goto	l1878
  3518   00116C  0A07               	xorlw	7	; case 4
  3519   00116E  B4D8               	btfsc	status,2,c
  3520   001170  EF93  F008         	goto	l1880
  3521   001174  0A01               	xorlw	1	; case 5
  3522   001176  B4D8               	btfsc	status,2,c
  3523   001178  EF9C  F008         	goto	l1882
  3524   00117C  EFC0  F008         	goto	l171
  3525   001180                     l171:
  3526   001180  0012               	return		;funcret
  3527   001182                     __end_of_displaySpeed:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _LCD_GraphicsDisplayString *****************
  3531 ;; Defined at:
  3532 ;;		line 100 in file "12864_lcd.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  line            1    wreg     unsigned char 
  3535 ;;  str             2    4[COMRAM] PTR unsigned char 
  3536 ;;		 -> STR_15(12), STR_14(15), STR_13(16), STR_12(17), 
  3537 ;;		 -> STR_11(16), STR_10(17), STR_9(17), STR_8(17), 
  3538 ;;		 -> STR_7(17), LCDStore7(17), LCDStore6(17), LCDStore5(17), 
  3539 ;;		 -> LCDStore4(17), LCDStore3(17), LCDStore2(17), LCDStore1(17), 
  3540 ;;		 -> LCDStore0(17), STR_6(9), STR_5(9), STR_4(9), 
  3541 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  line            1   27[COMRAM] unsigned char 
  3544 ;;  dataB           1   26[COMRAM] unsigned char 
  3545 ;;  dataA           1   25[COMRAM] unsigned char 
  3546 ;;  colListB        5   19[COMRAM] unsigned char [5]
  3547 ;;  colListA        5   14[COMRAM] unsigned char [5]
  3548 ;;  indB            1   33[COMRAM] unsigned char 
  3549 ;;  indA            1   32[COMRAM] unsigned char 
  3550 ;;  letterB         1   29[COMRAM] unsigned char 
  3551 ;;  letterA         1   28[COMRAM] unsigned char 
  3552 ;;  colInd          1   31[COMRAM] unsigned char 
  3553 ;;  row             1   30[COMRAM] unsigned char 
  3554 ;;  count           1   24[COMRAM] unsigned char 
  3555 ;;  shouldContin    1   13[COMRAM] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1
  3565 ;;      Params:         2       0       0
  3566 ;;      Locals:        25       0       0
  3567 ;;      Temps:          3       0       0
  3568 ;;      Totals:        30       0       0
  3569 ;;Total ram usage:       30 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 2
  3572 ;; This function calls:
  3573 ;;		_LCD_WriteCommand
  3574 ;;		_LCD_WriteData
  3575 ;; This function is called by:
  3576 ;;		_displaySpeed
  3577 ;;		_drawGraphics
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text13
  3583   00189E                     __ptext13:
  3584                           	callstack 0
  3585   00189E                     _LCD_GraphicsDisplayString:
  3586                           	callstack 26
  3587                           
  3588                           ;incstack = 0
  3589                           ;LCD_GraphicsDisplayString@line stored from wreg
  3590   00189E  6E61               	movwf	LCD_GraphicsDisplayString@line^0,c
  3591   0018A0  0E01               	movlw	1
  3592   0018A2  6E53               	movwf	LCD_GraphicsDisplayString@shouldContinue^0,c
  3593   0018A4  6A5E               	clrf	LCD_GraphicsDisplayString@count^0,c
  3594   0018A6  EF93  F00E         	goto	l1716
  3595   0018AA                     l1620:
  3596   0018AA  C04A  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  3597   0018AE  C04B  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  3598   0018B2  6AF8               	clrf	tblptru,c
  3599   0018B4  0E01               	movlw	(high __ramtop+-1)
  3600   0018B6  64F7               	cpfsgt	tblptrh,c
  3601   0018B8  D003               	bra	u857
  3602   0018BA  0008               	tblrd		*
  3603   0018BC  50F5               	movf	tablat,w,c
  3604   0018BE  D005               	bra	u850
  3605   0018C0                     u857:
  3606   0018C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3607   0018C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3608   0018C8  50EF               	movf	indf0,w,c
  3609   0018CA                     u850:
  3610   0018CA  6E62               	movwf	LCD_GraphicsDisplayString@letterA^0,c
  3611   0018CC  4A4A               	infsnz	LCD_GraphicsDisplayString@str^0,f,c
  3612   0018CE  2A4B               	incf	(LCD_GraphicsDisplayString@str+1)^0,f,c
  3613   0018D0  5062               	movf	LCD_GraphicsDisplayString@letterA^0,w,c
  3614   0018D2  A4D8               	btfss	status,2,c
  3615   0018D4  EF6E  F00C         	goto	u861
  3616   0018D8  EF70  F00C         	goto	u860
  3617   0018DC                     u861:
  3618   0018DC  EF73  F00C         	goto	l1630
  3619   0018E0                     u860:
  3620   0018E0  0E20               	movlw	32
  3621   0018E2  6E62               	movwf	LCD_GraphicsDisplayString@letterA^0,c
  3622   0018E4  6A53               	clrf	LCD_GraphicsDisplayString@shouldContinue^0,c
  3623   0018E6                     l1630:
  3624   0018E6  C04A  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  3625   0018EA  C04B  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  3626   0018EE  6AF8               	clrf	tblptru,c
  3627   0018F0  0E01               	movlw	(high __ramtop+-1)
  3628   0018F2  64F7               	cpfsgt	tblptrh,c
  3629   0018F4  D003               	bra	u877
  3630   0018F6  0008               	tblrd		*
  3631   0018F8  50F5               	movf	tablat,w,c
  3632   0018FA  D005               	bra	u870
  3633   0018FC                     u877:
  3634   0018FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3635   001900  CFF7 FFEA          	movff	tblptrh,fsr0h
  3636   001904  50EF               	movf	indf0,w,c
  3637   001906                     u870:
  3638   001906  6E63               	movwf	LCD_GraphicsDisplayString@letterB^0,c
  3639   001908  4A4A               	infsnz	LCD_GraphicsDisplayString@str^0,f,c
  3640   00190A  2A4B               	incf	(LCD_GraphicsDisplayString@str+1)^0,f,c
  3641   00190C  5063               	movf	LCD_GraphicsDisplayString@letterB^0,w,c
  3642   00190E  A4D8               	btfss	status,2,c
  3643   001910  EF8C  F00C         	goto	u881
  3644   001914  EF8E  F00C         	goto	u880
  3645   001918                     u881:
  3646   001918  EF91  F00C         	goto	l1640
  3647   00191C                     u880:
  3648   00191C  0E20               	movlw	32
  3649   00191E  6E63               	movwf	LCD_GraphicsDisplayString@letterB^0,c
  3650   001920  6A53               	clrf	LCD_GraphicsDisplayString@shouldContinue^0,c
  3651   001922                     l1640:
  3652   001922  0E51               	movlw	81
  3653   001924  6462               	cpfsgt	LCD_GraphicsDisplayString@letterA^0,c
  3654   001926  EF97  F00C         	goto	u891
  3655   00192A  EF99  F00C         	goto	u890
  3656   00192E                     u891:
  3657   00192E  EFA1  F00C         	goto	l1644
  3658   001932                     u890:
  3659   001932  0EAE               	movlw	174
  3660   001934  2462               	addwf	LCD_GraphicsDisplayString@letterA^0,w,c
  3661   001936  6E4F               	movwf	_LCD_GraphicsDisplayString$113^0,c
  3662   001938  6A50               	clrf	(_LCD_GraphicsDisplayString$113+1)^0,c
  3663   00193A  0EFF               	movlw	255
  3664   00193C  2250               	addwfc	(_LCD_GraphicsDisplayString$113+1)^0,f,c
  3665   00193E  EFA7  F00C         	goto	l1646
  3666   001942                     l1644:
  3667   001942  0EE0               	movlw	224
  3668   001944  2462               	addwf	LCD_GraphicsDisplayString@letterA^0,w,c
  3669   001946  6E4F               	movwf	_LCD_GraphicsDisplayString$113^0,c
  3670   001948  6A50               	clrf	(_LCD_GraphicsDisplayString$113+1)^0,c
  3671   00194A  0EFF               	movlw	255
  3672   00194C  2250               	addwfc	(_LCD_GraphicsDisplayString$113+1)^0,f,c
  3673   00194E                     l1646:
  3674   00194E  C04F  F066         	movff	_LCD_GraphicsDisplayString$113,LCD_GraphicsDisplayString@indA
  3675   001952  0E51               	movlw	81
  3676   001954  6463               	cpfsgt	LCD_GraphicsDisplayString@letterB^0,c
  3677   001956  EFAF  F00C         	goto	u901
  3678   00195A  EFB1  F00C         	goto	u900
  3679   00195E                     u901:
  3680   00195E  EFB9  F00C         	goto	l1650
  3681   001962                     u900:
  3682   001962  0EAE               	movlw	174
  3683   001964  2463               	addwf	LCD_GraphicsDisplayString@letterB^0,w,c
  3684   001966  6E51               	movwf	_LCD_GraphicsDisplayString$115^0,c
  3685   001968  6A52               	clrf	(_LCD_GraphicsDisplayString$115+1)^0,c
  3686   00196A  0EFF               	movlw	255
  3687   00196C  2252               	addwfc	(_LCD_GraphicsDisplayString$115+1)^0,f,c
  3688   00196E  EFBF  F00C         	goto	l1652
  3689   001972                     l1650:
  3690   001972  0EE0               	movlw	224
  3691   001974  2463               	addwf	LCD_GraphicsDisplayString@letterB^0,w,c
  3692   001976  6E51               	movwf	_LCD_GraphicsDisplayString$115^0,c
  3693   001978  6A52               	clrf	(_LCD_GraphicsDisplayString$115+1)^0,c
  3694   00197A  0EFF               	movlw	255
  3695   00197C  2252               	addwfc	(_LCD_GraphicsDisplayString$115+1)^0,f,c
  3696   00197E                     l1652:
  3697   00197E  C051  F067         	movff	_LCD_GraphicsDisplayString$115,LCD_GraphicsDisplayString@indB
  3698   001982  0E52               	movlw	82
  3699   001984  6062               	cpfslt	LCD_GraphicsDisplayString@letterA^0,c
  3700   001986  EFC7  F00C         	goto	u911
  3701   00198A  EFC9  F00C         	goto	u910
  3702   00198E                     u911:
  3703   00198E  EF12  F00D         	goto	l1656
  3704   001992                     u910:
  3705   001992  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3706   001994  0D05               	mullw	5
  3707   001996  0E69               	movlw	low _Alpha1
  3708   001998  24F3               	addwf	243,w,c
  3709   00199A  6EF6               	movwf	tblptrl,c
  3710   00199C  0E1D               	movlw	high _Alpha1
  3711   00199E  20F4               	addwfc	244,w,c
  3712   0019A0  6EF7               	movwf	tblptrh,c
  3713   0019A2                     	if	0	;There are less than 3 active tblptr bytes
  3714   0019A2                     	endif
  3715   0019A2  0008               	tblrd		*
  3716   0019A4  CFF5 F058          	movff	tablat,LCD_GraphicsDisplayString@colListA+4
  3717   0019A8  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3718   0019AA  0D05               	mullw	5
  3719   0019AC  0E01               	movlw	1
  3720   0019AE  26F3               	addwf	243,f,c
  3721   0019B0  0E00               	movlw	0
  3722   0019B2  22F4               	addwfc	244,f,c
  3723   0019B4  0E69               	movlw	low _Alpha1
  3724   0019B6  24F3               	addwf	243,w,c
  3725   0019B8  6EF6               	movwf	tblptrl,c
  3726   0019BA  0E1D               	movlw	high _Alpha1
  3727   0019BC  20F4               	addwfc	244,w,c
  3728   0019BE  6EF7               	movwf	tblptrh,c
  3729   0019C0                     	if	0	;There are less than 3 active tblptr bytes
  3730   0019C0                     	endif
  3731   0019C0  0008               	tblrd		*
  3732   0019C2  CFF5 F057          	movff	tablat,LCD_GraphicsDisplayString@colListA+3
  3733   0019C6  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3734   0019C8  0D05               	mullw	5
  3735   0019CA  0E02               	movlw	2
  3736   0019CC  26F3               	addwf	243,f,c
  3737   0019CE  0E00               	movlw	0
  3738   0019D0  22F4               	addwfc	244,f,c
  3739   0019D2  0E69               	movlw	low _Alpha1
  3740   0019D4  24F3               	addwf	243,w,c
  3741   0019D6  6EF6               	movwf	tblptrl,c
  3742   0019D8  0E1D               	movlw	high _Alpha1
  3743   0019DA  20F4               	addwfc	244,w,c
  3744   0019DC  6EF7               	movwf	tblptrh,c
  3745   0019DE                     	if	0	;There are less than 3 active tblptr bytes
  3746   0019DE                     	endif
  3747   0019DE  0008               	tblrd		*
  3748   0019E0  CFF5 F056          	movff	tablat,LCD_GraphicsDisplayString@colListA+2
  3749   0019E4  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3750   0019E6  0D05               	mullw	5
  3751   0019E8  0E03               	movlw	3
  3752   0019EA  26F3               	addwf	243,f,c
  3753   0019EC  0E00               	movlw	0
  3754   0019EE  22F4               	addwfc	244,f,c
  3755   0019F0  0E69               	movlw	low _Alpha1
  3756   0019F2  24F3               	addwf	243,w,c
  3757   0019F4  6EF6               	movwf	tblptrl,c
  3758   0019F6  0E1D               	movlw	high _Alpha1
  3759   0019F8  20F4               	addwfc	244,w,c
  3760   0019FA  6EF7               	movwf	tblptrh,c
  3761   0019FC                     	if	0	;There are less than 3 active tblptr bytes
  3762   0019FC                     	endif
  3763   0019FC  0008               	tblrd		*
  3764   0019FE  CFF5 F055          	movff	tablat,LCD_GraphicsDisplayString@colListA+1
  3765   001A02  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3766   001A04  0D05               	mullw	5
  3767   001A06  0E04               	movlw	4
  3768   001A08  26F3               	addwf	243,f,c
  3769   001A0A  0E00               	movlw	0
  3770   001A0C  22F4               	addwfc	244,f,c
  3771   001A0E  0E69               	movlw	low _Alpha1
  3772   001A10  24F3               	addwf	243,w,c
  3773   001A12  6EF6               	movwf	tblptrl,c
  3774   001A14  0E1D               	movlw	high _Alpha1
  3775   001A16  20F4               	addwfc	244,w,c
  3776   001A18  6EF7               	movwf	tblptrh,c
  3777   001A1A                     	if	0	;There are less than 3 active tblptr bytes
  3778   001A1A                     	endif
  3779   001A1A  0008               	tblrd		*
  3780   001A1C  CFF5 F054          	movff	tablat,LCD_GraphicsDisplayString@colListA
  3781   001A20  EF59  F00D         	goto	l1658
  3782   001A24                     l1656:
  3783   001A24  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3784   001A26  0D05               	mullw	5
  3785   001A28  0E63               	movlw	low _Alpha2
  3786   001A2A  24F3               	addwf	243,w,c
  3787   001A2C  6EF6               	movwf	tblptrl,c
  3788   001A2E  0E1E               	movlw	high _Alpha2
  3789   001A30  20F4               	addwfc	244,w,c
  3790   001A32  6EF7               	movwf	tblptrh,c
  3791   001A34                     	if	0	;There are less than 3 active tblptr bytes
  3792   001A34                     	endif
  3793   001A34  0008               	tblrd		*
  3794   001A36  CFF5 F058          	movff	tablat,LCD_GraphicsDisplayString@colListA+4
  3795   001A3A  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3796   001A3C  0D05               	mullw	5
  3797   001A3E  0E01               	movlw	1
  3798   001A40  26F3               	addwf	243,f,c
  3799   001A42  0E00               	movlw	0
  3800   001A44  22F4               	addwfc	244,f,c
  3801   001A46  0E63               	movlw	low _Alpha2
  3802   001A48  24F3               	addwf	243,w,c
  3803   001A4A  6EF6               	movwf	tblptrl,c
  3804   001A4C  0E1E               	movlw	high _Alpha2
  3805   001A4E  20F4               	addwfc	244,w,c
  3806   001A50  6EF7               	movwf	tblptrh,c
  3807   001A52                     	if	0	;There are less than 3 active tblptr bytes
  3808   001A52                     	endif
  3809   001A52  0008               	tblrd		*
  3810   001A54  CFF5 F057          	movff	tablat,LCD_GraphicsDisplayString@colListA+3
  3811   001A58  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3812   001A5A  0D05               	mullw	5
  3813   001A5C  0E02               	movlw	2
  3814   001A5E  26F3               	addwf	243,f,c
  3815   001A60  0E00               	movlw	0
  3816   001A62  22F4               	addwfc	244,f,c
  3817   001A64  0E63               	movlw	low _Alpha2
  3818   001A66  24F3               	addwf	243,w,c
  3819   001A68  6EF6               	movwf	tblptrl,c
  3820   001A6A  0E1E               	movlw	high _Alpha2
  3821   001A6C  20F4               	addwfc	244,w,c
  3822   001A6E  6EF7               	movwf	tblptrh,c
  3823   001A70                     	if	0	;There are less than 3 active tblptr bytes
  3824   001A70                     	endif
  3825   001A70  0008               	tblrd		*
  3826   001A72  CFF5 F056          	movff	tablat,LCD_GraphicsDisplayString@colListA+2
  3827   001A76  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3828   001A78  0D05               	mullw	5
  3829   001A7A  0E03               	movlw	3
  3830   001A7C  26F3               	addwf	243,f,c
  3831   001A7E  0E00               	movlw	0
  3832   001A80  22F4               	addwfc	244,f,c
  3833   001A82  0E63               	movlw	low _Alpha2
  3834   001A84  24F3               	addwf	243,w,c
  3835   001A86  6EF6               	movwf	tblptrl,c
  3836   001A88  0E1E               	movlw	high _Alpha2
  3837   001A8A  20F4               	addwfc	244,w,c
  3838   001A8C  6EF7               	movwf	tblptrh,c
  3839   001A8E                     	if	0	;There are less than 3 active tblptr bytes
  3840   001A8E                     	endif
  3841   001A8E  0008               	tblrd		*
  3842   001A90  CFF5 F055          	movff	tablat,LCD_GraphicsDisplayString@colListA+1
  3843   001A94  5066               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3844   001A96  0D05               	mullw	5
  3845   001A98  0E04               	movlw	4
  3846   001A9A  26F3               	addwf	243,f,c
  3847   001A9C  0E00               	movlw	0
  3848   001A9E  22F4               	addwfc	244,f,c
  3849   001AA0  0E63               	movlw	low _Alpha2
  3850   001AA2  24F3               	addwf	243,w,c
  3851   001AA4  6EF6               	movwf	tblptrl,c
  3852   001AA6  0E1E               	movlw	high _Alpha2
  3853   001AA8  20F4               	addwfc	244,w,c
  3854   001AAA  6EF7               	movwf	tblptrh,c
  3855   001AAC                     	if	0	;There are less than 3 active tblptr bytes
  3856   001AAC                     	endif
  3857   001AAC  0008               	tblrd		*
  3858   001AAE  CFF5 F054          	movff	tablat,LCD_GraphicsDisplayString@colListA
  3859   001AB2                     l1658:
  3860   001AB2  0E52               	movlw	82
  3861   001AB4  6063               	cpfslt	LCD_GraphicsDisplayString@letterB^0,c
  3862   001AB6  EF5F  F00D         	goto	u921
  3863   001ABA  EF61  F00D         	goto	u920
  3864   001ABE                     u921:
  3865   001ABE  EFAA  F00D         	goto	l1662
  3866   001AC2                     u920:
  3867   001AC2  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3868   001AC4  0D05               	mullw	5
  3869   001AC6  0E69               	movlw	low _Alpha1
  3870   001AC8  24F3               	addwf	243,w,c
  3871   001ACA  6EF6               	movwf	tblptrl,c
  3872   001ACC  0E1D               	movlw	high _Alpha1
  3873   001ACE  20F4               	addwfc	244,w,c
  3874   001AD0  6EF7               	movwf	tblptrh,c
  3875   001AD2                     	if	0	;There are less than 3 active tblptr bytes
  3876   001AD2                     	endif
  3877   001AD2  0008               	tblrd		*
  3878   001AD4  CFF5 F05D          	movff	tablat,LCD_GraphicsDisplayString@colListB+4
  3879   001AD8  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3880   001ADA  0D05               	mullw	5
  3881   001ADC  0E01               	movlw	1
  3882   001ADE  26F3               	addwf	243,f,c
  3883   001AE0  0E00               	movlw	0
  3884   001AE2  22F4               	addwfc	244,f,c
  3885   001AE4  0E69               	movlw	low _Alpha1
  3886   001AE6  24F3               	addwf	243,w,c
  3887   001AE8  6EF6               	movwf	tblptrl,c
  3888   001AEA  0E1D               	movlw	high _Alpha1
  3889   001AEC  20F4               	addwfc	244,w,c
  3890   001AEE  6EF7               	movwf	tblptrh,c
  3891   001AF0                     	if	0	;There are less than 3 active tblptr bytes
  3892   001AF0                     	endif
  3893   001AF0  0008               	tblrd		*
  3894   001AF2  CFF5 F05C          	movff	tablat,LCD_GraphicsDisplayString@colListB+3
  3895   001AF6  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3896   001AF8  0D05               	mullw	5
  3897   001AFA  0E02               	movlw	2
  3898   001AFC  26F3               	addwf	243,f,c
  3899   001AFE  0E00               	movlw	0
  3900   001B00  22F4               	addwfc	244,f,c
  3901   001B02  0E69               	movlw	low _Alpha1
  3902   001B04  24F3               	addwf	243,w,c
  3903   001B06  6EF6               	movwf	tblptrl,c
  3904   001B08  0E1D               	movlw	high _Alpha1
  3905   001B0A  20F4               	addwfc	244,w,c
  3906   001B0C  6EF7               	movwf	tblptrh,c
  3907   001B0E                     	if	0	;There are less than 3 active tblptr bytes
  3908   001B0E                     	endif
  3909   001B0E  0008               	tblrd		*
  3910   001B10  CFF5 F05B          	movff	tablat,LCD_GraphicsDisplayString@colListB+2
  3911   001B14  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3912   001B16  0D05               	mullw	5
  3913   001B18  0E03               	movlw	3
  3914   001B1A  26F3               	addwf	243,f,c
  3915   001B1C  0E00               	movlw	0
  3916   001B1E  22F4               	addwfc	244,f,c
  3917   001B20  0E69               	movlw	low _Alpha1
  3918   001B22  24F3               	addwf	243,w,c
  3919   001B24  6EF6               	movwf	tblptrl,c
  3920   001B26  0E1D               	movlw	high _Alpha1
  3921   001B28  20F4               	addwfc	244,w,c
  3922   001B2A  6EF7               	movwf	tblptrh,c
  3923   001B2C                     	if	0	;There are less than 3 active tblptr bytes
  3924   001B2C                     	endif
  3925   001B2C  0008               	tblrd		*
  3926   001B2E  CFF5 F05A          	movff	tablat,LCD_GraphicsDisplayString@colListB+1
  3927   001B32  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3928   001B34  0D05               	mullw	5
  3929   001B36  0E04               	movlw	4
  3930   001B38  26F3               	addwf	243,f,c
  3931   001B3A  0E00               	movlw	0
  3932   001B3C  22F4               	addwfc	244,f,c
  3933   001B3E  0E69               	movlw	low _Alpha1
  3934   001B40  24F3               	addwf	243,w,c
  3935   001B42  6EF6               	movwf	tblptrl,c
  3936   001B44  0E1D               	movlw	high _Alpha1
  3937   001B46  20F4               	addwfc	244,w,c
  3938   001B48  6EF7               	movwf	tblptrh,c
  3939   001B4A                     	if	0	;There are less than 3 active tblptr bytes
  3940   001B4A                     	endif
  3941   001B4A  0008               	tblrd		*
  3942   001B4C  CFF5 F059          	movff	tablat,LCD_GraphicsDisplayString@colListB
  3943   001B50  EFF1  F00D         	goto	l1664
  3944   001B54                     l1662:
  3945   001B54  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3946   001B56  0D05               	mullw	5
  3947   001B58  0E63               	movlw	low _Alpha2
  3948   001B5A  24F3               	addwf	243,w,c
  3949   001B5C  6EF6               	movwf	tblptrl,c
  3950   001B5E  0E1E               	movlw	high _Alpha2
  3951   001B60  20F4               	addwfc	244,w,c
  3952   001B62  6EF7               	movwf	tblptrh,c
  3953   001B64                     	if	0	;There are less than 3 active tblptr bytes
  3954   001B64                     	endif
  3955   001B64  0008               	tblrd		*
  3956   001B66  CFF5 F05D          	movff	tablat,LCD_GraphicsDisplayString@colListB+4
  3957   001B6A  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3958   001B6C  0D05               	mullw	5
  3959   001B6E  0E01               	movlw	1
  3960   001B70  26F3               	addwf	243,f,c
  3961   001B72  0E00               	movlw	0
  3962   001B74  22F4               	addwfc	244,f,c
  3963   001B76  0E63               	movlw	low _Alpha2
  3964   001B78  24F3               	addwf	243,w,c
  3965   001B7A  6EF6               	movwf	tblptrl,c
  3966   001B7C  0E1E               	movlw	high _Alpha2
  3967   001B7E  20F4               	addwfc	244,w,c
  3968   001B80  6EF7               	movwf	tblptrh,c
  3969   001B82                     	if	0	;There are less than 3 active tblptr bytes
  3970   001B82                     	endif
  3971   001B82  0008               	tblrd		*
  3972   001B84  CFF5 F05C          	movff	tablat,LCD_GraphicsDisplayString@colListB+3
  3973   001B88  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3974   001B8A  0D05               	mullw	5
  3975   001B8C  0E02               	movlw	2
  3976   001B8E  26F3               	addwf	243,f,c
  3977   001B90  0E00               	movlw	0
  3978   001B92  22F4               	addwfc	244,f,c
  3979   001B94  0E63               	movlw	low _Alpha2
  3980   001B96  24F3               	addwf	243,w,c
  3981   001B98  6EF6               	movwf	tblptrl,c
  3982   001B9A  0E1E               	movlw	high _Alpha2
  3983   001B9C  20F4               	addwfc	244,w,c
  3984   001B9E  6EF7               	movwf	tblptrh,c
  3985   001BA0                     	if	0	;There are less than 3 active tblptr bytes
  3986   001BA0                     	endif
  3987   001BA0  0008               	tblrd		*
  3988   001BA2  CFF5 F05B          	movff	tablat,LCD_GraphicsDisplayString@colListB+2
  3989   001BA6  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  3990   001BA8  0D05               	mullw	5
  3991   001BAA  0E03               	movlw	3
  3992   001BAC  26F3               	addwf	243,f,c
  3993   001BAE  0E00               	movlw	0
  3994   001BB0  22F4               	addwfc	244,f,c
  3995   001BB2  0E63               	movlw	low _Alpha2
  3996   001BB4  24F3               	addwf	243,w,c
  3997   001BB6  6EF6               	movwf	tblptrl,c
  3998   001BB8  0E1E               	movlw	high _Alpha2
  3999   001BBA  20F4               	addwfc	244,w,c
  4000   001BBC  6EF7               	movwf	tblptrh,c
  4001   001BBE                     	if	0	;There are less than 3 active tblptr bytes
  4002   001BBE                     	endif
  4003   001BBE  0008               	tblrd		*
  4004   001BC0  CFF5 F05A          	movff	tablat,LCD_GraphicsDisplayString@colListB+1
  4005   001BC4  5067               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4006   001BC6  0D05               	mullw	5
  4007   001BC8  0E04               	movlw	4
  4008   001BCA  26F3               	addwf	243,f,c
  4009   001BCC  0E00               	movlw	0
  4010   001BCE  22F4               	addwfc	244,f,c
  4011   001BD0  0E63               	movlw	low _Alpha2
  4012   001BD2  24F3               	addwf	243,w,c
  4013   001BD4  6EF6               	movwf	tblptrl,c
  4014   001BD6  0E1E               	movlw	high _Alpha2
  4015   001BD8  20F4               	addwfc	244,w,c
  4016   001BDA  6EF7               	movwf	tblptrh,c
  4017   001BDC                     	if	0	;There are less than 3 active tblptr bytes
  4018   001BDC                     	endif
  4019   001BDC  0008               	tblrd		*
  4020   001BDE  CFF5 F059          	movff	tablat,LCD_GraphicsDisplayString@colListB
  4021   001BE2                     l1664:
  4022   001BE2  6A64               	clrf	LCD_GraphicsDisplayString@row^0,c
  4023   001BE4                     l1670:
  4024   001BE4  0E04               	movlw	4
  4025   001BE6  6061               	cpfslt	LCD_GraphicsDisplayString@line^0,c
  4026   001BE8  EFF8  F00D         	goto	u931
  4027   001BEC  EFFA  F00D         	goto	u930
  4028   001BF0                     u931:
  4029   001BF0  EF07  F00E         	goto	l1676
  4030   001BF4                     u930:
  4031   001BF4  5061               	movf	LCD_GraphicsDisplayString@line^0,w,c
  4032   001BF6  0D08               	mullw	8
  4033   001BF8  50F3               	movf	243,w,c
  4034   001BFA  2464               	addwf	LCD_GraphicsDisplayString@row^0,w,c
  4035   001BFC  0980               	iorlw	128
  4036   001BFE  EC03  F006         	call	_LCD_WriteCommand
  4037   001C02  505E               	movf	LCD_GraphicsDisplayString@count^0,w,c
  4038   001C04  0980               	iorlw	128
  4039   001C06  EC03  F006         	call	_LCD_WriteCommand
  4040   001C0A  EF13  F00E         	goto	l1680
  4041   001C0E                     l1676:
  4042   001C0E  5061               	movf	LCD_GraphicsDisplayString@line^0,w,c
  4043   001C10  0D08               	mullw	8
  4044   001C12  50F3               	movf	243,w,c
  4045   001C14  2464               	addwf	LCD_GraphicsDisplayString@row^0,w,c
  4046   001C16  0FE0               	addlw	224
  4047   001C18  0980               	iorlw	128
  4048   001C1A  EC03  F006         	call	_LCD_WriteCommand
  4049   001C1E  505E               	movf	LCD_GraphicsDisplayString@count^0,w,c
  4050   001C20  0988               	iorlw	136
  4051   001C22  EC03  F006         	call	_LCD_WriteCommand
  4052   001C26                     l1680:
  4053   001C26  6A5F               	clrf	LCD_GraphicsDisplayString@dataA^0,c
  4054   001C28  6A65               	clrf	LCD_GraphicsDisplayString@colInd^0,c
  4055   001C2A                     l1688:
  4056   001C2A  5065               	movf	LCD_GraphicsDisplayString@colInd^0,w,c
  4057   001C2C  0F54               	addlw	low LCD_GraphicsDisplayString@colListA
  4058   001C2E  6ED9               	movwf	fsr2l,c
  4059   001C30  6ADA               	clrf	fsr2h,c
  4060   001C32  50DF               	movf	indf2,w,c
  4061   001C34  6E4C               	movwf	??_LCD_GraphicsDisplayString^0,c
  4062   001C36  C064  F04D         	movff	LCD_GraphicsDisplayString@row,??_LCD_GraphicsDisplayString+1
  4063   001C3A  0E01               	movlw	1
  4064   001C3C  6E4E               	movwf	(??_LCD_GraphicsDisplayString+2)^0,c
  4065   001C3E  2A4D               	incf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4066   001C40  EF24  F00E         	goto	u944
  4067   001C44                     u945:
  4068   001C44  90D8               	bcf	status,0,c
  4069   001C46  364E               	rlcf	(??_LCD_GraphicsDisplayString+2)^0,f,c
  4070   001C48                     u944:
  4071   001C48  2E4D               	decfsz	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4072   001C4A  EF22  F00E         	goto	u945
  4073   001C4E  504E               	movf	(??_LCD_GraphicsDisplayString+2)^0,w,c
  4074   001C50  144C               	andwf	??_LCD_GraphicsDisplayString^0,w,c
  4075   001C52  0900               	iorlw	0
  4076   001C54  B4D8               	btfsc	status,2,c
  4077   001C56  EF2F  F00E         	goto	u951
  4078   001C5A  EF31  F00E         	goto	u950
  4079   001C5E                     u951:
  4080   001C5E  EF42  F00E         	goto	l1692
  4081   001C62                     u950:
  4082   001C62  C065  F04C         	movff	LCD_GraphicsDisplayString@colInd,??_LCD_GraphicsDisplayString
  4083   001C66  0E03               	movlw	3
  4084   001C68  264C               	addwf	??_LCD_GraphicsDisplayString^0,f,c
  4085   001C6A  0E01               	movlw	1
  4086   001C6C  6E4D               	movwf	(??_LCD_GraphicsDisplayString+1)^0,c
  4087   001C6E  2A4C               	incf	??_LCD_GraphicsDisplayString^0,f,c
  4088   001C70  EF3C  F00E         	goto	u964
  4089   001C74                     u965:
  4090   001C74  90D8               	bcf	status,0,c
  4091   001C76  364D               	rlcf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4092   001C78                     u964:
  4093   001C78  2E4C               	decfsz	??_LCD_GraphicsDisplayString^0,f,c
  4094   001C7A  EF3A  F00E         	goto	u965
  4095   001C7E  504D               	movf	(??_LCD_GraphicsDisplayString+1)^0,w,c
  4096   001C80  105F               	iorwf	LCD_GraphicsDisplayString@dataA^0,w,c
  4097   001C82  6E5F               	movwf	LCD_GraphicsDisplayString@dataA^0,c
  4098   001C84                     l1692:
  4099   001C84  2A65               	incf	LCD_GraphicsDisplayString@colInd^0,f,c
  4100   001C86  0E04               	movlw	4
  4101   001C88  6465               	cpfsgt	LCD_GraphicsDisplayString@colInd^0,c
  4102   001C8A  EF49  F00E         	goto	u971
  4103   001C8E  EF4B  F00E         	goto	u970
  4104   001C92                     u971:
  4105   001C92  EF15  F00E         	goto	l1688
  4106   001C96                     u970:
  4107   001C96  6A60               	clrf	LCD_GraphicsDisplayString@dataB^0,c
  4108   001C98  6A65               	clrf	LCD_GraphicsDisplayString@colInd^0,c
  4109   001C9A                     l1700:
  4110   001C9A  5065               	movf	LCD_GraphicsDisplayString@colInd^0,w,c
  4111   001C9C  0F59               	addlw	low LCD_GraphicsDisplayString@colListB
  4112   001C9E  6ED9               	movwf	fsr2l,c
  4113   001CA0  6ADA               	clrf	fsr2h,c
  4114   001CA2  50DF               	movf	indf2,w,c
  4115   001CA4  6E4C               	movwf	??_LCD_GraphicsDisplayString^0,c
  4116   001CA6  C064  F04D         	movff	LCD_GraphicsDisplayString@row,??_LCD_GraphicsDisplayString+1
  4117   001CAA  0E01               	movlw	1
  4118   001CAC  6E4E               	movwf	(??_LCD_GraphicsDisplayString+2)^0,c
  4119   001CAE  2A4D               	incf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4120   001CB0  EF5C  F00E         	goto	u984
  4121   001CB4                     u985:
  4122   001CB4  90D8               	bcf	status,0,c
  4123   001CB6  364E               	rlcf	(??_LCD_GraphicsDisplayString+2)^0,f,c
  4124   001CB8                     u984:
  4125   001CB8  2E4D               	decfsz	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4126   001CBA  EF5A  F00E         	goto	u985
  4127   001CBE  504E               	movf	(??_LCD_GraphicsDisplayString+2)^0,w,c
  4128   001CC0  144C               	andwf	??_LCD_GraphicsDisplayString^0,w,c
  4129   001CC2  0900               	iorlw	0
  4130   001CC4  B4D8               	btfsc	status,2,c
  4131   001CC6  EF67  F00E         	goto	u991
  4132   001CCA  EF69  F00E         	goto	u990
  4133   001CCE                     u991:
  4134   001CCE  EF7A  F00E         	goto	l1704
  4135   001CD2                     u990:
  4136   001CD2  C065  F04C         	movff	LCD_GraphicsDisplayString@colInd,??_LCD_GraphicsDisplayString
  4137   001CD6  0E03               	movlw	3
  4138   001CD8  264C               	addwf	??_LCD_GraphicsDisplayString^0,f,c
  4139   001CDA  0E01               	movlw	1
  4140   001CDC  6E4D               	movwf	(??_LCD_GraphicsDisplayString+1)^0,c
  4141   001CDE  2A4C               	incf	??_LCD_GraphicsDisplayString^0,f,c
  4142   001CE0  EF74  F00E         	goto	u1004
  4143   001CE4                     u1005:
  4144   001CE4  90D8               	bcf	status,0,c
  4145   001CE6  364D               	rlcf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4146   001CE8                     u1004:
  4147   001CE8  2E4C               	decfsz	??_LCD_GraphicsDisplayString^0,f,c
  4148   001CEA  EF72  F00E         	goto	u1005
  4149   001CEE  504D               	movf	(??_LCD_GraphicsDisplayString+1)^0,w,c
  4150   001CF0  1060               	iorwf	LCD_GraphicsDisplayString@dataB^0,w,c
  4151   001CF2  6E60               	movwf	LCD_GraphicsDisplayString@dataB^0,c
  4152   001CF4                     l1704:
  4153   001CF4  2A65               	incf	LCD_GraphicsDisplayString@colInd^0,f,c
  4154   001CF6  0E04               	movlw	4
  4155   001CF8  6465               	cpfsgt	LCD_GraphicsDisplayString@colInd^0,c
  4156   001CFA  EF81  F00E         	goto	u1011
  4157   001CFE  EF83  F00E         	goto	u1010
  4158   001D02                     u1011:
  4159   001D02  EF4D  F00E         	goto	l1700
  4160   001D06                     u1010:
  4161   001D06  505F               	movf	LCD_GraphicsDisplayString@dataA^0,w,c
  4162   001D08  EC09  F006         	call	_LCD_WriteData
  4163   001D0C  5060               	movf	LCD_GraphicsDisplayString@dataB^0,w,c
  4164   001D0E  EC09  F006         	call	_LCD_WriteData
  4165   001D12  2A64               	incf	LCD_GraphicsDisplayString@row^0,f,c
  4166   001D14  0E07               	movlw	7
  4167   001D16  6464               	cpfsgt	LCD_GraphicsDisplayString@row^0,c
  4168   001D18  EF90  F00E         	goto	u1021
  4169   001D1C  EF92  F00E         	goto	u1020
  4170   001D20                     u1021:
  4171   001D20  EFF2  F00D         	goto	l1670
  4172   001D24                     u1020:
  4173   001D24  2A5E               	incf	LCD_GraphicsDisplayString@count^0,f,c
  4174   001D26                     l1716:
  4175   001D26  C04A  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  4176   001D2A  C04B  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  4177   001D2E  6AF8               	clrf	tblptru,c
  4178   001D30  0E01               	movlw	(high __ramtop+-1)
  4179   001D32  64F7               	cpfsgt	tblptrh,c
  4180   001D34  D003               	bra	u1037
  4181   001D36  0008               	tblrd		*
  4182   001D38  50F5               	movf	tablat,w,c
  4183   001D3A  D005               	bra	u1030
  4184   001D3C                     u1037:
  4185   001D3C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4186   001D40  CFF7 FFEA          	movff	tblptrh,fsr0h
  4187   001D44  50EF               	movf	indf0,w,c
  4188   001D46                     u1030:
  4189   001D46  0900               	iorlw	0
  4190   001D48  B4D8               	btfsc	status,2,c
  4191   001D4A  EFA9  F00E         	goto	u1041
  4192   001D4E  EFAB  F00E         	goto	u1040
  4193   001D52                     u1041:
  4194   001D52  EFB3  F00E         	goto	l78
  4195   001D56                     u1040:
  4196   001D56  5053               	movf	LCD_GraphicsDisplayString@shouldContinue^0,w,c
  4197   001D58  A4D8               	btfss	status,2,c
  4198   001D5A  EFB1  F00E         	goto	u1051
  4199   001D5E  EFB3  F00E         	goto	u1050
  4200   001D62                     u1051:
  4201   001D62  EF55  F00C         	goto	l1620
  4202   001D66                     u1050:
  4203   001D66                     l78:
  4204   001D66  0012               	return		;funcret
  4205   001D68                     __end_of_LCD_GraphicsDisplayString:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function _LCD_Init *****************
  4209 ;; Defined at:
  4210 ;;		line 8 in file "12864_lcd.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1
  4224 ;;      Params:         0       0       0
  4225 ;;      Locals:         0       0       0
  4226 ;;      Temps:          1       0       0
  4227 ;;      Totals:         1       0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 2
  4231 ;; This function calls:
  4232 ;;		_LCD_WriteCommand
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text14
  4239   00103C                     __ptext14:
  4240                           	callstack 0
  4241   00103C                     _LCD_Init:
  4242                           	callstack 28
  4243   00103C  6A93               	clrf	147,c	;volatile
  4244   00103E  848A               	bsf	138,2,c	;volatile
  4245   001040  948A               	bcf	138,2,c	;volatile
  4246   001042  0E0D               	movlw	13
  4247   001044  6E4A               	movwf	??_LCD_Init^0,c
  4248   001046  0EFC               	movlw	252
  4249   001048                     u1597:
  4250   001048  2EE8               	decfsz	wreg,f,c
  4251   00104A  D7FE               	bra	u1597
  4252   00104C  2E4A               	decfsz	??_LCD_Init^0,f,c
  4253   00104E  D7FC               	bra	u1597
  4254   001050  848A               	bsf	138,2,c	;volatile
  4255   001052  0E82               	movlw	130
  4256   001054  6E4A               	movwf	??_LCD_Init^0,c
  4257   001056  0EDE               	movlw	222
  4258   001058                     u1607:
  4259   001058  2EE8               	decfsz	wreg,f,c
  4260   00105A  D7FE               	bra	u1607
  4261   00105C  2E4A               	decfsz	??_LCD_Init^0,f,c
  4262   00105E  D7FC               	bra	u1607
  4263   001060  0E20               	movlw	32
  4264   001062  EC03  F006         	call	_LCD_WriteCommand
  4265   001066  0E0D               	movlw	13
  4266   001068  6E4A               	movwf	??_LCD_Init^0,c
  4267   00106A  0EFC               	movlw	252
  4268   00106C                     u1617:
  4269   00106C  2EE8               	decfsz	wreg,f,c
  4270   00106E  D7FE               	bra	u1617
  4271   001070  2E4A               	decfsz	??_LCD_Init^0,f,c
  4272   001072  D7FC               	bra	u1617
  4273   001074  0E20               	movlw	32
  4274   001076  EC03  F006         	call	_LCD_WriteCommand
  4275   00107A  0E0D               	movlw	13
  4276   00107C  6E4A               	movwf	??_LCD_Init^0,c
  4277   00107E  0EFC               	movlw	252
  4278   001080                     u1627:
  4279   001080  2EE8               	decfsz	wreg,f,c
  4280   001082  D7FE               	bra	u1627
  4281   001084  2E4A               	decfsz	??_LCD_Init^0,f,c
  4282   001086  D7FC               	bra	u1627
  4283   001088  0E0C               	movlw	12
  4284   00108A  EC03  F006         	call	_LCD_WriteCommand
  4285   00108E  0E0D               	movlw	13
  4286   001090  6E4A               	movwf	??_LCD_Init^0,c
  4287   001092  0EFC               	movlw	252
  4288   001094                     u1637:
  4289   001094  2EE8               	decfsz	wreg,f,c
  4290   001096  D7FE               	bra	u1637
  4291   001098  2E4A               	decfsz	??_LCD_Init^0,f,c
  4292   00109A  D7FC               	bra	u1637
  4293   00109C  0E01               	movlw	1
  4294   00109E  EC03  F006         	call	_LCD_WriteCommand
  4295   0010A2  0E0D               	movlw	13
  4296   0010A4  6E4A               	movwf	??_LCD_Init^0,c
  4297   0010A6  0EFC               	movlw	252
  4298   0010A8                     u1647:
  4299   0010A8  2EE8               	decfsz	wreg,f,c
  4300   0010AA  D7FE               	bra	u1647
  4301   0010AC  2E4A               	decfsz	??_LCD_Init^0,f,c
  4302   0010AE  D7FC               	bra	u1647
  4303   0010B0  0E06               	movlw	6
  4304   0010B2  EC03  F006         	call	_LCD_WriteCommand
  4305   0010B6  0E0D               	movlw	13
  4306   0010B8  6E4A               	movwf	??_LCD_Init^0,c
  4307   0010BA  0EFC               	movlw	252
  4308   0010BC                     u1657:
  4309   0010BC  2EE8               	decfsz	wreg,f,c
  4310   0010BE  D7FE               	bra	u1657
  4311   0010C0  2E4A               	decfsz	??_LCD_Init^0,f,c
  4312   0010C2  D7FC               	bra	u1657
  4313   0010C4  0E02               	movlw	2
  4314   0010C6  EC03  F006         	call	_LCD_WriteCommand
  4315   0010CA  0E0D               	movlw	13
  4316   0010CC  6E4A               	movwf	??_LCD_Init^0,c
  4317   0010CE  0EFC               	movlw	252
  4318   0010D0                     u1667:
  4319   0010D0  2EE8               	decfsz	wreg,f,c
  4320   0010D2  D7FE               	bra	u1667
  4321   0010D4  2E4A               	decfsz	??_LCD_Init^0,f,c
  4322   0010D6  D7FC               	bra	u1667
  4323   0010D8  0012               	return		;funcret
  4324   0010DA                     __end_of_LCD_Init:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _LCD_EnableGraphics *****************
  4328 ;; Defined at:
  4329 ;;		line 55 in file "12864_lcd.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1
  4343 ;;      Params:         0       0       0
  4344 ;;      Locals:         0       0       0
  4345 ;;      Temps:          1       0       0
  4346 ;;      Totals:         1       0       0
  4347 ;;Total ram usage:        1 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 2
  4350 ;; This function calls:
  4351 ;;		_LCD_WriteCommand
  4352 ;; This function is called by:
  4353 ;;		_main
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text15
  4358   000C88                     __ptext15:
  4359                           	callstack 0
  4360   000C88                     _LCD_EnableGraphics:
  4361                           	callstack 28
  4362   000C88  0E20               	movlw	32
  4363   000C8A  EC03  F006         	call	_LCD_WriteCommand
  4364   000C8E  0E03               	movlw	3
  4365   000C90  6E4A               	movwf	??_LCD_EnableGraphics^0,c
  4366   000C92  0E98               	movlw	152
  4367   000C94                     u1677:
  4368   000C94  2EE8               	decfsz	wreg,f,c
  4369   000C96  D7FE               	bra	u1677
  4370   000C98  2E4A               	decfsz	??_LCD_EnableGraphics^0,f,c
  4371   000C9A  D7FC               	bra	u1677
  4372   000C9C  0E24               	movlw	36
  4373   000C9E  EC03  F006         	call	_LCD_WriteCommand
  4374   000CA2  0E03               	movlw	3
  4375   000CA4  6E4A               	movwf	??_LCD_EnableGraphics^0,c
  4376   000CA6  0E98               	movlw	152
  4377   000CA8                     u1687:
  4378   000CA8  2EE8               	decfsz	wreg,f,c
  4379   000CAA  D7FE               	bra	u1687
  4380   000CAC  2E4A               	decfsz	??_LCD_EnableGraphics^0,f,c
  4381   000CAE  D7FC               	bra	u1687
  4382   000CB0  0E26               	movlw	38
  4383   000CB2  EC03  F006         	call	_LCD_WriteCommand
  4384   000CB6  0E03               	movlw	3
  4385   000CB8  6E4A               	movwf	??_LCD_EnableGraphics^0,c
  4386   000CBA  0E98               	movlw	152
  4387   000CBC                     u1697:
  4388   000CBC  2EE8               	decfsz	wreg,f,c
  4389   000CBE  D7FE               	bra	u1697
  4390   000CC0  2E4A               	decfsz	??_LCD_EnableGraphics^0,f,c
  4391   000CC2  D7FC               	bra	u1697
  4392   000CC4  0012               	return		;funcret
  4393   000CC6                     __end_of_LCD_EnableGraphics:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _LCD_ClearGraphics *****************
  4397 ;; Defined at:
  4398 ;;		line 202 in file "12864_lcd.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  y               1    5[COMRAM] unsigned char 
  4403 ;;  x               1    4[COMRAM] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1
  4413 ;;      Params:         0       0       0
  4414 ;;      Locals:         2       0       0
  4415 ;;      Temps:          0       0       0
  4416 ;;      Totals:         2       0       0
  4417 ;;Total ram usage:        2 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 2
  4420 ;; This function calls:
  4421 ;;		_LCD_WriteCommand
  4422 ;;		_LCD_WriteData
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text16
  4429   000DB2                     __ptext16:
  4430                           	callstack 0
  4431   000DB2                     _LCD_ClearGraphics:
  4432                           	callstack 28
  4433   000DB2  6A4B               	clrf	LCD_ClearGraphics@y^0,c
  4434   000DB4                     l1848:
  4435   000DB4  0E20               	movlw	32
  4436   000DB6  604B               	cpfslt	LCD_ClearGraphics@y^0,c
  4437   000DB8  EFE0  F006         	goto	u1151
  4438   000DBC  EFE2  F006         	goto	u1150
  4439   000DC0                     u1151:
  4440   000DC0  EFEB  F006         	goto	l1852
  4441   000DC4                     u1150:
  4442   000DC4  504B               	movf	LCD_ClearGraphics@y^0,w,c
  4443   000DC6  0980               	iorlw	128
  4444   000DC8  EC03  F006         	call	_LCD_WriteCommand
  4445   000DCC  0E80               	movlw	128
  4446   000DCE  EC03  F006         	call	_LCD_WriteCommand
  4447   000DD2  EFF3  F006         	goto	l1854
  4448   000DD6                     l1852:
  4449   000DD6  504B               	movf	LCD_ClearGraphics@y^0,w,c
  4450   000DD8  0FE0               	addlw	224
  4451   000DDA  0980               	iorlw	128
  4452   000DDC  EC03  F006         	call	_LCD_WriteCommand
  4453   000DE0  0E88               	movlw	136
  4454   000DE2  EC03  F006         	call	_LCD_WriteCommand
  4455   000DE6                     l1854:
  4456   000DE6  6A4A               	clrf	LCD_ClearGraphics@x^0,c
  4457   000DE8                     l1860:
  4458   000DE8  0E00               	movlw	0
  4459   000DEA  EC09  F006         	call	_LCD_WriteData
  4460   000DEE  0E00               	movlw	0
  4461   000DF0  EC09  F006         	call	_LCD_WriteData
  4462   000DF4  2A4A               	incf	LCD_ClearGraphics@x^0,f,c
  4463   000DF6  0E07               	movlw	7
  4464   000DF8  644A               	cpfsgt	LCD_ClearGraphics@x^0,c
  4465   000DFA  EF01  F007         	goto	u1161
  4466   000DFE  EF03  F007         	goto	u1160
  4467   000E02                     u1161:
  4468   000E02  EFF4  F006         	goto	l1860
  4469   000E06                     u1160:
  4470   000E06  2A4B               	incf	LCD_ClearGraphics@y^0,f,c
  4471   000E08  0E3F               	movlw	63
  4472   000E0A  644B               	cpfsgt	LCD_ClearGraphics@y^0,c
  4473   000E0C  EF0A  F007         	goto	u1171
  4474   000E10  EF0C  F007         	goto	u1170
  4475   000E14                     u1171:
  4476   000E14  EFDA  F006         	goto	l1848
  4477   000E18                     u1170:
  4478   000E18  0012               	return		;funcret
  4479   000E1A                     __end_of_LCD_ClearGraphics:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _LCD_WriteData *****************
  4483 ;; Defined at:
  4484 ;;		line 253 in file "12864_lcd.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  data            1    wreg     unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  data            1    3[COMRAM] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1
  4498 ;;      Params:         0       0       0
  4499 ;;      Locals:         1       0       0
  4500 ;;      Temps:          0       0       0
  4501 ;;      Totals:         1       0       0
  4502 ;;Total ram usage:        1 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 1
  4505 ;; This function calls:
  4506 ;;		_LCD_WriteByte
  4507 ;; This function is called by:
  4508 ;;		_LCD_GraphicsDisplayString
  4509 ;;		_LCD_ClearGraphics
  4510 ;;		_LCD_TextDisplayString
  4511 ;;		_LCD_FillScreenGraphics
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text17
  4516   000C12                     __ptext17:
  4517                           	callstack 0
  4518   000C12                     _LCD_WriteData:
  4519                           	callstack 26
  4520                           
  4521                           ;incstack = 0
  4522                           ;LCD_WriteData@data stored from wreg
  4523   000C12  6E49               	movwf	LCD_WriteData@data^0,c
  4524   000C14  808A               	bsf	138,0,c	;volatile
  4525   000C16  5049               	movf	LCD_WriteData@data^0,w,c
  4526   000C18  ECD6  F009         	call	_LCD_WriteByte
  4527   000C1C  0012               	return		;funcret
  4528   000C1E                     __end_of_LCD_WriteData:
  4529                           	callstack 0
  4530                           
  4531 ;; *************** function _LCD_WriteCommand *****************
  4532 ;; Defined at:
  4533 ;;		line 259 in file "12864_lcd.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  command         1    wreg     unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  command         1    3[COMRAM] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1
  4547 ;;      Params:         0       0       0
  4548 ;;      Locals:         1       0       0
  4549 ;;      Temps:          0       0       0
  4550 ;;      Totals:         1       0       0
  4551 ;;Total ram usage:        1 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 1
  4554 ;; This function calls:
  4555 ;;		_LCD_WriteByte
  4556 ;; This function is called by:
  4557 ;;		_LCD_Init
  4558 ;;		_LCD_EnableGraphics
  4559 ;;		_LCD_GraphicsDisplayString
  4560 ;;		_LCD_ClearGraphics
  4561 ;;		_LCD_TextDisplayString
  4562 ;;		_LCD_DisableGraphics
  4563 ;;		_LCD_FillScreenGraphics
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text18
  4568   000C06                     __ptext18:
  4569                           	callstack 0
  4570   000C06                     _LCD_WriteCommand:
  4571                           	callstack 26
  4572                           
  4573                           ;incstack = 0
  4574                           ;LCD_WriteCommand@command stored from wreg
  4575   000C06  6E49               	movwf	LCD_WriteCommand@command^0,c
  4576   000C08  908A               	bcf	138,0,c	;volatile
  4577   000C0A  5049               	movf	LCD_WriteCommand@command^0,w,c
  4578   000C0C  ECD6  F009         	call	_LCD_WriteByte
  4579   000C10  0012               	return		;funcret
  4580   000C12                     __end_of_LCD_WriteCommand:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function _LCD_WriteByte *****************
  4584 ;; Defined at:
  4585 ;;		line 228 in file "12864_lcd.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  command         1    wreg     unsigned char 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;  command         1    2[COMRAM] unsigned char 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1
  4599 ;;      Params:         0       0       0
  4600 ;;      Locals:         1       0       0
  4601 ;;      Temps:          2       0       0
  4602 ;;      Totals:         3       0       0
  4603 ;;Total ram usage:        3 bytes
  4604 ;; Hardware stack levels used: 1
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_LCD_WriteData
  4609 ;;		_LCD_WriteCommand
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text19
  4614   0013AC                     __ptext19:
  4615                           	callstack 0
  4616   0013AC                     _LCD_WriteByte:
  4617                           	callstack 26
  4618                           
  4619                           ;incstack = 0
  4620                           ;LCD_WriteByte@command stored from wreg
  4621   0013AC  6E48               	movwf	LCD_WriteByte@command^0,c
  4622   0013AE  828A               	bsf	138,1,c	;volatile
  4623   0013B0  0E0D               	movlw	13
  4624   0013B2                     u1707:
  4625   0013B2  2EE8               	decfsz	wreg,f,c
  4626   0013B4  D7FE               	bra	u1707
  4627   0013B6  0000               	nop	
  4628   0013B8  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4629   0013BC  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4630   0013BE  0E0F               	movlw	15
  4631   0013C0  1646               	andwf	??_LCD_WriteByte^0,f,c
  4632   0013C2  0E01               	movlw	1
  4633   0013C4  1646               	andwf	??_LCD_WriteByte^0,f,c
  4634   0013C6  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4635   0013C8  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4636   0013CA  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4637   0013CC  508A               	movf	138,w,c	;volatile
  4638   0013CE  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4639   0013D0  0BF7               	andlw	-9
  4640   0013D2  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4641   0013D4  6E8A               	movwf	138,c	;volatile
  4642   0013D6  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4643   0013DA  0E05               	movlw	5
  4644   0013DC  6E47               	movwf	(??_LCD_WriteByte+1)^0,c
  4645   0013DE                     u805:
  4646   0013DE  90D8               	bcf	status,0,c
  4647   0013E0  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4648   0013E2  2E47               	decfsz	(??_LCD_WriteByte+1)^0,f,c
  4649   0013E4  EFEF  F009         	goto	u805
  4650   0013E8  0E01               	movlw	1
  4651   0013EA  1646               	andwf	??_LCD_WriteByte^0,f,c
  4652   0013EC  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4653   0013EE  508A               	movf	138,w,c	;volatile
  4654   0013F0  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4655   0013F2  0BEF               	andlw	-17
  4656   0013F4  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4657   0013F6  6E8A               	movwf	138,c	;volatile
  4658   0013F8  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4659   0013FC  0E06               	movlw	6
  4660   0013FE  6E47               	movwf	(??_LCD_WriteByte+1)^0,c
  4661   001400                     u815:
  4662   001400  90D8               	bcf	status,0,c
  4663   001402  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4664   001404  2E47               	decfsz	(??_LCD_WriteByte+1)^0,f,c
  4665   001406  EF00  F00A         	goto	u815
  4666   00140A  0E01               	movlw	1
  4667   00140C  1646               	andwf	??_LCD_WriteByte^0,f,c
  4668   00140E  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4669   001410  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4670   001412  508A               	movf	138,w,c	;volatile
  4671   001414  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4672   001416  0BDF               	andlw	-33
  4673   001418  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4674   00141A  6E8A               	movwf	138,c	;volatile
  4675   00141C  6A46               	clrf	??_LCD_WriteByte^0,c
  4676   00141E  AE48               	btfss	LCD_WriteByte@command^0,7,c
  4677   001420  D001               	bra	u825
  4678   001422  2A46               	incf	??_LCD_WriteByte^0,f,c
  4679   001424                     u825:
  4680   001424  0E01               	movlw	1
  4681   001426  1646               	andwf	??_LCD_WriteByte^0,f,c
  4682   001428  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4683   00142A  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4684   00142C  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4685   00142E  508A               	movf	138,w,c	;volatile
  4686   001430  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4687   001432  0BBF               	andlw	-65
  4688   001434  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4689   001436  6E8A               	movwf	138,c	;volatile
  4690   001438  0E0D               	movlw	13
  4691   00143A                     u1717:
  4692   00143A  2EE8               	decfsz	wreg,f,c
  4693   00143C  D7FE               	bra	u1717
  4694   00143E  0000               	nop	
  4695   001440  928A               	bcf	138,1,c	;volatile
  4696   001442  828A               	bsf	138,1,c	;volatile
  4697   001444  0E0D               	movlw	13
  4698   001446                     u1727:
  4699   001446  2EE8               	decfsz	wreg,f,c
  4700   001448  D7FE               	bra	u1727
  4701   00144A  0000               	nop	
  4702   00144C  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4703   001450  0E01               	movlw	1
  4704   001452  1646               	andwf	??_LCD_WriteByte^0,f,c
  4705   001454  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4706   001456  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4707   001458  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4708   00145A  508A               	movf	138,w,c	;volatile
  4709   00145C  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4710   00145E  0BF7               	andlw	-9
  4711   001460  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4712   001462  6E8A               	movwf	138,c	;volatile
  4713   001464  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4714   001468  90D8               	bcf	status,0,c
  4715   00146A  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4716   00146C  0E01               	movlw	1
  4717   00146E  1646               	andwf	??_LCD_WriteByte^0,f,c
  4718   001470  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4719   001472  508A               	movf	138,w,c	;volatile
  4720   001474  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4721   001476  0BEF               	andlw	-17
  4722   001478  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4723   00147A  6E8A               	movwf	138,c	;volatile
  4724   00147C  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4725   001480  90D8               	bcf	status,0,c
  4726   001482  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4727   001484  90D8               	bcf	status,0,c
  4728   001486  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4729   001488  0E01               	movlw	1
  4730   00148A  1646               	andwf	??_LCD_WriteByte^0,f,c
  4731   00148C  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4732   00148E  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4733   001490  508A               	movf	138,w,c	;volatile
  4734   001492  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4735   001494  0BDF               	andlw	-33
  4736   001496  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4737   001498  6E8A               	movwf	138,c	;volatile
  4738   00149A  C048  F046         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4739   00149E  90D8               	bcf	status,0,c
  4740   0014A0  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4741   0014A2  90D8               	bcf	status,0,c
  4742   0014A4  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4743   0014A6  90D8               	bcf	status,0,c
  4744   0014A8  3246               	rrcf	??_LCD_WriteByte^0,f,c
  4745   0014AA  0E01               	movlw	1
  4746   0014AC  1646               	andwf	??_LCD_WriteByte^0,f,c
  4747   0014AE  3A46               	swapf	??_LCD_WriteByte^0,f,c
  4748   0014B0  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4749   0014B2  4646               	rlncf	??_LCD_WriteByte^0,f,c
  4750   0014B4  508A               	movf	138,w,c	;volatile
  4751   0014B6  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4752   0014B8  0BBF               	andlw	-65
  4753   0014BA  1846               	xorwf	??_LCD_WriteByte^0,w,c
  4754   0014BC  6E8A               	movwf	138,c	;volatile
  4755   0014BE  0E0D               	movlw	13
  4756   0014C0                     u1737:
  4757   0014C0  2EE8               	decfsz	wreg,f,c
  4758   0014C2  D7FE               	bra	u1737
  4759   0014C4  0000               	nop	
  4760   0014C6  928A               	bcf	138,1,c	;volatile
  4761   0014C8  0E0D               	movlw	13
  4762   0014CA                     u1747:
  4763   0014CA  2EE8               	decfsz	wreg,f,c
  4764   0014CC  D7FE               	bra	u1747
  4765   0014CE  0000               	nop	
  4766   0014D0  0012               	return		;funcret
  4767   0014D2                     __end_of_LCD_WriteByte:
  4768                           	callstack 0
  4769                           
  4770                           	psect	rparam
  4771   000001                     ___rparam_used  equ	1
  4772   000000                     ___param_bank   equ	0
  4773   000000                     __Lparam        equ	__Lrparam
  4774   000000                     __Hparam        equ	__Hrparam
  4775                           
  4776                           	psect	config
  4777                           
  4778                           ; Padding undefined space
  4779   300000                     	org	3145728
  4780   300000  FF                 	db	255
  4781                           
  4782                           ;Config register CONFIG1H @ 0x300001
  4783                           ;	Oscillator
  4784                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  4785                           ;	Fail-Safe Clock Monitor Enable bit
  4786                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4787                           ;	Internal/External Oscillator Switchover bit
  4788                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4789   300001                     	org	3145729
  4790   300001  08                 	db	8
  4791                           
  4792                           ;Config register CONFIG2L @ 0x300002
  4793                           ;	Power-up Timer Enable bit
  4794                           ;	PWRT = OFF, PWRT disabled
  4795                           ;	Brown-out Reset Enable bits
  4796                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4797                           ;	Brown-out Reset Voltage bits
  4798                           ;	BORV = 3, Minimum Setting
  4799   300002                     	org	3145730
  4800   300002  19                 	db	25
  4801                           
  4802                           ;Config register CONFIG2H @ 0x300003
  4803                           ;	Watchdog Timer Enable bit
  4804                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4805                           ;	Watchdog Timer Postscale Select bits
  4806                           ;	WDTPS = 32768, 1:32768
  4807   300003                     	org	3145731
  4808   300003  1E                 	db	30
  4809                           
  4810                           ; Padding undefined space
  4811   300004                     	org	3145732
  4812   300004  FF                 	db	255
  4813                           
  4814                           ;Config register CONFIG3H @ 0x300005
  4815                           ;	CCP2 MUX bit
  4816                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4817                           ;	PORTB A/D Enable bit
  4818                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  4819                           ;	Low-Power Timer1 Oscillator Enable bit
  4820                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4821                           ;	MCLR Pin Enable bit
  4822                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4823   300005                     	org	3145733
  4824   300005  83                 	db	131
  4825                           
  4826                           ;Config register CONFIG4L @ 0x300006
  4827                           ;	Stack Full/Underflow Reset Enable bit
  4828                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4829                           ;	Single-Supply ICSP Enable bit
  4830                           ;	LVP = OFF, Single-Supply ICSP disabled
  4831                           ;	Boot Block Size Select bits
  4832                           ;	BBSIZ = BB256, 256 Word
  4833                           ;	Extended Instruction Set Enable bit
  4834                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4835                           ;	Background Debugger Enable bit
  4836                           ;	DEBUG = 0x1, unprogrammed default
  4837   300006                     	org	3145734
  4838   300006  81                 	db	129
  4839                           
  4840                           ; Padding undefined space
  4841   300007                     	org	3145735
  4842   300007  FF                 	db	255
  4843                           
  4844                           ;Config register CONFIG5L @ 0x300008
  4845                           ;	Code Protection bit
  4846                           ;	CP0 = OFF, Block 0 not code-protected
  4847                           ;	Code Protection bit
  4848                           ;	CP1 = OFF, Block 1 not code-protected
  4849   300008                     	org	3145736
  4850   300008  03                 	db	3
  4851                           
  4852                           ;Config register CONFIG5H @ 0x300009
  4853                           ;	Boot Block Code Protection bitProtect Boot
  4854                           ;	CPB = OFF, Boot block not code-protected
  4855                           ;	Data EEPROM Code Protection bit
  4856                           ;	CPD = OFF, Data EEPROM not code-protected
  4857   300009                     	org	3145737
  4858   300009  C0                 	db	192
  4859                           
  4860                           ;Config register CONFIG6L @ 0x30000A
  4861                           ;	Write Protection bit
  4862                           ;	WRT0 = OFF, Block 0 not write-protected
  4863                           ;	Write Protection bit
  4864                           ;	WRT1 = OFF, Block 1 not write-protected
  4865   30000A                     	org	3145738
  4866   30000A  03                 	db	3
  4867                           
  4868                           ;Config register CONFIG6H @ 0x30000B
  4869                           ;	Configuration Register Write Protection bit
  4870                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4871                           ;	Boot Block Write Protection bit
  4872                           ;	WRTB = OFF, Boot block not write-protected
  4873                           ;	Data EEPROM Write Protection bit
  4874                           ;	WRTD = OFF, Data EEPROM not write-protected
  4875   30000B                     	org	3145739
  4876   30000B  E0                 	db	224
  4877                           
  4878                           ;Config register CONFIG7L @ 0x30000C
  4879                           ;	Table Read Protection bit
  4880                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  4881                           ;	Table Read Protection bit
  4882                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  4883   30000C                     	org	3145740
  4884   30000C  03                 	db	3
  4885                           
  4886                           ;Config register CONFIG7H @ 0x30000D
  4887                           ;	Boot Block Table Read Protection bit
  4888                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  4889   30000D                     	org	3145741
  4890   30000D  40                 	db	64
  4891                           tosu	equ	0xFFF
  4892                           tosh	equ	0xFFE
  4893                           tosl	equ	0xFFD
  4894                           stkptr	equ	0xFFC
  4895                           pclatu	equ	0xFFB
  4896                           pclath	equ	0xFFA
  4897                           pcl	equ	0xFF9
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           indf0	equ	0xFEF
  4905                           postinc0	equ	0xFEE
  4906                           postdec0	equ	0xFED
  4907                           preinc0	equ	0xFEC
  4908                           plusw0	equ	0xFEB
  4909                           fsr0h	equ	0xFEA
  4910                           fsr0l	equ	0xFE9
  4911                           wreg	equ	0xFE8
  4912                           indf1	equ	0xFE7
  4913                           postinc1	equ	0xFE6
  4914                           postdec1	equ	0xFE5
  4915                           preinc1	equ	0xFE4
  4916                           plusw1	equ	0xFE3
  4917                           fsr1h	equ	0xFE2
  4918                           fsr1l	equ	0xFE1
  4919                           bsr	equ	0xFE0
  4920                           indf2	equ	0xFDF
  4921                           postinc2	equ	0xFDE
  4922                           postdec2	equ	0xFDD
  4923                           preinc2	equ	0xFDC
  4924                           plusw2	equ	0xFDB
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8

Data Sizes:
    Strings     182
    Constant    480
    Data        137
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     40     124
    BANK0           128      0     100
    BANK1           256      0      32

Pointer List with Targets:

    LCD_GraphicsDisplayString@str	PTR unsigned char  size(2) Largest target is 17
		 -> LCDStore0(COMRAM[17]), LCDStore1(COMRAM[17]), LCDStore2(COMRAM[17]), LCDStore3(COMRAM[17]), 
		 -> LCDStore4(BANK0[17]), LCDStore5(BANK0[17]), LCDStore6(BANK0[17]), LCDStore7(BANK0[17]), 
		 -> STR_1(CODE[9]), STR_10(CODE[17]), STR_11(CODE[16]), STR_12(CODE[17]), 
		 -> STR_13(CODE[16]), STR_14(CODE[15]), STR_15(CODE[12]), STR_2(CODE[9]), 
		 -> STR_3(CODE[9]), STR_4(CODE[9]), STR_5(CODE[9]), STR_6(CODE[9]), 
		 -> STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_draw
    _setup->_random
    _logic->_random
    _random->___awmod
    _rand->___lmul
    ___awmod->_rand
    _drawGraphics->_LCD_GraphicsDisplayString
    _clearAllChar->_placeChar
    _displaySpeed->_LCD_GraphicsDisplayString
    _LCD_GraphicsDisplayString->_LCD_WriteCommand
    _LCD_GraphicsDisplayString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCommand
    _LCD_EnableGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteData
    _LCD_WriteData->_LCD_WriteByte
    _LCD_WriteCommand->_LCD_WriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10673
                                             38 COMRAM     2     2      0
                  _LCD_ClearGraphics
                 _LCD_EnableGraphics
          _LCD_GraphicsDisplayString
                           _LCD_Init
                       _displaySpeed
                               _draw
                              _input
                              _logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     480
                             _random
 ---------------------------------------------------------------------------------
 (1) _logic                                                7     7      0     754
                                             28 COMRAM     7     7      0
                             _random
 ---------------------------------------------------------------------------------
 (2) _random                                               4     3      1     480
                                             24 COMRAM     4     3      1
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2      94
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     298
                                             18 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _input                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _draw                                                 5     5      0    3587
                                             34 COMRAM     4     4      0
                       _clearAllChar
                       _drawGraphics
                          _placeChar
 ---------------------------------------------------------------------------------
 (2) _drawGraphics                                         0     0      0    2325
          _LCD_GraphicsDisplayString
 ---------------------------------------------------------------------------------
 (2) _clearAllChar                                         2     2      0     574
                                              3 COMRAM     2     2      0
                          _placeChar
 ---------------------------------------------------------------------------------
 (2) _placeChar                                            3     1      2     438
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _displaySpeed                                         0     0      0    2325
          _LCD_GraphicsDisplayString
 ---------------------------------------------------------------------------------
 (3) _LCD_GraphicsDisplayString                           30    28      2    2325
                                              4 COMRAM    30    28      2
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     261
                                              4 COMRAM     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_EnableGraphics                                   1     1      0     261
                                              4 COMRAM     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_ClearGraphics                                    2     2      0     680
                                              4 COMRAM     2     2      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        1     1      0     261
                                              3 COMRAM     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteCommand                                     1     1      0     261
                                              3 COMRAM     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (5) _LCD_WriteByte                                        3     3      0     232
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_ClearGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_EnableGraphics
     _LCD_WriteCommand
   _LCD_GraphicsDisplayString
     _LCD_WriteCommand
     _LCD_WriteData
   _LCD_Init
     _LCD_WriteCommand
   _displaySpeed
     _LCD_GraphicsDisplayString
   _draw
     _clearAllChar
       _placeChar
     _drawGraphics
       _LCD_GraphicsDisplayString
     _placeChar
   _input
   _logic
     _random
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
   _setup
     _random

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      32     12.5%
BITBANK0           128      0       0      0.0%
BANK0              128      0     100     78.1%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     40     124     97.6%
BITBIGSFRh         117      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     256      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec 04 22:33:48 2024

                   ??_LCD_EnableGraphics 004A                                       l32 0CC4  
                                     l17 10D8                                       l70 1C96  
                                     l90 14D0                                       l93 0C1C  
                                     l78 1D66                                       l87 0E18  
                                     l96 0C10                            ?_displaySpeed 0046  
                                    l202 13AA                                      l210 0F56  
                                    l211 0F5C                                      l214 0C52  
                                    l304 0E72                                      l305 0E82  
                                    l218 0C86                                      l250 11A6  
                                    l171 1180                                      l180 0FE2  
                                    l245 167A                                      l174 0DB0  
                                    l182 0FF8                                      l270 1722  
                                    l262 1734                                      l183 103A  
                                    l263 16D0                                      l256 122E  
                                    l248 11A4                                      l184 100E  
                                    l264 1702                                      l177 0C4E  
                                    l265 16F0                                      l186 1024  
                                    l290 189A                                      l189 103A  
                                    l286 188C                                      l278 175A  
                                    l287 187A                                      l537 12DC  
                                    l972 0EEE                                      u400 0FF0  
                                    u401 0FEC                                      u410 1006  
                                    u411 1002                                      u420 101C  
                                    u421 1018                                      u430 1032  
                                    u431 102E                                      u390 0FDA  
                                    u391 0FD6                                      u900 1962  
                                    u805 13DE                                      u901 195E  
                                    u910 1992                                      u830 0E38  
                                    u815 1400                                      u911 198E  
                                    u831 0E34                                      u920 1AC2  
                                    u840 0E72                                      u825 1424  
                                    u921 1ABE                                      u841 0E6E  
                                    u930 1BF4                                      u850 18CA  
                                    u931 1BF0                                      u860 18E0  
                                    u861 18DC                                      u950 1C62  
                                    u870 1906                                      u951 1C5E  
                                    u944 1C48                                      u880 191C  
                                    u945 1C44                                      u881 1918  
                                    u857 18C0                                      u970 1C96  
                                    u890 1932                                      u971 1C92  
                                    u891 192E                                      u964 1C78  
                                    u965 1C74                                      u877 18FC  
                                    u990 1CD2                                      u991 1CCE  
                                    u984 1CB8                                      u985 1CB4  
                                    _key 0072                             ___awmod@sign 005D  
                                    wreg 0FE8                        ?_LCD_WriteCommand 0046  
                     ??_LCD_WriteCommand 0049                                     l1300 0FDA  
                                   l2100 1710                                     l1302 0FF0  
                                   l2110 1752                                     l2102 1720  
                                   l1304 1006                                     l2120 17CC  
                                   l2112 175E                                     l2104 1742  
                                   l1306 101C                                     l2130 1830  
                                   l2114 177A                                     l2106 174A  
                                   l1308 1032                                     l2132 183E  
                                   l2116 1796                                     l2124 17E6  
                                   l2108 174E                                     l2134 184C  
                                   l2118 17B0                                     l2126 181C  
                                   l1600 0C0A                                     l2136 185A  
                                   l2128 182C                                     l2080 1688  
                                   l1602 0C14                                     l1610 0E38  
                                   l2138 1868                                     l2090 16BA  
                                   l2082 168C                                     l1604 0C16  
                                   l1700 1C9A                                     l1620 18AA  
                                   l1612 0E48                                     l2092 16C8  
                                   l2084 1690                                     l2076 167C  
                                   l1710 1D12                                     l1702 1CD2  
                                   l1630 18E6                                     l1622 18CC  
                                   l1614 0E52                                     l1606 0E1A  
                                   l2094 16DE                                     l2086 169E  
                                   l2078 1684                                     l1712 1D14  
                                   l1704 1CF4                                     l1640 1922  
                                   l1632 1908                                     l1624 18D0  
                                   l1616 18A0                                     l1800 0C54  
                                   l1608 0E2A                                     l1720 0E84  
                                   l2096 16EE                                     l2088 16AC  
                                   l1570 13D6                                     l1810 103C  
                                   l1714 1D24                                     l1706 1CF6  
                                   l1650 1972                                     l1642 1932  
                                   l1634 190C                                     l1626 18E0  
                                   l1618 18A4                                     l1730 12F4  
                                   l1802 0C62                                     l1298 0FCC  
                                   l1722 0EC0                                     l1580 1442  
                                   l1572 13F8                                     l1564 13AE  
                                   l1820 107A                                     l1812 1042  
                                   l1708 1D06                                     l1660 1AC2  
                                   l1652 197E                                     l1644 1942  
                                   l1636 191C                                     l1628 18E4  
                                   l1716 1D26                                     l1740 1344  
                                   l1732 1304                                     l1804 0C64  
                                   l1900 0F3A                                     l1590 149A  
                                   l1582 1444                                     l1574 141C  
                                   l1566 13B0                                     l1830 10C4  
                                   l1822 1088                                     l1814 1050  
                                   l1718 1D56                                     l1670 1BE4  
                                   l1662 1B54                                     l1654 1992  
                                   l1646 194E                                     l1638 1920  
                                   l1742 1354                                     l1734 1314  
                                   l1726 12E0                                     l1806 0C74  
                                   l1750 1232                                     l1910 1522  
                                   l1902 0F46                                     l1592 14BE  
                                   l1584 144C                                     l1576 1438  
                                   l1568 13B8                                     l1840 0CB6  
                                   l1832 0C88                                     l1824 109C  
                                   l1816 1060                                     l1680 1C26  
                                   l1672 1BF4                                     l1664 1BE2  
                                   l1656 1A24                                     l1648 1962  
                                   l1736 1324                                     l1728 12E4  
                                   l1808 0C76                                     l1760 1262  
                                   l1752 1240                                     l1920 1548  
                                   l1912 1526                                     l1904 14D2  
                                   l1594 14C6                                     l1586 1464  
                                   l1578 1440                                     l1850 0DC4  
                                   l1842 0DB2                                     l1834 0C8E  
                                   l1826 10A2                                     l1818 1066  
                                   l1690 1C62                                     l1682 1C28  
                                   l1674 1C02                                     l1658 1AB2  
                                   l1738 1334                                     l1746 1364  
                                   l1770 12A8                                     l1762 1274  
                                   l1754 1248                                     l1922 154E  
                                   l1930 1580                                     l1914 152A  
                                   l1906 14E2                                     l1596 14C8  
                                   l1588 147C                                     l1860 0DE8  
                                   l1852 0DD6                                     l1836 0C9C  
                                   l1828 10B6                                     l1692 1C84  
                                   l1676 1C0E                                     l1780 12D4  
                                   l1772 12B0                                     l1764 127C  
                                   l1756 124C                                     l1748 1230  
                                   l1940 15C4                                     l1932 1590  
                                   l1924 1554                                     l1908 14EA  
                                   l1916 152C                                     l1598 0C08  
                                   l1862 0DF4                                     l1854 0DE6  
                                   l1838 0CB0                                     l1694 1C86  
                                   l1678 1C1E                                     l1870 10DA  
                                   l1790 0C50                                     l1774 12B6  
                                   l1766 1284                                     l1758 125A  
                                   l1950 160C                                     l1942 15E2  
                                   l1934 15A0                                     l1918 1542  
                                   l1864 0DF6                                     l1848 0DB4  
                                   l1688 1C2A                                     l1880 1126  
                                   l1872 10DE                                     l1784 0D50  
                                   l1768 1292                                     l1776 12BC  
                                   l1960 1666                                     l1952 161E  
                                   l1944 15E6                                     l1936 15A4  
                                   l1928 155A                                     l1866 0E06  
                                   l1882 1138                                     l1874 10F0  
                                   l1778 12CC                                     l1786 0C20  
                                   l1962 1676                                     l1954 163A  
                                   l1938 15AA                                     l1946 15E8  
                                   l1890 0EF4                                     l1868 0E08  
                                   l1876 1102                                     l1980 11E4  
                                   l1964 1182                                     l1956 1646  
                                   l1948 15FA                                     l1892 0EFE  
                                   l1878 1114                                     l1886 114A  
                                   l1990 1208                                     l1982 11F2  
                                   l1966 11A2                                     l1958 165A  
                                   l1894 0F0A                                     l1992 1218  
                                   l1984 11F2                                     l1976 11AC  
                                   l1896 0F1A                                     l1888 0EF0  
                                   l1994 121A                                     l1978 11C6  
                                   l1986 11F4                                     l1898 0F26  
                                   l1996 122A                                     l1988 1206  
                                   STR_1 1FC9                                     STR_2 1FD2  
                                   STR_3 1FDB                                     STR_4 1FE4  
                                   STR_5 1FED                                     STR_6 1FF6  
                                   STR_7 1F8D                                     STR_8 1F6B  
                                   STR_9 1F49                                     u1010 1D06  
                                   u1011 1D02                                     u1020 1D24  
                                   u1004 1CE8                                     u1100 1292  
                                   u1021 1D20                                     u1005 1CE4  
                                   u1101 128E                                     u1030 1D46  
                                   u1110 12A8                                     u1111 12A4  
                                   u1040 1D56                                     u1120 12CC  
                                   u1200 153E                                     u1041 1D52  
                                   u1121 12C8                                     u1201 153A  
                                   u1050 1D66                                     u1130 0C74  
                                   u1210 1590                                     u1051 1D62  
                                   u1131 0C70                                     u1211 158C  
                                   u1140 0C86                                     u1300 11C6  
                                   u1060 0EE0                                     u1220 15A0  
                                   u1037 1D3C                                     u1141 0C82  
                                   u1301 11C2                                     u1221 159C  
                                   u1150 0DC4                                     u1310 11E4  
                                   u1070 1240                                     u1230 15C4  
                                   u1151 0DC0                                     u1311 11E0  
                                   u1071 123C                                     u1231 15C0  
                                   u1160 0E06                                     u1320 1206  
                                   u1080 125A                                     u1240 15E2  
                                   u1161 0E02                                     u1321 1202  
                                   u1081 1256                                     u1065 0ED6  
                                   u1241 15DE                                     u1170 0E18  
                                   u1330 1218                                     u1090 1274  
                                   u1250 15FA                                     u1171 0E14  
                                   u1331 1214                                     u1091 1270  
                                   u1251 15F6                                     u1340 122A  
                                   u1260 160C                                     u1180 0F36  
                                   u1500 1742                                     u1341 1226  
                                   u1261 1608                                     u1181 0F32  
                                   u1501 173E                                     u1270 161E  
                                   u1190 0F56                                     u1510 182C  
                                   u1271 161A                                     u1191 0F52  
                                   u1511 1828                                     u1280 1656  
                                   u1520 1888                                     u1440 16DE  
                                   u1281 1652                                     u1521 1884  
                                   u1441 16DA                                     u1290 1676  
                                   u1530 189A                                     u1450 16EE  
                                   u1291 1672                                     u1531 1896  
                                   u1451 16EA                                     u1460 16FE  
                                   u1461 16FA                                     u1470 1710  
                                   u1607 1058                                     u1471 170C  
                                   u1480 1720                                     u1617 106C  
                                   u1481 171C                                     u1490 1730  
                                   u1707 13B2                                     u1627 1080  
                                   u1547 1768                                     u1491 172C  
                                   u1717 143A                                     u1637 1094  
                                   u1557 1784                                     u1727 1446  
                                   u1647 10A8                                     u1567 17A0  
                                   u1737 14C0                                     u1657 10BC  
                                   u1577 17BA                                     u1747 14CA  
                                   u1667 10D0                                     u1587 17D6  
                                   u1677 0C94                                     u1597 1048  
                                   u1687 0CA8                                     u1697 0CBC  
                         ??_drawGraphics 0068                                     _game 006F  
                                   _draw 1182                        random@lower_bound 0061  
                                   _main 167C                                     _rand 0E84  
                                   _seed 0079                                     fsr0h 0FEA  
                                   indf0 0FEF                                     fsr2h 0FDA  
                                   fsr0l 0FE9                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodh 0FF4                                     prodl 0FF3  
                                   start 0000                     __end_of_clearAllChar 0C88  
                          _LCD_WriteData 0C12                            _LCD_WriteByte 13AC  
                           ___param_bank 0000                         __end_of_LCD_Init 10DA  
                         ??_displaySpeed 0068                  LCD_WriteCommand@command 0049  
                                  ?_draw 0046                                    ?_main 0046  
                                  ?_rand 0052                                    STR_10 1F7C  
                                  STR_11 1F9E                                    STR_12 1F5A  
                                  STR_13 1F9E                                    STR_14 1FAE  
                                  STR_15 1FBD                          __end_of___awmod 12DE  
         LCD_GraphicsDisplayString@dataA 005F           LCD_GraphicsDisplayString@dataB 0060  
         LCD_GraphicsDisplayString@count 005E                                    _TRISA 0F92  
                                  _TRISB 0F93                      ___lmul@multiplicand 004A  
                                  _logic 14D2                                    _input 0FCC  
                                  _score 0073                                    _speed 0071  
                                  _setup 0EF0                                    draw@i 006A  
                                  draw@j 006B                                    draw@k 0069  
                                  tablat 0FF5                                    status 0FD8  
            ??_LCD_GraphicsDisplayString 004C                           ?_LCD_WriteData 0046  
                         ?_LCD_WriteByte 0046                          __initialization 0F5E  
                           __end_of_draw 1230                             __end_of_main 189E  
                           __end_of_rand 0EF0                                   ??_draw 0068  
                                 ??_main 006C                                   ??_rand 0054  
                          __activetblptr 0002                                   _ADCON1 0FC1  
                                 ?_logic 0046                                   ?_input 0046  
                                 ?_setup 0046          LCD_GraphicsDisplayString@colInd 0065  
                                 _OSCCON 0FD3                        random@upper_bound 005E  
                                 _Alpha1 1D69                                   _Alpha2 1E63  
LCD_GraphicsDisplayString@shouldContinue 0053                                   ___lmul 0E1A  
                              ??___awmod 005C                                   _fruitX 0075  
                                 _fruitY 0074                                   clear_0 0FA4  
                                 clear_1 0FB0                                   clear_2 0FBC  
                                 _random 0C1E                          ___awmod@divisor 005A  
                   __end_of_drawGraphics 0DB2                                   isa$std 0001  
                        ___awmod@counter 005C                _LCD_GraphicsDisplayString 189E  
                                 logic@i 0068                             __pdataCOMRAM 0001  
                           __mediumconst 1D68                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                            logic@prev2X 0063                              logic@prev2Y 0064  
                             __accesstop 0080                  __end_of__initialization 0FC2  
                              ?_LCD_Init 0046                     __end_of_displaySpeed 1182  
                        ??_LCD_WriteData 0049                          ??_LCD_WriteByte 0046  
                          ___rparam_used 0001                           __pcstackCOMRAM 0046  
                           __pidataBANK0 0CC7                            __end_of_logic 167C  
                          __end_of_input 103C                            __end_of_setup 0F5E  
                           _clearAllChar 0C50                                  ??_logic 0062  
                                ??_input 0046                                  ??_setup 0062  
                             __pbssBANK0 00C4                               __pbssBANK1 0100  
                             ??_LCD_Init 004A                        _LCD_ClearGraphics 0DB2  
                                ?___lmul 0046                       ?_LCD_ClearGraphics 0046  
                         ___lmul@product 004E                                  ?_random 005E  
                    ??_LCD_ClearGraphics 004A             LCD_GraphicsDisplayString@row 0064  
           LCD_GraphicsDisplayString@str 004A                __end_of_LCD_ClearGraphics 0E1A  
                                __Hparam 0000                                  __Lparam 0000  
                      LCD_WriteData@data 0049                                  ___awmod 1230  
                                __pcinit 0F5E                                  __ramtop 0200  
                                __ptext0 167C                                  __ptext1 0EF0  
                                __ptext2 14D2                                  __ptext3 0C1E  
                                __ptext4 0E84                                  __ptext5 0E1A  
                                __ptext6 1230                                  __ptext7 0FCC  
                                __ptext8 1182                                  __ptext9 0D50  
                       ___awmod@dividend 0058                        __end_of_placeChar 13AC  
          _LCD_GraphicsDisplayString$113 004F            _LCD_GraphicsDisplayString$115 0051  
                              _LCDStore0 0035                                _LCDStore1 0024  
                              _LCDStore2 0013                                _LCDStore3 0002  
                              _LCDStore4 00B3                                _LCDStore5 00A2  
                              _LCDStore6 0091                                _LCDStore7 0080  
                   end_of_initialization 0FC2                             _drawGraphics 0D50  
                          clearAllChar@i 0049                            clearAllChar@j 004A  
                          __Lmediumconst 1D68                               _snakeTailX 00C4  
                             _snakeTailY 0100                                  postdec1 0FE5  
                                postinc0 0FEE                                  postinc2 0FDE  
                              _PORTAbits 0F80                             _displaySpeed 10DA  
      LCD_GraphicsDisplayString@colListA 0054        LCD_GraphicsDisplayString@colListB 0059  
                       _LCD_WriteCommand 0C06                           __end_of_Alpha1 1E63  
                         __end_of_Alpha2 1F49                           __end_of___lmul 0E84  
                          __pidataCOMRAM 0D0B                           __end_of_random 0C50  
                    start_initialization 0F5E                    __end_of_LCD_WriteData 0C1E  
                  __end_of_LCD_WriteByte 14D2                                 ??___lmul 004E  
                   LCD_WriteByte@command 0048                              __pdataBANK0 0080  
                             logic@i_307 0067                                 ??_random 005F  
                             logic@prevX 0065                               logic@prevY 0066  
                             placeChar@c 0047                               placeChar@x 0048  
                             placeChar@y 0046                              __pbssCOMRAM 006E  
             __end_of_LCD_EnableGraphics 0CC6                            __pmediumconst 1D68  
                               ?___awmod 0058                                _placeChar 12DE  
                          _snakeHeadXPos 0078                            _snakeHeadYPos 0077  
                               _LCD_Init 103C                                 _LATBbits 0F8A  
          LCD_GraphicsDisplayString@indA 0066            LCD_GraphicsDisplayString@indB 0067  
          LCD_GraphicsDisplayString@line 0061                 __end_of_LCD_WriteCommand 0C12  
                      ___lmul@multiplier 0046                                copy_data0 0F72  
                              copy_data1 0F92                               ?_placeChar 0046  
                               __Hrparam 0000                                 __Lrparam 0000  
                          ?_clearAllChar 0046                                 _gameover 006E  
                               __ptext10 0C50                                 __ptext11 12DE  
                               __ptext12 10DA                                 __ptext13 189E  
                               __ptext14 103C                                 __ptext15 0C88  
                               __ptext16 0DB2                                 __ptext17 0C12  
                               __ptext18 0C06                                 __ptext19 13AC  
                               _mainMenu 0001               ?_LCD_GraphicsDisplayString 004A  
                           _snakeTailLen 0076                                 isa$xinst 0000  
                         ??_clearAllChar 0049                              _looseScreen 0070  
                            ??_placeChar 0048        __end_of_LCD_GraphicsDisplayString 1D68  
                     _LCD_EnableGraphics 0C88         LCD_GraphicsDisplayString@letterA 0062  
       LCD_GraphicsDisplayString@letterB 0063                      ?_LCD_EnableGraphics 0046  
                     LCD_ClearGraphics@x 004A                       LCD_ClearGraphics@y 004B  
                          ?_drawGraphics 0046  
