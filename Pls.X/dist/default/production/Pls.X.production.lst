

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Dec 05 20:57:01 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 17/10/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4321 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000FE0                     bsr             equ	4064
    76   000FE9                     fsr0            equ	4073
    77   000FEA                     fsr0h           equ	4074
    78   000FE9                     fsr0l           equ	4073
    79   000FE1                     fsr1            equ	4065
    80   000FE2                     fsr1h           equ	4066
    81   000FE1                     fsr1l           equ	4065
    82   000FD9                     fsr2            equ	4057
    83   000FDA                     fsr2h           equ	4058
    84   000FD9                     fsr2l           equ	4057
    85   000FEF                     indf0           equ	4079
    86   000FE7                     indf1           equ	4071
    87   000FDF                     indf2           equ	4063
    88   000FF2                     intcon          equ	4082
    89   000000                     nvmcon          equ	0
    90   000FF9                     pcl             equ	4089
    91   000FFA                     pclath          equ	4090
    92   000FFB                     pclatu          equ	4091
    93   000FEB                     plusw0          equ	4075
    94   000FE3                     plusw1          equ	4067
    95   000FDB                     plusw2          equ	4059
    96   000FED                     postdec0        equ	4077
    97   000FE5                     postdec1        equ	4069
    98   000FDD                     postdec2        equ	4061
    99   000FEE                     postinc0        equ	4078
   100   000FE6                     postinc1        equ	4070
   101   000FDE                     postinc2        equ	4062
   102   000FEC                     preinc0         equ	4076
   103   000FE4                     preinc1         equ	4068
   104   000FDC                     preinc2         equ	4060
   105   000FF3                     prod            equ	4083
   106   000FF4                     prodh           equ	4084
   107   000FF3                     prodl           equ	4083
   108   000FD8                     status          equ	4056
   109   000FF5                     tablat          equ	4085
   110   000FF6                     tblptr          equ	4086
   111   000FF7                     tblptrh         equ	4087
   112   000FF6                     tblptrl         equ	4086
   113   000FF8                     tblptru         equ	4088
   114   000FFD                     tosl            equ	4093
   115   000FE8                     wreg            equ	4072
   116   000F80                     PORTA           equ	3968	;# 
   117   000F81                     PORTB           equ	3969	;# 
   118   000F82                     PORTC           equ	3970	;# 
   119   000F83                     PORTD           equ	3971	;# 
   120   000F84                     PORTE           equ	3972	;# 
   121   000F89                     LATA            equ	3977	;# 
   122   000F8A                     LATB            equ	3978	;# 
   123   000F8B                     LATC            equ	3979	;# 
   124   000F8C                     LATD            equ	3980	;# 
   125   000F8D                     LATE            equ	3981	;# 
   126   000F92                     TRISA           equ	3986	;# 
   127   000F92                     DDRA            equ	3986	;# 
   128   000F93                     TRISB           equ	3987	;# 
   129   000F93                     DDRB            equ	3987	;# 
   130   000F94                     TRISC           equ	3988	;# 
   131   000F94                     DDRC            equ	3988	;# 
   132   000F95                     TRISD           equ	3989	;# 
   133   000F95                     DDRD            equ	3989	;# 
   134   000F96                     TRISE           equ	3990	;# 
   135   000F96                     DDRE            equ	3990	;# 
   136   000F9B                     OSCTUNE         equ	3995	;# 
   137   000F9D                     PIE1            equ	3997	;# 
   138   000F9E                     PIR1            equ	3998	;# 
   139   000F9F                     IPR1            equ	3999	;# 
   140   000FA0                     PIE2            equ	4000	;# 
   141   000FA1                     PIR2            equ	4001	;# 
   142   000FA2                     IPR2            equ	4002	;# 
   143   000FA6                     EECON1          equ	4006	;# 
   144   000FA7                     EECON2          equ	4007	;# 
   145   000FA8                     EEDATA          equ	4008	;# 
   146   000FA9                     EEADR           equ	4009	;# 
   147   000FAB                     RCSTA           equ	4011	;# 
   148   000FAB                     RCSTA1          equ	4011	;# 
   149   000FAC                     TXSTA           equ	4012	;# 
   150   000FAC                     TXSTA1          equ	4012	;# 
   151   000FAD                     TXREG           equ	4013	;# 
   152   000FAD                     TXREG1          equ	4013	;# 
   153   000FAE                     RCREG           equ	4014	;# 
   154   000FAE                     RCREG1          equ	4014	;# 
   155   000FAF                     SPBRG           equ	4015	;# 
   156   000FAF                     SPBRG1          equ	4015	;# 
   157   000FB0                     SPBRGH          equ	4016	;# 
   158   000FB1                     T3CON           equ	4017	;# 
   159   000FB2                     TMR3            equ	4018	;# 
   160   000FB2                     TMR3L           equ	4018	;# 
   161   000FB3                     TMR3H           equ	4019	;# 
   162   000FB4                     CMCON           equ	4020	;# 
   163   000FB5                     CVRCON          equ	4021	;# 
   164   000FB6                     ECCP1AS         equ	4022	;# 
   165   000FB7                     ECCP1DEL        equ	4023	;# 
   166   000FB7                     PWM1CON         equ	4023	;# 
   167   000FB8                     BAUDCON         equ	4024	;# 
   168   000FB8                     BAUDCTL         equ	4024	;# 
   169   000FBA                     CCP2CON         equ	4026	;# 
   170   000FBB                     CCPR2           equ	4027	;# 
   171   000FBB                     CCPR2L          equ	4027	;# 
   172   000FBC                     CCPR2H          equ	4028	;# 
   173   000FBD                     CCP1CON         equ	4029	;# 
   174   000FBD                     ECCP1CON        equ	4029	;# 
   175   000FBE                     CCPR1           equ	4030	;# 
   176   000FBE                     CCPR1L          equ	4030	;# 
   177   000FBF                     CCPR1H          equ	4031	;# 
   178   000FC0                     ADCON2          equ	4032	;# 
   179   000FC1                     ADCON1          equ	4033	;# 
   180   000FC2                     ADCON0          equ	4034	;# 
   181   000FC3                     ADRES           equ	4035	;# 
   182   000FC3                     ADRESL          equ	4035	;# 
   183   000FC4                     ADRESH          equ	4036	;# 
   184   000FC5                     SSPCON2         equ	4037	;# 
   185   000FC6                     SSPCON1         equ	4038	;# 
   186   000FC7                     SSPSTAT         equ	4039	;# 
   187   000FC8                     SSPADD          equ	4040	;# 
   188   000FC9                     SSPBUF          equ	4041	;# 
   189   000FCA                     T2CON           equ	4042	;# 
   190   000FCB                     PR2             equ	4043	;# 
   191   000FCB                     MEMCON          equ	4043	;# 
   192   000FCC                     TMR2            equ	4044	;# 
   193   000FCD                     T1CON           equ	4045	;# 
   194   000FCE                     TMR1            equ	4046	;# 
   195   000FCE                     TMR1L           equ	4046	;# 
   196   000FCF                     TMR1H           equ	4047	;# 
   197   000FD0                     RCON            equ	4048	;# 
   198   000FD1                     WDTCON          equ	4049	;# 
   199   000FD2                     HLVDCON         equ	4050	;# 
   200   000FD2                     LVDCON          equ	4050	;# 
   201   000FD3                     OSCCON          equ	4051	;# 
   202   000FD5                     T0CON           equ	4053	;# 
   203   000FD6                     TMR0            equ	4054	;# 
   204   000FD6                     TMR0L           equ	4054	;# 
   205   000FD7                     TMR0H           equ	4055	;# 
   206   000FD8                     STATUS          equ	4056	;# 
   207   000FD9                     FSR2            equ	4057	;# 
   208   000FD9                     FSR2L           equ	4057	;# 
   209   000FDA                     FSR2H           equ	4058	;# 
   210   000FDB                     PLUSW2          equ	4059	;# 
   211   000FDC                     PREINC2         equ	4060	;# 
   212   000FDD                     POSTDEC2        equ	4061	;# 
   213   000FDE                     POSTINC2        equ	4062	;# 
   214   000FDF                     INDF2           equ	4063	;# 
   215   000FE0                     BSR             equ	4064	;# 
   216   000FE1                     FSR1            equ	4065	;# 
   217   000FE1                     FSR1L           equ	4065	;# 
   218   000FE2                     FSR1H           equ	4066	;# 
   219   000FE3                     PLUSW1          equ	4067	;# 
   220   000FE4                     PREINC1         equ	4068	;# 
   221   000FE5                     POSTDEC1        equ	4069	;# 
   222   000FE6                     POSTINC1        equ	4070	;# 
   223   000FE7                     INDF1           equ	4071	;# 
   224   000FE8                     WREG            equ	4072	;# 
   225   000FE9                     FSR0            equ	4073	;# 
   226   000FE9                     FSR0L           equ	4073	;# 
   227   000FEA                     FSR0H           equ	4074	;# 
   228   000FEB                     PLUSW0          equ	4075	;# 
   229   000FEC                     PREINC0         equ	4076	;# 
   230   000FED                     POSTDEC0        equ	4077	;# 
   231   000FEE                     POSTINC0        equ	4078	;# 
   232   000FEF                     INDF0           equ	4079	;# 
   233   000FF0                     INTCON3         equ	4080	;# 
   234   000FF1                     INTCON2         equ	4081	;# 
   235   000FF2                     INTCON          equ	4082	;# 
   236   000FF3                     PROD            equ	4083	;# 
   237   000FF3                     PRODL           equ	4083	;# 
   238   000FF4                     PRODH           equ	4084	;# 
   239   000FF5                     TABLAT          equ	4085	;# 
   240   000FF6                     TBLPTR          equ	4086	;# 
   241   000FF6                     TBLPTRL         equ	4086	;# 
   242   000FF7                     TBLPTRH         equ	4087	;# 
   243   000FF8                     TBLPTRU         equ	4088	;# 
   244   000FF9                     PCLAT           equ	4089	;# 
   245   000FF9                     PC              equ	4089	;# 
   246   000FF9                     PCL             equ	4089	;# 
   247   000FFA                     PCLATH          equ	4090	;# 
   248   000FFB                     PCLATU          equ	4091	;# 
   249   000FFC                     STKPTR          equ	4092	;# 
   250   000FFD                     TOS             equ	4093	;# 
   251   000FFD                     TOSL            equ	4093	;# 
   252   000FFE                     TOSH            equ	4094	;# 
   253   000FFF                     TOSU            equ	4095	;# 
   254   000F80                     PORTA           equ	3968	;# 
   255   000F81                     PORTB           equ	3969	;# 
   256   000F82                     PORTC           equ	3970	;# 
   257   000F83                     PORTD           equ	3971	;# 
   258   000F84                     PORTE           equ	3972	;# 
   259   000F89                     LATA            equ	3977	;# 
   260   000F8A                     LATB            equ	3978	;# 
   261   000F8B                     LATC            equ	3979	;# 
   262   000F8C                     LATD            equ	3980	;# 
   263   000F8D                     LATE            equ	3981	;# 
   264   000F92                     TRISA           equ	3986	;# 
   265   000F92                     DDRA            equ	3986	;# 
   266   000F93                     TRISB           equ	3987	;# 
   267   000F93                     DDRB            equ	3987	;# 
   268   000F94                     TRISC           equ	3988	;# 
   269   000F94                     DDRC            equ	3988	;# 
   270   000F95                     TRISD           equ	3989	;# 
   271   000F95                     DDRD            equ	3989	;# 
   272   000F96                     TRISE           equ	3990	;# 
   273   000F96                     DDRE            equ	3990	;# 
   274   000F9B                     OSCTUNE         equ	3995	;# 
   275   000F9D                     PIE1            equ	3997	;# 
   276   000F9E                     PIR1            equ	3998	;# 
   277   000F9F                     IPR1            equ	3999	;# 
   278   000FA0                     PIE2            equ	4000	;# 
   279   000FA1                     PIR2            equ	4001	;# 
   280   000FA2                     IPR2            equ	4002	;# 
   281   000FA6                     EECON1          equ	4006	;# 
   282   000FA7                     EECON2          equ	4007	;# 
   283   000FA8                     EEDATA          equ	4008	;# 
   284   000FA9                     EEADR           equ	4009	;# 
   285   000FAB                     RCSTA           equ	4011	;# 
   286   000FAB                     RCSTA1          equ	4011	;# 
   287   000FAC                     TXSTA           equ	4012	;# 
   288   000FAC                     TXSTA1          equ	4012	;# 
   289   000FAD                     TXREG           equ	4013	;# 
   290   000FAD                     TXREG1          equ	4013	;# 
   291   000FAE                     RCREG           equ	4014	;# 
   292   000FAE                     RCREG1          equ	4014	;# 
   293   000FAF                     SPBRG           equ	4015	;# 
   294   000FAF                     SPBRG1          equ	4015	;# 
   295   000FB0                     SPBRGH          equ	4016	;# 
   296   000FB1                     T3CON           equ	4017	;# 
   297   000FB2                     TMR3            equ	4018	;# 
   298   000FB2                     TMR3L           equ	4018	;# 
   299   000FB3                     TMR3H           equ	4019	;# 
   300   000FB4                     CMCON           equ	4020	;# 
   301   000FB5                     CVRCON          equ	4021	;# 
   302   000FB6                     ECCP1AS         equ	4022	;# 
   303   000FB7                     ECCP1DEL        equ	4023	;# 
   304   000FB7                     PWM1CON         equ	4023	;# 
   305   000FB8                     BAUDCON         equ	4024	;# 
   306   000FB8                     BAUDCTL         equ	4024	;# 
   307   000FBA                     CCP2CON         equ	4026	;# 
   308   000FBB                     CCPR2           equ	4027	;# 
   309   000FBB                     CCPR2L          equ	4027	;# 
   310   000FBC                     CCPR2H          equ	4028	;# 
   311   000FBD                     CCP1CON         equ	4029	;# 
   312   000FBD                     ECCP1CON        equ	4029	;# 
   313   000FBE                     CCPR1           equ	4030	;# 
   314   000FBE                     CCPR1L          equ	4030	;# 
   315   000FBF                     CCPR1H          equ	4031	;# 
   316   000FC0                     ADCON2          equ	4032	;# 
   317   000FC1                     ADCON1          equ	4033	;# 
   318   000FC2                     ADCON0          equ	4034	;# 
   319   000FC3                     ADRES           equ	4035	;# 
   320   000FC3                     ADRESL          equ	4035	;# 
   321   000FC4                     ADRESH          equ	4036	;# 
   322   000FC5                     SSPCON2         equ	4037	;# 
   323   000FC6                     SSPCON1         equ	4038	;# 
   324   000FC7                     SSPSTAT         equ	4039	;# 
   325   000FC8                     SSPADD          equ	4040	;# 
   326   000FC9                     SSPBUF          equ	4041	;# 
   327   000FCA                     T2CON           equ	4042	;# 
   328   000FCB                     PR2             equ	4043	;# 
   329   000FCB                     MEMCON          equ	4043	;# 
   330   000FCC                     TMR2            equ	4044	;# 
   331   000FCD                     T1CON           equ	4045	;# 
   332   000FCE                     TMR1            equ	4046	;# 
   333   000FCE                     TMR1L           equ	4046	;# 
   334   000FCF                     TMR1H           equ	4047	;# 
   335   000FD0                     RCON            equ	4048	;# 
   336   000FD1                     WDTCON          equ	4049	;# 
   337   000FD2                     HLVDCON         equ	4050	;# 
   338   000FD2                     LVDCON          equ	4050	;# 
   339   000FD3                     OSCCON          equ	4051	;# 
   340   000FD5                     T0CON           equ	4053	;# 
   341   000FD6                     TMR0            equ	4054	;# 
   342   000FD6                     TMR0L           equ	4054	;# 
   343   000FD7                     TMR0H           equ	4055	;# 
   344   000FD8                     STATUS          equ	4056	;# 
   345   000FD9                     FSR2            equ	4057	;# 
   346   000FD9                     FSR2L           equ	4057	;# 
   347   000FDA                     FSR2H           equ	4058	;# 
   348   000FDB                     PLUSW2          equ	4059	;# 
   349   000FDC                     PREINC2         equ	4060	;# 
   350   000FDD                     POSTDEC2        equ	4061	;# 
   351   000FDE                     POSTINC2        equ	4062	;# 
   352   000FDF                     INDF2           equ	4063	;# 
   353   000FE0                     BSR             equ	4064	;# 
   354   000FE1                     FSR1            equ	4065	;# 
   355   000FE1                     FSR1L           equ	4065	;# 
   356   000FE2                     FSR1H           equ	4066	;# 
   357   000FE3                     PLUSW1          equ	4067	;# 
   358   000FE4                     PREINC1         equ	4068	;# 
   359   000FE5                     POSTDEC1        equ	4069	;# 
   360   000FE6                     POSTINC1        equ	4070	;# 
   361   000FE7                     INDF1           equ	4071	;# 
   362   000FE8                     WREG            equ	4072	;# 
   363   000FE9                     FSR0            equ	4073	;# 
   364   000FE9                     FSR0L           equ	4073	;# 
   365   000FEA                     FSR0H           equ	4074	;# 
   366   000FEB                     PLUSW0          equ	4075	;# 
   367   000FEC                     PREINC0         equ	4076	;# 
   368   000FED                     POSTDEC0        equ	4077	;# 
   369   000FEE                     POSTINC0        equ	4078	;# 
   370   000FEF                     INDF0           equ	4079	;# 
   371   000FF0                     INTCON3         equ	4080	;# 
   372   000FF1                     INTCON2         equ	4081	;# 
   373   000FF2                     INTCON          equ	4082	;# 
   374   000FF3                     PROD            equ	4083	;# 
   375   000FF3                     PRODL           equ	4083	;# 
   376   000FF4                     PRODH           equ	4084	;# 
   377   000FF5                     TABLAT          equ	4085	;# 
   378   000FF6                     TBLPTR          equ	4086	;# 
   379   000FF6                     TBLPTRL         equ	4086	;# 
   380   000FF7                     TBLPTRH         equ	4087	;# 
   381   000FF8                     TBLPTRU         equ	4088	;# 
   382   000FF9                     PCLAT           equ	4089	;# 
   383   000FF9                     PC              equ	4089	;# 
   384   000FF9                     PCL             equ	4089	;# 
   385   000FFA                     PCLATH          equ	4090	;# 
   386   000FFB                     PCLATU          equ	4091	;# 
   387   000FFC                     STKPTR          equ	4092	;# 
   388   000FFD                     TOS             equ	4093	;# 
   389   000FFD                     TOSL            equ	4093	;# 
   390   000FFE                     TOSH            equ	4094	;# 
   391   000FFF                     TOSU            equ	4095	;# 
   392                           
   393                           	psect	idataCOMRAM
   394   000D50                     __pidataCOMRAM:
   395                           	callstack 0
   396                           
   397                           ;initializer for _mainMenu
   398   000D50  01                 	db	1
   399                           
   400                           	psect	idataBANK0
   401   000D51                     __pidataBANK0:
   402                           	callstack 0
   403                           
   404                           ;initializer for _LCDStore6
   405   000D51  20                 	db	32
   406   000D52  20                 	db	32
   407   000D53  20                 	db	32
   408   000D54  20                 	db	32
   409   000D55  20                 	db	32
   410   000D56  20                 	db	32
   411   000D57  20                 	db	32
   412   000D58  20                 	db	32
   413   000D59  20                 	db	32
   414   000D5A  20                 	db	32
   415   000D5B  20                 	db	32
   416   000D5C  20                 	db	32
   417   000D5D  20                 	db	32
   418   000D5E  20                 	db	32
   419   000D5F  20                 	db	32
   420   000D60  20                 	db	32
   421   000D61  00                 	db	0
   422                           
   423                           ;initializer for _LCDStore5
   424   000D62  20                 	db	32
   425   000D63  20                 	db	32
   426   000D64  20                 	db	32
   427   000D65  20                 	db	32
   428   000D66  20                 	db	32
   429   000D67  20                 	db	32
   430   000D68  20                 	db	32
   431   000D69  20                 	db	32
   432   000D6A  20                 	db	32
   433   000D6B  20                 	db	32
   434   000D6C  20                 	db	32
   435   000D6D  20                 	db	32
   436   000D6E  20                 	db	32
   437   000D6F  20                 	db	32
   438   000D70  20                 	db	32
   439   000D71  20                 	db	32
   440   000D72  00                 	db	0
   441                           
   442                           ;initializer for _LCDStore4
   443   000D73  20                 	db	32
   444   000D74  20                 	db	32
   445   000D75  20                 	db	32
   446   000D76  20                 	db	32
   447   000D77  20                 	db	32
   448   000D78  20                 	db	32
   449   000D79  20                 	db	32
   450   000D7A  20                 	db	32
   451   000D7B  20                 	db	32
   452   000D7C  20                 	db	32
   453   000D7D  20                 	db	32
   454   000D7E  20                 	db	32
   455   000D7F  20                 	db	32
   456   000D80  20                 	db	32
   457   000D81  20                 	db	32
   458   000D82  20                 	db	32
   459   000D83  00                 	db	0
   460                           
   461                           ;initializer for _LCDStore3
   462   000D84  20                 	db	32
   463   000D85  20                 	db	32
   464   000D86  20                 	db	32
   465   000D87  20                 	db	32
   466   000D88  20                 	db	32
   467   000D89  20                 	db	32
   468   000D8A  20                 	db	32
   469   000D8B  20                 	db	32
   470   000D8C  20                 	db	32
   471   000D8D  20                 	db	32
   472   000D8E  20                 	db	32
   473   000D8F  20                 	db	32
   474   000D90  20                 	db	32
   475   000D91  20                 	db	32
   476   000D92  20                 	db	32
   477   000D93  20                 	db	32
   478   000D94  00                 	db	0
   479                           
   480                           ;initializer for _LCDStore2
   481   000D95  20                 	db	32
   482   000D96  20                 	db	32
   483   000D97  20                 	db	32
   484   000D98  20                 	db	32
   485   000D99  20                 	db	32
   486   000D9A  20                 	db	32
   487   000D9B  20                 	db	32
   488   000D9C  20                 	db	32
   489   000D9D  20                 	db	32
   490   000D9E  20                 	db	32
   491   000D9F  20                 	db	32
   492   000DA0  20                 	db	32
   493   000DA1  20                 	db	32
   494   000DA2  20                 	db	32
   495   000DA3  20                 	db	32
   496   000DA4  20                 	db	32
   497   000DA5  00                 	db	0
   498                           
   499                           ;initializer for _LCDStore1
   500   000DA6  20                 	db	32
   501   000DA7  20                 	db	32
   502   000DA8  20                 	db	32
   503   000DA9  20                 	db	32
   504   000DAA  20                 	db	32
   505   000DAB  20                 	db	32
   506   000DAC  20                 	db	32
   507   000DAD  20                 	db	32
   508   000DAE  20                 	db	32
   509   000DAF  20                 	db	32
   510   000DB0  20                 	db	32
   511   000DB1  20                 	db	32
   512   000DB2  20                 	db	32
   513   000DB3  20                 	db	32
   514   000DB4  20                 	db	32
   515   000DB5  20                 	db	32
   516   000DB6  00                 	db	0
   517                           
   518                           ;initializer for _LCDStore0
   519   000DB7  20                 	db	32
   520   000DB8  20                 	db	32
   521   000DB9  20                 	db	32
   522   000DBA  20                 	db	32
   523   000DBB  20                 	db	32
   524   000DBC  20                 	db	32
   525   000DBD  20                 	db	32
   526   000DBE  20                 	db	32
   527   000DBF  20                 	db	32
   528   000DC0  20                 	db	32
   529   000DC1  20                 	db	32
   530   000DC2  20                 	db	32
   531   000DC3  20                 	db	32
   532   000DC4  20                 	db	32
   533   000DC5  20                 	db	32
   534   000DC6  20                 	db	32
   535   000DC7  00                 	db	0
   536                           
   537                           	psect	idataBANK1
   538   000A73                     __pidataBANK1:
   539                           	callstack 0
   540                           
   541                           ;initializer for _LCDStore7
   542   000A73  20                 	db	32
   543   000A74  20                 	db	32
   544   000A75  20                 	db	32
   545   000A76  20                 	db	32
   546   000A77  20                 	db	32
   547   000A78  20                 	db	32
   548   000A79  20                 	db	32
   549   000A7A  20                 	db	32
   550   000A7B  20                 	db	32
   551   000A7C  20                 	db	32
   552   000A7D  20                 	db	32
   553   000A7E  20                 	db	32
   554   000A7F  20                 	db	32
   555   000A80  20                 	db	32
   556   000A81  20                 	db	32
   557   000A82  20                 	db	32
   558   000A83  00                 	db	0
   559                           
   560                           	psect	mediumconst
   561   001D70                     __pmediumconst:
   562                           	callstack 0
   563   001D70  00                 	db	0
   564   001D71                     _Alpha1:
   565                           	callstack 0
   566   001D71  00                 	db	0
   567   001D72  00                 	db	0
   568   001D73  00                 	db	0
   569   001D74  00                 	db	0
   570   001D75  00                 	db	0
   571   001D76  00                 	db	0
   572   001D77  00                 	db	0
   573   001D78  5F                 	db	95
   574   001D79  00                 	db	0
   575   001D7A  00                 	db	0
   576   001D7B  00                 	db	0
   577   001D7C  07                 	db	7
   578   001D7D  00                 	db	0
   579   001D7E  07                 	db	7
   580   001D7F  00                 	db	0
   581   001D80  14                 	db	20
   582   001D81  7F                 	db	127
   583   001D82  14                 	db	20
   584   001D83  7F                 	db	127
   585   001D84  14                 	db	20
   586   001D85  24                 	db	36
   587   001D86  2A                 	db	42
   588   001D87  7F                 	db	127
   589   001D88  2A                 	db	42
   590   001D89  12                 	db	18
   591   001D8A  23                 	db	35
   592   001D8B  13                 	db	19
   593   001D8C  08                 	db	8
   594   001D8D  64                 	db	100
   595   001D8E  62                 	db	98
   596   001D8F  36                 	db	54
   597   001D90  49                 	db	73
   598   001D91  55                 	db	85
   599   001D92  22                 	db	34
   600   001D93  50                 	db	80
   601   001D94  00                 	db	0
   602   001D95  05                 	db	5
   603   001D96  03                 	db	3
   604   001D97  00                 	db	0
   605   001D98  00                 	db	0
   606   001D99  00                 	db	0
   607   001D9A  1C                 	db	28
   608   001D9B  22                 	db	34
   609   001D9C  41                 	db	65
   610   001D9D  00                 	db	0
   611   001D9E  00                 	db	0
   612   001D9F  41                 	db	65
   613   001DA0  22                 	db	34
   614   001DA1  1C                 	db	28
   615   001DA2  00                 	db	0
   616   001DA3  14                 	db	20
   617   001DA4  08                 	db	8
   618   001DA5  3E                 	db	62
   619   001DA6  08                 	db	8
   620   001DA7  14                 	db	20
   621   001DA8  08                 	db	8
   622   001DA9  08                 	db	8
   623   001DAA  3E                 	db	62
   624   001DAB  08                 	db	8
   625   001DAC  08                 	db	8
   626   001DAD  00                 	db	0
   627   001DAE  50                 	db	80
   628   001DAF  30                 	db	48
   629   001DB0  00                 	db	0
   630   001DB1  00                 	db	0
   631   001DB2  08                 	db	8
   632   001DB3  08                 	db	8
   633   001DB4  08                 	db	8
   634   001DB5  08                 	db	8
   635   001DB6  08                 	db	8
   636   001DB7  00                 	db	0
   637   001DB8  60                 	db	96
   638   001DB9  60                 	db	96
   639   001DBA  00                 	db	0
   640   001DBB  00                 	db	0
   641   001DBC  20                 	db	32
   642   001DBD  10                 	db	16
   643   001DBE  08                 	db	8
   644   001DBF  04                 	db	4
   645   001DC0  02                 	db	2
   646   001DC1  3E                 	db	62
   647   001DC2  51                 	db	81
   648   001DC3  49                 	db	73
   649   001DC4  45                 	db	69
   650   001DC5  3E                 	db	62
   651   001DC6  00                 	db	0
   652   001DC7  42                 	db	66
   653   001DC8  7F                 	db	127
   654   001DC9  40                 	db	64
   655   001DCA  00                 	db	0
   656   001DCB  42                 	db	66
   657   001DCC  61                 	db	97
   658   001DCD  51                 	db	81
   659   001DCE  49                 	db	73
   660   001DCF  46                 	db	70
   661   001DD0  21                 	db	33
   662   001DD1  41                 	db	65
   663   001DD2  45                 	db	69
   664   001DD3  4B                 	db	75
   665   001DD4  31                 	db	49
   666   001DD5  18                 	db	24
   667   001DD6  14                 	db	20
   668   001DD7  12                 	db	18
   669   001DD8  7F                 	db	127
   670   001DD9  10                 	db	16
   671   001DDA  27                 	db	39
   672   001DDB  45                 	db	69
   673   001DDC  45                 	db	69
   674   001DDD  45                 	db	69
   675   001DDE  39                 	db	57
   676   001DDF  3C                 	db	60
   677   001DE0  4A                 	db	74
   678   001DE1  49                 	db	73
   679   001DE2  49                 	db	73
   680   001DE3  30                 	db	48
   681   001DE4  01                 	db	1
   682   001DE5  71                 	db	113
   683   001DE6  09                 	db	9
   684   001DE7  05                 	db	5
   685   001DE8  03                 	db	3
   686   001DE9  36                 	db	54
   687   001DEA  49                 	db	73
   688   001DEB  49                 	db	73
   689   001DEC  49                 	db	73
   690   001DED  36                 	db	54
   691   001DEE  06                 	db	6
   692   001DEF  49                 	db	73
   693   001DF0  49                 	db	73
   694   001DF1  29                 	db	41
   695   001DF2  1E                 	db	30
   696   001DF3  00                 	db	0
   697   001DF4  36                 	db	54
   698   001DF5  36                 	db	54
   699   001DF6  00                 	db	0
   700   001DF7  00                 	db	0
   701   001DF8  00                 	db	0
   702   001DF9  56                 	db	86
   703   001DFA  36                 	db	54
   704   001DFB  00                 	db	0
   705   001DFC  00                 	db	0
   706   001DFD  08                 	db	8
   707   001DFE  14                 	db	20
   708   001DFF  22                 	db	34
   709   001E00  41                 	db	65
   710   001E01  00                 	db	0
   711   001E02  14                 	db	20
   712   001E03  14                 	db	20
   713   001E04  14                 	db	20
   714   001E05  14                 	db	20
   715   001E06  14                 	db	20
   716   001E07  00                 	db	0
   717   001E08  41                 	db	65
   718   001E09  22                 	db	34
   719   001E0A  14                 	db	20
   720   001E0B  08                 	db	8
   721   001E0C  02                 	db	2
   722   001E0D  01                 	db	1
   723   001E0E  51                 	db	81
   724   001E0F  09                 	db	9
   725   001E10  06                 	db	6
   726   001E11  32                 	db	50
   727   001E12  49                 	db	73
   728   001E13  79                 	db	121
   729   001E14  41                 	db	65
   730   001E15  3E                 	db	62
   731   001E16  7E                 	db	126
   732   001E17  11                 	db	17
   733   001E18  11                 	db	17
   734   001E19  11                 	db	17
   735   001E1A  7E                 	db	126
   736   001E1B  7F                 	db	127
   737   001E1C  49                 	db	73
   738   001E1D  49                 	db	73
   739   001E1E  49                 	db	73
   740   001E1F  36                 	db	54
   741   001E20  3E                 	db	62
   742   001E21  41                 	db	65
   743   001E22  41                 	db	65
   744   001E23  41                 	db	65
   745   001E24  22                 	db	34
   746   001E25  7F                 	db	127
   747   001E26  41                 	db	65
   748   001E27  41                 	db	65
   749   001E28  22                 	db	34
   750   001E29  1C                 	db	28
   751   001E2A  7F                 	db	127
   752   001E2B  49                 	db	73
   753   001E2C  49                 	db	73
   754   001E2D  49                 	db	73
   755   001E2E  41                 	db	65
   756   001E2F  7F                 	db	127
   757   001E30  09                 	db	9
   758   001E31  09                 	db	9
   759   001E32  09                 	db	9
   760   001E33  01                 	db	1
   761   001E34  3E                 	db	62
   762   001E35  41                 	db	65
   763   001E36  49                 	db	73
   764   001E37  49                 	db	73
   765   001E38  7A                 	db	122
   766   001E39  7F                 	db	127
   767   001E3A  08                 	db	8
   768   001E3B  08                 	db	8
   769   001E3C  08                 	db	8
   770   001E3D  7F                 	db	127
   771   001E3E  00                 	db	0
   772   001E3F  41                 	db	65
   773   001E40  7F                 	db	127
   774   001E41  41                 	db	65
   775   001E42  00                 	db	0
   776   001E43  20                 	db	32
   777   001E44  40                 	db	64
   778   001E45  41                 	db	65
   779   001E46  3F                 	db	63
   780   001E47  01                 	db	1
   781   001E48  7F                 	db	127
   782   001E49  08                 	db	8
   783   001E4A  14                 	db	20
   784   001E4B  22                 	db	34
   785   001E4C  41                 	db	65
   786   001E4D  7F                 	db	127
   787   001E4E  40                 	db	64
   788   001E4F  40                 	db	64
   789   001E50  40                 	db	64
   790   001E51  40                 	db	64
   791   001E52  7F                 	db	127
   792   001E53  02                 	db	2
   793   001E54  0C                 	db	12
   794   001E55  02                 	db	2
   795   001E56  7F                 	db	127
   796   001E57  7F                 	db	127
   797   001E58  04                 	db	4
   798   001E59  08                 	db	8
   799   001E5A  10                 	db	16
   800   001E5B  7F                 	db	127
   801   001E5C  3E                 	db	62
   802   001E5D  41                 	db	65
   803   001E5E  41                 	db	65
   804   001E5F  41                 	db	65
   805   001E60  3E                 	db	62
   806   001E61  7F                 	db	127
   807   001E62  09                 	db	9
   808   001E63  09                 	db	9
   809   001E64  09                 	db	9
   810   001E65  06                 	db	6
   811   001E66  3E                 	db	62
   812   001E67  41                 	db	65
   813   001E68  51                 	db	81
   814   001E69  21                 	db	33
   815   001E6A  5E                 	db	94
   816   001E6B                     __end_of_Alpha1:
   817                           	callstack 0
   818   001E6B                     _Alpha2:
   819                           	callstack 0
   820   001E6B  7F                 	db	127
   821   001E6C  09                 	db	9
   822   001E6D  19                 	db	25
   823   001E6E  29                 	db	41
   824   001E6F  46                 	db	70
   825   001E70  46                 	db	70
   826   001E71  49                 	db	73
   827   001E72  49                 	db	73
   828   001E73  49                 	db	73
   829   001E74  31                 	db	49
   830   001E75  01                 	db	1
   831   001E76  01                 	db	1
   832   001E77  7F                 	db	127
   833   001E78  01                 	db	1
   834   001E79  01                 	db	1
   835   001E7A  3F                 	db	63
   836   001E7B  40                 	db	64
   837   001E7C  40                 	db	64
   838   001E7D  40                 	db	64
   839   001E7E  3F                 	db	63
   840   001E7F  1F                 	db	31
   841   001E80  20                 	db	32
   842   001E81  40                 	db	64
   843   001E82  20                 	db	32
   844   001E83  1F                 	db	31
   845   001E84  3F                 	db	63
   846   001E85  40                 	db	64
   847   001E86  38                 	db	56
   848   001E87  40                 	db	64
   849   001E88  3F                 	db	63
   850   001E89  63                 	db	99
   851   001E8A  14                 	db	20
   852   001E8B  08                 	db	8
   853   001E8C  14                 	db	20
   854   001E8D  63                 	db	99
   855   001E8E  07                 	db	7
   856   001E8F  08                 	db	8
   857   001E90  70                 	db	112
   858   001E91  08                 	db	8
   859   001E92  07                 	db	7
   860   001E93  61                 	db	97
   861   001E94  51                 	db	81
   862   001E95  49                 	db	73
   863   001E96  45                 	db	69
   864   001E97  43                 	db	67
   865   001E98  00                 	db	0
   866   001E99  7F                 	db	127
   867   001E9A  41                 	db	65
   868   001E9B  41                 	db	65
   869   001E9C  00                 	db	0
   870   001E9D  02                 	db	2
   871   001E9E  04                 	db	4
   872   001E9F  08                 	db	8
   873   001EA0  10                 	db	16
   874   001EA1  20                 	db	32
   875   001EA2  00                 	db	0
   876   001EA3  41                 	db	65
   877   001EA4  41                 	db	65
   878   001EA5  7F                 	db	127
   879   001EA6  00                 	db	0
   880   001EA7  04                 	db	4
   881   001EA8  02                 	db	2
   882   001EA9  01                 	db	1
   883   001EAA  02                 	db	2
   884   001EAB  04                 	db	4
   885   001EAC  40                 	db	64
   886   001EAD  40                 	db	64
   887   001EAE  40                 	db	64
   888   001EAF  40                 	db	64
   889   001EB0  40                 	db	64
   890   001EB1  00                 	db	0
   891   001EB2  01                 	db	1
   892   001EB3  02                 	db	2
   893   001EB4  04                 	db	4
   894   001EB5  00                 	db	0
   895   001EB6  20                 	db	32
   896   001EB7  54                 	db	84
   897   001EB8  54                 	db	84
   898   001EB9  54                 	db	84
   899   001EBA  78                 	db	120
   900   001EBB  7F                 	db	127
   901   001EBC  48                 	db	72
   902   001EBD  44                 	db	68
   903   001EBE  44                 	db	68
   904   001EBF  38                 	db	56
   905   001EC0  38                 	db	56
   906   001EC1  44                 	db	68
   907   001EC2  44                 	db	68
   908   001EC3  44                 	db	68
   909   001EC4  20                 	db	32
   910   001EC5  38                 	db	56
   911   001EC6  44                 	db	68
   912   001EC7  44                 	db	68
   913   001EC8  48                 	db	72
   914   001EC9  7F                 	db	127
   915   001ECA  38                 	db	56
   916   001ECB  54                 	db	84
   917   001ECC  54                 	db	84
   918   001ECD  54                 	db	84
   919   001ECE  18                 	db	24
   920   001ECF  08                 	db	8
   921   001ED0  7E                 	db	126
   922   001ED1  09                 	db	9
   923   001ED2  01                 	db	1
   924   001ED3  02                 	db	2
   925   001ED4  0C                 	db	12
   926   001ED5  52                 	db	82
   927   001ED6  52                 	db	82
   928   001ED7  52                 	db	82
   929   001ED8  3E                 	db	62
   930   001ED9  7F                 	db	127
   931   001EDA  08                 	db	8
   932   001EDB  04                 	db	4
   933   001EDC  04                 	db	4
   934   001EDD  78                 	db	120
   935   001EDE  00                 	db	0
   936   001EDF  44                 	db	68
   937   001EE0  7D                 	db	125
   938   001EE1  40                 	db	64
   939   001EE2  00                 	db	0
   940   001EE3  20                 	db	32
   941   001EE4  40                 	db	64
   942   001EE5  44                 	db	68
   943   001EE6  3D                 	db	61
   944   001EE7  00                 	db	0
   945   001EE8  7F                 	db	127
   946   001EE9  10                 	db	16
   947   001EEA  28                 	db	40
   948   001EEB  44                 	db	68
   949   001EEC  00                 	db	0
   950   001EED  00                 	db	0
   951   001EEE  41                 	db	65
   952   001EEF  7F                 	db	127
   953   001EF0  40                 	db	64
   954   001EF1  00                 	db	0
   955   001EF2  7C                 	db	124
   956   001EF3  04                 	db	4
   957   001EF4  18                 	db	24
   958   001EF5  04                 	db	4
   959   001EF6  78                 	db	120
   960   001EF7  7C                 	db	124
   961   001EF8  08                 	db	8
   962   001EF9  04                 	db	4
   963   001EFA  04                 	db	4
   964   001EFB  78                 	db	120
   965   001EFC  38                 	db	56
   966   001EFD  44                 	db	68
   967   001EFE  44                 	db	68
   968   001EFF  44                 	db	68
   969   001F00  38                 	db	56
   970   001F01  7C                 	db	124
   971   001F02  14                 	db	20
   972   001F03  14                 	db	20
   973   001F04  14                 	db	20
   974   001F05  08                 	db	8
   975   001F06  08                 	db	8
   976   001F07  14                 	db	20
   977   001F08  14                 	db	20
   978   001F09  18                 	db	24
   979   001F0A  7C                 	db	124
   980   001F0B  7C                 	db	124
   981   001F0C  08                 	db	8
   982   001F0D  04                 	db	4
   983   001F0E  04                 	db	4
   984   001F0F  08                 	db	8
   985   001F10  48                 	db	72
   986   001F11  54                 	db	84
   987   001F12  54                 	db	84
   988   001F13  54                 	db	84
   989   001F14  20                 	db	32
   990   001F15  04                 	db	4
   991   001F16  3F                 	db	63
   992   001F17  44                 	db	68
   993   001F18  40                 	db	64
   994   001F19  20                 	db	32
   995   001F1A  3C                 	db	60
   996   001F1B  40                 	db	64
   997   001F1C  40                 	db	64
   998   001F1D  20                 	db	32
   999   001F1E  7C                 	db	124
  1000   001F1F  1C                 	db	28
  1001   001F20  20                 	db	32
  1002   001F21  40                 	db	64
  1003   001F22  20                 	db	32
  1004   001F23  1C                 	db	28
  1005   001F24  3C                 	db	60
  1006   001F25  40                 	db	64
  1007   001F26  30                 	db	48
  1008   001F27  40                 	db	64
  1009   001F28  3C                 	db	60
  1010   001F29  44                 	db	68
  1011   001F2A  28                 	db	40
  1012   001F2B  10                 	db	16
  1013   001F2C  28                 	db	40
  1014   001F2D  44                 	db	68
  1015   001F2E  0C                 	db	12
  1016   001F2F  50                 	db	80
  1017   001F30  50                 	db	80
  1018   001F31  50                 	db	80
  1019   001F32  3C                 	db	60
  1020   001F33  44                 	db	68
  1021   001F34  64                 	db	100
  1022   001F35  54                 	db	84
  1023   001F36  4C                 	db	76
  1024   001F37  44                 	db	68
  1025   001F38  00                 	db	0
  1026   001F39  08                 	db	8
  1027   001F3A  36                 	db	54
  1028   001F3B  41                 	db	65
  1029   001F3C  00                 	db	0
  1030   001F3D  00                 	db	0
  1031   001F3E  00                 	db	0
  1032   001F3F  7F                 	db	127
  1033   001F40  00                 	db	0
  1034   001F41  00                 	db	0
  1035   001F42  00                 	db	0
  1036   001F43  41                 	db	65
  1037   001F44  36                 	db	54
  1038   001F45  08                 	db	8
  1039   001F46  00                 	db	0
  1040   001F47  10                 	db	16
  1041   001F48  08                 	db	8
  1042   001F49  08                 	db	8
  1043   001F4A  10                 	db	16
  1044   001F4B  08                 	db	8
  1045   001F4C  78                 	db	120
  1046   001F4D  46                 	db	70
  1047   001F4E  41                 	db	65
  1048   001F4F  46                 	db	70
  1049   001F50  78                 	db	120
  1050   001F51                     __end_of_Alpha2:
  1051                           	callstack 0
  1052   000F92                     _TRISA          set	3986
  1053   000FD3                     _OSCCON         set	4051
  1054   000F80                     _PORTAbits      set	3968
  1055   000FC3                     _ADRESL         set	4035
  1056   000FC4                     _ADRESH         set	4036
  1057   000FD7                     _TMR0H          set	4055
  1058   000FD6                     _TMR0L          set	4054
  1059   000FC2                     _ADCON0bits     set	4034
  1060   000FC2                     _ADCON0         set	4034
  1061   000FC0                     _ADCON2         set	4032
  1062   000FC1                     _ADCON1         set	4033
  1063   000F8A                     _LATBbits       set	3978
  1064   000F93                     _TRISB          set	3987
  1065   001F51                     STR_8:
  1066   001F51  20                 	db	32
  1067   001F52  20                 	db	32
  1068   001F53  20                 	db	32
  1069   001F54  20                 	db	32
  1070   001F55  20                 	db	32
  1071   001F56  41                 	db	65	;'A'
  1072   001F57  4E                 	db	78	;'N'
  1073   001F58  55                 	db	85	;'U'
  1074   001F59  20                 	db	32
  1075   001F5A  20                 	db	32
  1076   001F5B  20                 	db	32
  1077   001F5C  20                 	db	32
  1078   001F5D  20                 	db	32
  1079   001F5E  20                 	db	32
  1080   001F5F  20                 	db	32
  1081   001F60  20                 	db	32
  1082   001F61  00                 	db	0
  1083   001F62                     STR_11:
  1084   001F62  20                 	db	32
  1085   001F63  20                 	db	32
  1086   001F64  20                 	db	32
  1087   001F65  20                 	db	32
  1088   001F66  47                 	db	71	;'G'
  1089   001F67  41                 	db	65	;'A'
  1090   001F68  4D                 	db	77	;'M'
  1091   001F69  45                 	db	69	;'E'
  1092   001F6A  20                 	db	32
  1093   001F6B  4F                 	db	79	;'O'
  1094   001F6C  56                 	db	86	;'V'
  1095   001F6D  45                 	db	69	;'E'
  1096   001F6E  52                 	db	82	;'R'
  1097   001F6F  20                 	db	32
  1098   001F70  20                 	db	32
  1099   001F71  20                 	db	32
  1100   001F72  00                 	db	0
  1101   001F73                     STR_7:
  1102   001F73  42                 	db	66	;'B'
  1103   001F74  59                 	db	89	;'Y'
  1104   001F75  3A                 	db	58	;':'
  1105   001F76  20                 	db	32
  1106   001F77  20                 	db	32
  1107   001F78  53                 	db	83	;'S'
  1108   001F79  45                 	db	69	;'E'
  1109   001F7A  42                 	db	66	;'B'
  1110   001F7B  41                 	db	65	;'A'
  1111   001F7C  53                 	db	83	;'S'
  1112   001F7D  54                 	db	84	;'T'
  1113   001F7E  49                 	db	73	;'I'
  1114   001F7F  41                 	db	65	;'A'
  1115   001F80  4E                 	db	78	;'N'
  1116   001F81  20                 	db	32
  1117   001F82  20                 	db	32
  1118   001F83  00                 	db	0
  1119   001F84                     STR_9:
  1120   001F84  53                 	db	83	;'S'
  1121   001F85  74                 	db	116	;'t'
  1122   001F86  61                 	db	97	;'a'
  1123   001F87  72                 	db	114	;'r'
  1124   001F88  74                 	db	116	;'t'
  1125   001F89  20                 	db	32
  1126   001F8A  2D                 	db	45
  1127   001F8B  20                 	db	32
  1128   001F8C  53                 	db	83	;'S'
  1129   001F8D  65                 	db	101	;'e'
  1130   001F8E  6C                 	db	108	;'l'
  1131   001F8F  65                 	db	101	;'e'
  1132   001F90  63                 	db	99	;'c'
  1133   001F91  74                 	db	116	;'t'
  1134   001F92  20                 	db	32
  1135   001F93  20                 	db	32
  1136   001F94  00                 	db	0
  1137   001F95                     STR_10:
  1138   001F95  2A                 	db	42
  1139   001F96  2A                 	db	42
  1140   001F97  2A                 	db	42
  1141   001F98  2A                 	db	42
  1142   001F99  2A                 	db	42
  1143   001F9A  2A                 	db	42
  1144   001F9B  2A                 	db	42
  1145   001F9C  2A                 	db	42
  1146   001F9D  2A                 	db	42
  1147   001F9E  2A                 	db	42
  1148   001F9F  2A                 	db	42
  1149   001FA0  2A                 	db	42
  1150   001FA1  2A                 	db	42
  1151   001FA2  2A                 	db	42
  1152   001FA3  2A                 	db	42
  1153   001FA4  2A                 	db	42
  1154   001FA5  00                 	db	0
  1155   001FA6                     STR_6:
  1156   001FA6  2A                 	db	42
  1157   001FA7  2A                 	db	42
  1158   001FA8  2A                 	db	42
  1159   001FA9  2A                 	db	42
  1160   001FAA  2A                 	db	42
  1161   001FAB  53                 	db	83	;'S'
  1162   001FAC  4E                 	db	78	;'N'
  1163   001FAD  41                 	db	65	;'A'
  1164   001FAE  4B                 	db	75	;'K'
  1165   001FAF  45                 	db	69	;'E'
  1166   001FB0  2A                 	db	42
  1167   001FB1  2A                 	db	42
  1168   001FB2  2A                 	db	42
  1169   001FB3  2A                 	db	42
  1170   001FB4  2A                 	db	42
  1171   001FB5  2A                 	db	42
  1172   001FB6  00                 	db	0
  1173   001FB7                     STR_13:
  1174   001FB7  52                 	db	82	;'R'
  1175   001FB8  65                 	db	101	;'e'
  1176   001FB9  74                 	db	116	;'t'
  1177   001FBA  72                 	db	114	;'r'
  1178   001FBB  79                 	db	121	;'y'
  1179   001FBC  20                 	db	32
  1180   001FBD  2D                 	db	45
  1181   001FBE  20                 	db	32
  1182   001FBF  53                 	db	83	;'S'
  1183   001FC0  65                 	db	101	;'e'
  1184   001FC1  6C                 	db	108	;'l'
  1185   001FC2  65                 	db	101	;'e'
  1186   001FC3  63                 	db	99	;'c'
  1187   001FC4  74                 	db	116	;'t'
  1188   001FC5  00                 	db	0
  1189   001FC6                     STR_14:
  1190   001FC6  4D                 	db	77	;'M'
  1191   001FC7  65                 	db	101	;'e'
  1192   001FC8  6E                 	db	110	;'n'
  1193   001FC9  75                 	db	117	;'u'
  1194   001FCA  20                 	db	32
  1195   001FCB  2D                 	db	45
  1196   001FCC  20                 	db	32
  1197   001FCD  45                 	db	69	;'E'
  1198   001FCE  78                 	db	120	;'x'
  1199   001FCF  69                 	db	105	;'i'
  1200   001FD0  74                 	db	116	;'t'
  1201   001FD1  00                 	db	0
  1202   001FD2                     STR_1:
  1203   001FD2  53                 	db	83	;'S'
  1204   001FD3  70                 	db	112	;'p'
  1205   001FD4  65                 	db	101	;'e'
  1206   001FD5  65                 	db	101	;'e'
  1207   001FD6  64                 	db	100	;'d'
  1208   001FD7  3A                 	db	58	;':'
  1209   001FD8  20                 	db	32
  1210   001FD9  31                 	db	49	;'1'
  1211   001FDA  00                 	db	0
  1212   001FDB                     STR_2:
  1213   001FDB  53                 	db	83	;'S'
  1214   001FDC  70                 	db	112	;'p'
  1215   001FDD  65                 	db	101	;'e'
  1216   001FDE  65                 	db	101	;'e'
  1217   001FDF  64                 	db	100	;'d'
  1218   001FE0  3A                 	db	58	;':'
  1219   001FE1  20                 	db	32
  1220   001FE2  32                 	db	50	;'2'
  1221   001FE3  00                 	db	0
  1222   001FE4                     STR_3:
  1223   001FE4  53                 	db	83	;'S'
  1224   001FE5  70                 	db	112	;'p'
  1225   001FE6  65                 	db	101	;'e'
  1226   001FE7  65                 	db	101	;'e'
  1227   001FE8  64                 	db	100	;'d'
  1228   001FE9  3A                 	db	58	;':'
  1229   001FEA  20                 	db	32
  1230   001FEB  33                 	db	51	;'3'
  1231   001FEC  00                 	db	0
  1232   001FED                     STR_4:
  1233   001FED  53                 	db	83	;'S'
  1234   001FEE  70                 	db	112	;'p'
  1235   001FEF  65                 	db	101	;'e'
  1236   001FF0  65                 	db	101	;'e'
  1237   001FF1  64                 	db	100	;'d'
  1238   001FF2  3A                 	db	58	;':'
  1239   001FF3  20                 	db	32
  1240   001FF4  34                 	db	52	;'4'
  1241   001FF5  00                 	db	0
  1242   001FF6                     STR_5:
  1243   001FF6  53                 	db	83	;'S'
  1244   001FF7  70                 	db	112	;'p'
  1245   001FF8  65                 	db	101	;'e'
  1246   001FF9  65                 	db	101	;'e'
  1247   001FFA  64                 	db	100	;'d'
  1248   001FFB  3A                 	db	58	;':'
  1249   001FFC  20                 	db	32
  1250   001FFD  35                 	db	53	;'5'
  1251   001FFE  00                 	db	0
  1252   001F95                     STR_12          equ	STR_10
  1253   001FFF  00                 	db	0	; dummy byte at the end
  1254   000002                     __activetblptr  equ	2
  1255                           
  1256                           ; #config settings
  1257                           
  1258                           	psect	cinit
  1259   000C12                     __pcinit:
  1260                           	callstack 0
  1261   000C12                     start_initialization:
  1262                           	callstack 0
  1263   000C12                     __initialization:
  1264                           	callstack 0
  1265                           
  1266                           ; Initialize objects allocated to BANK1 (17 bytes)
  1267                           ; load TBLPTR registers with __pidataBANK1
  1268   000C12  0E73               	movlw	low __pidataBANK1
  1269   000C14  6EF6               	movwf	tblptrl,c
  1270   000C16  0E0A               	movlw	high __pidataBANK1
  1271   000C18  6EF7               	movwf	tblptrh,c
  1272   000C1A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1273   000C1C  6EF8               	movwf	tblptru,c
  1274   000C1E  EE01  F000         	lfsr	0,__pdataBANK1
  1275   000C22  EE10 F011          	lfsr	1,17
  1276   000C26                     copy_data0:
  1277   000C26  0009               	tblrd		*+
  1278   000C28  CFF5 FFEE          	movff	tablat,postinc0
  1279   000C2C  50E5               	movf	postdec1,w,c
  1280   000C2E  50E1               	movf	fsr1l,w,c
  1281   000C30  E1FA               	bnz	copy_data0
  1282                           
  1283                           ; Initialize objects allocated to BANK0 (119 bytes)
  1284                           ; load TBLPTR registers with __pidataBANK0
  1285   000C32  0E51               	movlw	low __pidataBANK0
  1286   000C34  6EF6               	movwf	tblptrl,c
  1287   000C36  0E0D               	movlw	high __pidataBANK0
  1288   000C38  6EF7               	movwf	tblptrh,c
  1289   000C3A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1290   000C3C  6EF8               	movwf	tblptru,c
  1291   000C3E  EE00  F080         	lfsr	0,__pdataBANK0
  1292   000C42  EE10 F077          	lfsr	1,119
  1293   000C46                     copy_data1:
  1294   000C46  0009               	tblrd		*+
  1295   000C48  CFF5 FFEE          	movff	tablat,postinc0
  1296   000C4C  50E5               	movf	postdec1,w,c
  1297   000C4E  50E1               	movf	fsr1l,w,c
  1298   000C50  E1FA               	bnz	copy_data1
  1299                           
  1300                           ; Initialize objects allocated to COMRAM (1 bytes)
  1301                           ; load TBLPTR registers with __pidataCOMRAM
  1302   000C52  0E50               	movlw	low __pidataCOMRAM
  1303   000C54  6EF6               	movwf	tblptrl,c
  1304   000C56  0E0D               	movlw	high __pidataCOMRAM
  1305   000C58  6EF7               	movwf	tblptrh,c
  1306   000C5A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1307   000C5C  6EF8               	movwf	tblptru,c
  1308   000C5E  0009               	tblrd		*+	;fetch initializer
  1309   000C60  CFF5 F074          	movff	tablat,__pdataCOMRAM
  1310                           
  1311                           ; Clear objects allocated to COMRAM (72 bytes)
  1312   000C64  EE00  F001         	lfsr	0,__pbssCOMRAM
  1313   000C68  0E48               	movlw	72
  1314   000C6A                     clear_0:
  1315   000C6A  6AEE               	clrf	postinc0,c
  1316   000C6C  06E8               	decf	wreg,f,c
  1317   000C6E  E1FD               	bnz	clear_0
  1318   000C70                     end_of_initialization:
  1319                           	callstack 0
  1320   000C70                     __end_of__initialization:
  1321                           	callstack 0
  1322   000C70  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1323   000C72  6EF8               	movwf	tblptru,c
  1324   000C74  0100               	movlb	0
  1325   000C76  EF1B  F00A         	goto	_main	;jump to C main() function
  1326                           
  1327                           	psect	bssCOMRAM
  1328   000001                     __pbssCOMRAM:
  1329                           	callstack 0
  1330   000001                     _snakeTailX:
  1331                           	callstack 0
  1332   000001                     	ds	34
  1333   000023                     _snakeTailY:
  1334                           	callstack 0
  1335   000023                     	ds	16
  1336   000033                     _key:
  1337                           	callstack 0
  1338   000033                     	ds	2
  1339   000035                     _score:
  1340                           	callstack 0
  1341   000035                     	ds	2
  1342   000037                     _fruitY:
  1343                           	callstack 0
  1344   000037                     	ds	2
  1345   000039                     _fruitX:
  1346                           	callstack 0
  1347   000039                     	ds	2
  1348   00003B                     _snakeTailLen:
  1349                           	callstack 0
  1350   00003B                     	ds	2
  1351   00003D                     _snakeHeadYPos:
  1352                           	callstack 0
  1353   00003D                     	ds	2
  1354   00003F                     _snakeHeadXPos:
  1355                           	callstack 0
  1356   00003F                     	ds	2
  1357   000041                     _gameover:
  1358                           	callstack 0
  1359   000041                     	ds	1
  1360   000042                     _game:
  1361                           	callstack 0
  1362   000042                     	ds	1
  1363   000043                     _looseScreen:
  1364                           	callstack 0
  1365   000043                     	ds	1
  1366   000044                     _speed:
  1367                           	callstack 0
  1368   000044                     	ds	1
  1369   000045                     _seed:
  1370                           	callstack 0
  1371   000045                     	ds	4
  1372                           
  1373                           	psect	dataCOMRAM
  1374   000074                     __pdataCOMRAM:
  1375                           	callstack 0
  1376   000074                     _mainMenu:
  1377                           	callstack 0
  1378   000074                     	ds	1
  1379                           
  1380                           	psect	dataBANK0
  1381   000080                     __pdataBANK0:
  1382                           	callstack 0
  1383   000080                     _LCDStore6:
  1384                           	callstack 0
  1385   000080                     	ds	17
  1386   000091                     _LCDStore5:
  1387                           	callstack 0
  1388   000091                     	ds	17
  1389   0000A2                     _LCDStore4:
  1390                           	callstack 0
  1391   0000A2                     	ds	17
  1392   0000B3                     _LCDStore3:
  1393                           	callstack 0
  1394   0000B3                     	ds	17
  1395   0000C4                     _LCDStore2:
  1396                           	callstack 0
  1397   0000C4                     	ds	17
  1398   0000D5                     _LCDStore1:
  1399                           	callstack 0
  1400   0000D5                     	ds	17
  1401   0000E6                     _LCDStore0:
  1402                           	callstack 0
  1403   0000E6                     	ds	17
  1404                           
  1405                           	psect	dataBANK1
  1406   000100                     __pdataBANK1:
  1407                           	callstack 0
  1408   000100                     _LCDStore7:
  1409                           	callstack 0
  1410   000100                     	ds	17
  1411                           
  1412                           	psect	cstackCOMRAM
  1413   000049                     __pcstackCOMRAM:
  1414                           	callstack 0
  1415   000049                     ?___lmul:
  1416                           	callstack 0
  1417   000049                     placeChar@y:
  1418                           	callstack 0
  1419   000049                     srand@s:
  1420                           	callstack 0
  1421   000049                     ___lmul@multiplier:
  1422                           	callstack 0
  1423   000049                     ??_LCD_WriteByte:
  1424   000049                     
  1425                           ; 1 bytes @ 0x0
  1426   000049                     	ds	1
  1427   00004A                     placeChar@c:
  1428                           	callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x1
  1431   00004A                     	ds	1
  1432   00004B                     LCD_WriteByte@command:
  1433                           	callstack 0
  1434   00004B                     placeChar@x:
  1435                           	callstack 0
  1436   00004B                     ??_srand:
  1437   00004B                     
  1438                           ; 1 bytes @ 0x2
  1439   00004B                     	ds	1
  1440   00004C                     LCD_WriteData@data:
  1441                           	callstack 0
  1442   00004C                     LCD_WriteCommand@command:
  1443                           	callstack 0
  1444   00004C                     clearAllChar@i:
  1445                           	callstack 0
  1446   00004C                     
  1447                           ; 1 bytes @ 0x3
  1448   00004C                     	ds	1
  1449   00004D                     LCD_ClearGraphics@x:
  1450                           	callstack 0
  1451   00004D                     clearAllChar@j:
  1452                           	callstack 0
  1453   00004D                     LCD_GraphicsDisplayString@str:
  1454                           	callstack 0
  1455   00004D                     ___lmul@multiplicand:
  1456                           	callstack 0
  1457   00004D                     ??_LCD_Init:
  1458   00004D                     ??_LCD_EnableGraphics:
  1459   00004D                     ??_createRandomSeed:
  1460                           
  1461                           ; 1 bytes @ 0x4
  1462   00004D                     	ds	1
  1463   00004E                     LCD_ClearGraphics@y:
  1464                           	callstack 0
  1465                           
  1466                           ; 1 bytes @ 0x5
  1467   00004E                     	ds	1
  1468   00004F                     ??_LCD_GraphicsDisplayString:
  1469                           
  1470                           ; 1 bytes @ 0x6
  1471   00004F                     	ds	2
  1472   000051                     createRandomSeed@adc_value:
  1473                           	callstack 0
  1474   000051                     ___lmul@product:
  1475                           	callstack 0
  1476   000051                     
  1477                           ; 1 bytes @ 0x8
  1478   000051                     	ds	1
  1479   000052                     _LCD_GraphicsDisplayString$113:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x9
  1483   000052                     	ds	1
  1484   000053                     createRandomSeed@timer_value:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0xA
  1488   000053                     	ds	1
  1489   000054                     _LCD_GraphicsDisplayString$115:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0xB
  1493   000054                     	ds	1
  1494   000055                     ?_rand:
  1495                           	callstack 0
  1496   000055                     createRandomSeed@i:
  1497                           	callstack 0
  1498                           
  1499                           ; 2 bytes @ 0xC
  1500   000055                     	ds	1
  1501   000056                     LCD_GraphicsDisplayString@shouldContinue:
  1502                           	callstack 0
  1503                           
  1504                           ; 1 bytes @ 0xD
  1505   000056                     	ds	1
  1506   000057                     LCD_GraphicsDisplayString@colListA:
  1507                           	callstack 0
  1508   000057                     ??_rand:
  1509                           
  1510                           ; 1 bytes @ 0xE
  1511   000057                     	ds	4
  1512   00005B                     ?___awmod:
  1513                           	callstack 0
  1514   00005B                     ___awmod@dividend:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x12
  1518   00005B                     	ds	1
  1519   00005C                     LCD_GraphicsDisplayString@colListB:
  1520                           	callstack 0
  1521                           
  1522                           ; 5 bytes @ 0x13
  1523   00005C                     	ds	1
  1524   00005D                     ___awmod@divisor:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x14
  1528   00005D                     	ds	2
  1529   00005F                     ___awmod@counter:
  1530                           	callstack 0
  1531   00005F                     
  1532                           ; 1 bytes @ 0x16
  1533   00005F                     	ds	1
  1534   000060                     ___awmod@sign:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x17
  1538   000060                     	ds	1
  1539   000061                     LCD_GraphicsDisplayString@count:
  1540                           	callstack 0
  1541   000061                     random@upper_bound:
  1542                           	callstack 0
  1543                           
  1544                           ; 1 bytes @ 0x18
  1545   000061                     	ds	1
  1546   000062                     LCD_GraphicsDisplayString@dataA:
  1547                           	callstack 0
  1548   000062                     ??_random:
  1549                           
  1550                           ; 1 bytes @ 0x19
  1551   000062                     	ds	1
  1552   000063                     LCD_GraphicsDisplayString@dataB:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x1A
  1556   000063                     	ds	1
  1557   000064                     LCD_GraphicsDisplayString@line:
  1558                           	callstack 0
  1559   000064                     random@lower_bound:
  1560                           	callstack 0
  1561                           
  1562                           ; 1 bytes @ 0x1B
  1563   000064                     	ds	1
  1564   000065                     LCD_GraphicsDisplayString@letterA:
  1565                           	callstack 0
  1566   000065                     ??_setup:
  1567   000065                     ??_logic:
  1568                           
  1569                           ; 1 bytes @ 0x1C
  1570   000065                     	ds	1
  1571   000066                     LCD_GraphicsDisplayString@letterB:
  1572                           	callstack 0
  1573                           
  1574                           ; 1 bytes @ 0x1D
  1575   000066                     	ds	1
  1576   000067                     LCD_GraphicsDisplayString@row:
  1577                           	callstack 0
  1578   000067                     logic@prev2X:
  1579                           	callstack 0
  1580                           
  1581                           ; 1 bytes @ 0x1E
  1582   000067                     	ds	1
  1583   000068                     LCD_GraphicsDisplayString@colInd:
  1584                           	callstack 0
  1585   000068                     logic@prev2Y:
  1586                           	callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x1F
  1589   000068                     	ds	1
  1590   000069                     LCD_GraphicsDisplayString@indA:
  1591                           	callstack 0
  1592   000069                     logic@prevX:
  1593                           	callstack 0
  1594                           
  1595                           ; 1 bytes @ 0x20
  1596   000069                     	ds	1
  1597   00006A                     LCD_GraphicsDisplayString@indB:
  1598                           	callstack 0
  1599   00006A                     logic@prevY:
  1600                           	callstack 0
  1601                           
  1602                           ; 1 bytes @ 0x21
  1603   00006A                     	ds	1
  1604   00006B                     logic@i_395:
  1605                           	callstack 0
  1606   00006B                     ??_draw:
  1607                           
  1608                           ; 1 bytes @ 0x22
  1609   00006B                     	ds	1
  1610   00006C                     logic@i:
  1611                           	callstack 0
  1612                           
  1613                           ; 1 bytes @ 0x23
  1614   00006C                     	ds	3
  1615   00006F                     draw@k:
  1616                           	callstack 0
  1617                           
  1618                           ; 1 bytes @ 0x26
  1619   00006F                     	ds	1
  1620   000070                     draw@i:
  1621                           	callstack 0
  1622                           
  1623                           ; 1 bytes @ 0x27
  1624   000070                     	ds	1
  1625   000071                     draw@j:
  1626                           	callstack 0
  1627                           
  1628                           ; 1 bytes @ 0x28
  1629   000071                     	ds	1
  1630   000072                     ??_main:
  1631                           
  1632                           ; 1 bytes @ 0x29
  1633   000072                     	ds	2
  1634                           
  1635 ;;
  1636 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1637 ;;
  1638 ;; *************** function _main *****************
  1639 ;; Defined at:
  1640 ;;		line 272 in file "Pls.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1
  1654 ;;      Params:         0       0       0
  1655 ;;      Locals:         0       0       0
  1656 ;;      Temps:          2       0       0
  1657 ;;      Totals:         2       0       0
  1658 ;;Total ram usage:        2 bytes
  1659 ;; Hardware stack levels required when called: 5
  1660 ;; This function calls:
  1661 ;;		_LCD_ClearGraphics
  1662 ;;		_LCD_EnableGraphics
  1663 ;;		_LCD_GraphicsDisplayString
  1664 ;;		_LCD_Init
  1665 ;;		_createRandomSeed
  1666 ;;		_displaySpeed
  1667 ;;		_draw
  1668 ;;		_input
  1669 ;;		_logic
  1670 ;;		_setup
  1671 ;; This function is called by:
  1672 ;;		Startup code after reset
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text0
  1677   001436                     __ptext0:
  1678                           	callstack 0
  1679   001436                     _main:
  1680                           	callstack 26
  1681   001436                     
  1682                           ;Pls.c: 273:     OSCCON = 0x70;
  1683   001436  0E70               	movlw	112
  1684   001438  6ED3               	movwf	211,c	;volatile
  1685   00143A                     
  1686                           ;Pls.c: 274:     TRISA = 0xFF;
  1687   00143A  6892               	setf	146,c	;volatile
  1688   00143C                     
  1689                           ;Pls.c: 276:     createRandomSeed();
  1690   00143C  EC0A  F008         	call	_createRandomSeed	;wreg free
  1691   001440                     
  1692                           ;Pls.c: 278:     LCD_Init();
  1693   001440  EC6B  F007         	call	_LCD_Init	;wreg free
  1694   001444                     
  1695                           ;Pls.c: 279:     LCD_EnableGraphics();
  1696   001444  EC84  F005         	call	_LCD_EnableGraphics	;wreg free
  1697   001448                     
  1698                           ;Pls.c: 280:     LCD_ClearGraphics();
  1699   001448  ECD5  F005         	call	_LCD_ClearGraphics	;wreg free
  1700   00144C                     
  1701                           ;Pls.c: 282:     LCD_GraphicsDisplayString(0, "*****SNAKE******");
  1702   00144C  0EA6               	movlw	low STR_6
  1703   00144E  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1704   001450  0E1F               	movlw	high STR_6
  1705   001452  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1706   001454  0E00               	movlw	0
  1707   001456  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1708   00145A                     
  1709                           ;Pls.c: 284:     LCD_GraphicsDisplayString(2, "BY:  SEBASTIAN  ");
  1710   00145A  0E73               	movlw	low STR_7
  1711   00145C  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1712   00145E  0E1F               	movlw	high STR_7
  1713   001460  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1714   001462  0E02               	movlw	2
  1715   001464  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1716   001468                     
  1717                           ;Pls.c: 285:     LCD_GraphicsDisplayString(3, "     ANU        ");
  1718   001468  0E51               	movlw	low STR_8
  1719   00146A  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1720   00146C  0E1F               	movlw	high STR_8
  1721   00146E  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1722   001470  0E03               	movlw	3
  1723   001472  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1724   001476                     
  1725                           ;Pls.c: 286:     LCD_GraphicsDisplayString(5, "Start - Select  ");
  1726   001476  0E84               	movlw	low STR_9
  1727   001478  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1728   00147A  0E1F               	movlw	high STR_9
  1729   00147C  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1730   00147E  0E05               	movlw	5
  1731   001480  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1732   001484                     l2191:
  1733                           
  1734                           ;Pls.c: 289:     displaySpeed();
  1735   001484  EC24  F007         	call	_displaySpeed	;wreg free
  1736                           
  1737                           ;Pls.c: 291:     while (!PORTAbits.RA6) {
  1738   001488  EF78  F00A         	goto	l285
  1739   00148C                     l286:
  1740                           
  1741                           ;Pls.c: 292:         if (PORTAbits.RA2 && speed < 5) {
  1742   00148C  A480               	btfss	128,2,c	;volatile
  1743   00148E  EF4B  F00A         	goto	u1481
  1744   001492  EF4D  F00A         	goto	u1480
  1745   001496                     u1481:
  1746   001496  EF5F  F00A         	goto	l287
  1747   00149A                     u1480:
  1748   00149A  0E05               	movlw	5
  1749   00149C  6044               	cpfslt	_speed^0,c
  1750   00149E  EF53  F00A         	goto	u1491
  1751   0014A2  EF55  F00A         	goto	u1490
  1752   0014A6                     u1491:
  1753   0014A6  EF5F  F00A         	goto	l287
  1754   0014AA                     u1490:
  1755   0014AA                     
  1756                           ;Pls.c: 293:             speed++;
  1757   0014AA  2A44               	incf	_speed^0,f,c
  1758   0014AC                     l288:
  1759   0014AC  B480               	btfsc	128,2,c	;volatile
  1760   0014AE  EF5B  F00A         	goto	u1501
  1761   0014B2  EF5D  F00A         	goto	u1500
  1762   0014B6                     u1501:
  1763   0014B6  EF56  F00A         	goto	l288
  1764   0014BA                     u1500:
  1765   0014BA  EF42  F00A         	goto	l2191
  1766   0014BE                     l287:
  1767   0014BE  A280               	btfss	128,1,c	;volatile
  1768   0014C0  EF64  F00A         	goto	u1511
  1769   0014C4  EF66  F00A         	goto	u1510
  1770   0014C8                     u1511:
  1771   0014C8  EF78  F00A         	goto	l285
  1772   0014CC                     u1510:
  1773   0014CC  5044               	movf	_speed^0,w,c
  1774   0014CE  B4D8               	btfsc	status,2,c
  1775   0014D0  EF6C  F00A         	goto	u1521
  1776   0014D4  EF6E  F00A         	goto	u1520
  1777   0014D8                     u1521:
  1778   0014D8  EF78  F00A         	goto	l285
  1779   0014DC                     u1520:
  1780   0014DC                     
  1781                           ;Pls.c: 297:             speed--;
  1782   0014DC  0644               	decf	_speed^0,f,c
  1783   0014DE                     l293:
  1784   0014DE  B280               	btfsc	128,1,c	;volatile
  1785   0014E0  EF74  F00A         	goto	u1531
  1786   0014E4  EF76  F00A         	goto	u1530
  1787   0014E8                     u1531:
  1788   0014E8  EF6F  F00A         	goto	l293
  1789   0014EC                     u1530:
  1790   0014EC  EF42  F00A         	goto	l2191
  1791   0014F0                     l285:
  1792                           
  1793                           ;Pls.c: 291:     while (!PORTAbits.RA6) {
  1794   0014F0  AC80               	btfss	128,6,c	;volatile
  1795   0014F2  EF7D  F00A         	goto	u1541
  1796   0014F6  EF7F  F00A         	goto	u1540
  1797   0014FA                     u1541:
  1798   0014FA  EF46  F00A         	goto	l286
  1799   0014FE                     u1540:
  1800   0014FE                     l2203:
  1801                           
  1802                           ;Pls.c: 307:     setup();
  1803   0014FE  ECBA  F007         	call	_setup	;wreg free
  1804                           
  1805                           ;Pls.c: 309:     while (!gameover) {
  1806   001502  EFEC  F00A         	goto	l2225
  1807   001506                     l2205:
  1808                           
  1809                           ;Pls.c: 310:         draw();
  1810   001506  EC1E  F009         	call	_draw	;wreg free
  1811   00150A                     
  1812                           ;Pls.c: 311:         input();
  1813   00150A  ECE4  F006         	call	_input	;wreg free
  1814   00150E                     
  1815                           ;Pls.c: 312:         logic();
  1816   00150E  EC2D  F00B         	call	_logic	;wreg free
  1817                           
  1818                           ;Pls.c: 314:         switch (speed) {
  1819   001512  EFD1  F00A         	goto	l2223
  1820   001516                     l301:
  1821                           
  1822                           ;Pls.c: 316:                 _delay((unsigned long)((0)*(8000000/4000.0)));
  1823                           ;Pls.c: 317:                 break;
  1824   001516  EFEC  F00A         	goto	l2225
  1825   00151A                     l2211:
  1826                           
  1827                           ;Pls.c: 319:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1828   00151A  0E02               	movlw	2
  1829   00151C  6E73               	movwf	(??_main+1)^0,c
  1830   00151E  0E04               	movlw	4
  1831   001520  6E72               	movwf	??_main^0,c
  1832   001522  0EBA               	movlw	186
  1833   001524                     u1587:
  1834   001524  2EE8               	decfsz	wreg,f,c
  1835   001526  D7FE               	bra	u1587
  1836   001528  2E72               	decfsz	??_main^0,f,c
  1837   00152A  D7FC               	bra	u1587
  1838   00152C  2E73               	decfsz	(??_main+1)^0,f,c
  1839   00152E  D7FA               	bra	u1587
  1840   001530  D000               	nop2	
  1841                           
  1842                           ;Pls.c: 320:                 break;
  1843   001532  EFEC  F00A         	goto	l2225
  1844   001536                     l2213:
  1845                           
  1846                           ;Pls.c: 322:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  1847   001536  0E03               	movlw	3
  1848   001538  6E73               	movwf	(??_main+1)^0,c
  1849   00153A  0E08               	movlw	8
  1850   00153C  6E72               	movwf	??_main^0,c
  1851   00153E  0E77               	movlw	119
  1852   001540                     u1597:
  1853   001540  2EE8               	decfsz	wreg,f,c
  1854   001542  D7FE               	bra	u1597
  1855   001544  2E72               	decfsz	??_main^0,f,c
  1856   001546  D7FC               	bra	u1597
  1857   001548  2E73               	decfsz	(??_main+1)^0,f,c
  1858   00154A  D7FA               	bra	u1597
  1859   00154C  0000               	nop	
  1860                           
  1861                           ;Pls.c: 323:                 break;
  1862   00154E  EFEC  F00A         	goto	l2225
  1863   001552                     l2215:
  1864                           
  1865                           ;Pls.c: 325:                 _delay((unsigned long)((300)*(8000000/4000.0)));
  1866   001552  0E04               	movlw	4
  1867   001554  6E73               	movwf	(??_main+1)^0,c
  1868   001556  0E0C               	movlw	12
  1869   001558  6E72               	movwf	??_main^0,c
  1870   00155A  0E34               	movlw	52
  1871   00155C                     u1607:
  1872   00155C  2EE8               	decfsz	wreg,f,c
  1873   00155E  D7FE               	bra	u1607
  1874   001560  2E72               	decfsz	??_main^0,f,c
  1875   001562  D7FC               	bra	u1607
  1876   001564  2E73               	decfsz	(??_main+1)^0,f,c
  1877   001566  D7FA               	bra	u1607
  1878                           
  1879                           ;Pls.c: 326:                 break;
  1880   001568  EFEC  F00A         	goto	l2225
  1881   00156C                     l2217:
  1882                           
  1883                           ;Pls.c: 328:                 _delay((unsigned long)((400)*(8000000/4000.0)));
  1884   00156C  0E05               	movlw	5
  1885   00156E  6E73               	movwf	(??_main+1)^0,c
  1886   001570  0E0F               	movlw	15
  1887   001572  6E72               	movwf	??_main^0,c
  1888   001574  0EF1               	movlw	241
  1889   001576                     u1617:
  1890   001576  2EE8               	decfsz	wreg,f,c
  1891   001578  D7FE               	bra	u1617
  1892   00157A  2E72               	decfsz	??_main^0,f,c
  1893   00157C  D7FC               	bra	u1617
  1894   00157E  2E73               	decfsz	(??_main+1)^0,f,c
  1895   001580  D7FA               	bra	u1617
  1896   001582  0000               	nop	
  1897                           
  1898                           ;Pls.c: 329:                 break;
  1899   001584  EFEC  F00A         	goto	l2225
  1900   001588                     l2219:
  1901                           
  1902                           ;Pls.c: 331:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  1903   001588  0E06               	movlw	6
  1904   00158A  6E73               	movwf	(??_main+1)^0,c
  1905   00158C  0E13               	movlw	19
  1906   00158E  6E72               	movwf	??_main^0,c
  1907   001590  0EAE               	movlw	174
  1908   001592                     u1627:
  1909   001592  2EE8               	decfsz	wreg,f,c
  1910   001594  D7FE               	bra	u1627
  1911   001596  2E72               	decfsz	??_main^0,f,c
  1912   001598  D7FC               	bra	u1627
  1913   00159A  2E73               	decfsz	(??_main+1)^0,f,c
  1914   00159C  D7FA               	bra	u1627
  1915                           
  1916                           ;Pls.c: 332:                 break;
  1917   00159E  EFEC  F00A         	goto	l2225
  1918   0015A2                     l2223:
  1919   0015A2  5044               	movf	_speed^0,w,c
  1920                           
  1921                           ; Switch size 1, requested type "simple"
  1922                           ; Number of cases is 6, Range of values is 0 to 5
  1923                           ; switch strategies available:
  1924                           ; Name         Instructions Cycles
  1925                           ; simple_byte           19    10 (average)
  1926                           ;	Chosen strategy is simple_byte
  1927   0015A4  0A00               	xorlw	0	; case 0
  1928   0015A6  B4D8               	btfsc	status,2,c
  1929   0015A8  EF8B  F00A         	goto	l301
  1930   0015AC  0A01               	xorlw	1	; case 1
  1931   0015AE  B4D8               	btfsc	status,2,c
  1932   0015B0  EF8D  F00A         	goto	l2211
  1933   0015B4  0A03               	xorlw	3	; case 2
  1934   0015B6  B4D8               	btfsc	status,2,c
  1935   0015B8  EF9B  F00A         	goto	l2213
  1936   0015BC  0A01               	xorlw	1	; case 3
  1937   0015BE  B4D8               	btfsc	status,2,c
  1938   0015C0  EFA9  F00A         	goto	l2215
  1939   0015C4  0A07               	xorlw	7	; case 4
  1940   0015C6  B4D8               	btfsc	status,2,c
  1941   0015C8  EFB6  F00A         	goto	l2217
  1942   0015CC  0A01               	xorlw	1	; case 5
  1943   0015CE  B4D8               	btfsc	status,2,c
  1944   0015D0  EFC4  F00A         	goto	l2219
  1945   0015D4  EFEC  F00A         	goto	l2225
  1946   0015D8                     l2225:
  1947                           
  1948                           ;Pls.c: 309:     while (!gameover) {
  1949   0015D8  5041               	movf	_gameover^0,w,c
  1950   0015DA  B4D8               	btfsc	status,2,c
  1951   0015DC  EFF2  F00A         	goto	u1551
  1952   0015E0  EFF4  F00A         	goto	u1550
  1953   0015E4                     u1551:
  1954   0015E4  EF83  F00A         	goto	l2205
  1955   0015E8                     u1550:
  1956   0015E8                     
  1957                           ;Pls.c: 336:     LCD_ClearGraphics();
  1958   0015E8  ECD5  F005         	call	_LCD_ClearGraphics	;wreg free
  1959   0015EC                     
  1960                           ;Pls.c: 337:     LCD_GraphicsDisplayString(1, "****************");
  1961   0015EC  0E95               	movlw	low STR_10
  1962   0015EE  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1963   0015F0  0E1F               	movlw	high STR_10
  1964   0015F2  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1965   0015F4  0E01               	movlw	1
  1966   0015F6  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1967   0015FA                     
  1968                           ;Pls.c: 338:     LCD_GraphicsDisplayString(2, "    GAME OVER   ");
  1969   0015FA  0E62               	movlw	low STR_11
  1970   0015FC  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1971   0015FE  0E1F               	movlw	high STR_11
  1972   001600  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1973   001602  0E02               	movlw	2
  1974   001604  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1975   001608                     
  1976                           ;Pls.c: 339:     LCD_GraphicsDisplayString(3, "****************");
  1977   001608  0E95               	movlw	low STR_10
  1978   00160A  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1979   00160C  0E1F               	movlw	high STR_10
  1980   00160E  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1981   001610  0E03               	movlw	3
  1982   001612  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1983   001616                     
  1984                           ;Pls.c: 340:     LCD_GraphicsDisplayString(5, "Retry - Select");
  1985   001616  0EB7               	movlw	low STR_13
  1986   001618  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1987   00161A  0E1F               	movlw	high STR_13
  1988   00161C  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1989   00161E  0E05               	movlw	5
  1990   001620  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1991   001624                     
  1992                           ;Pls.c: 341:     LCD_GraphicsDisplayString(6, "Menu - Exit");
  1993   001624  0EC6               	movlw	low STR_14
  1994   001626  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  1995   001628  0E1F               	movlw	high STR_14
  1996   00162A  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  1997   00162C  0E06               	movlw	6
  1998   00162E  EC53  F00C         	call	_LCD_GraphicsDisplayString
  1999                           
  2000                           ;Pls.c: 343:     while (!PORTAbits.RA5) {
  2001   001632  EF24  F00B         	goto	l309
  2002   001636                     l310:
  2003                           
  2004                           ;Pls.c: 344:         if (PORTAbits.RA6) {
  2005   001636  AC80               	btfss	128,6,c	;volatile
  2006   001638  EF20  F00B         	goto	u1561
  2007   00163C  EF22  F00B         	goto	u1560
  2008   001640                     u1561:
  2009   001640  EF24  F00B         	goto	l309
  2010   001644                     u1560:
  2011   001644  EF7F  F00A         	goto	l2203
  2012   001648                     l309:
  2013                           
  2014                           ;Pls.c: 343:     while (!PORTAbits.RA5) {
  2015   001648  AA80               	btfss	128,5,c	;volatile
  2016   00164A  EF29  F00B         	goto	u1571
  2017   00164E  EF2B  F00B         	goto	u1570
  2018   001652                     u1571:
  2019   001652  EF1B  F00B         	goto	l310
  2020   001656                     u1570:
  2021   001656  EF00  F000         	goto	start
  2022   00165A                     __end_of_main:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _setup *****************
  2026 ;; Defined at:
  2027 ;;		line 150 in file "Pls.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1
  2041 ;;      Params:         0       0       0
  2042 ;;      Locals:         0       0       0
  2043 ;;      Temps:          1       0       0
  2044 ;;      Totals:         1       0       0
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 3
  2048 ;; This function calls:
  2049 ;;		_random
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text1
  2056   000F74                     __ptext1:
  2057                           	callstack 0
  2058   000F74                     _setup:
  2059                           	callstack 27
  2060   000F74                     
  2061                           ;Pls.c: 153:     gameover = 0;
  2062   000F74  6A41               	clrf	_gameover^0,c
  2063   000F76                     
  2064                           ;Pls.c: 156:     snakeHeadXPos = 7;
  2065   000F76  0E00               	movlw	0
  2066   000F78  6E40               	movwf	(_snakeHeadXPos+1)^0,c
  2067   000F7A  0E07               	movlw	7
  2068   000F7C  6E3F               	movwf	_snakeHeadXPos^0,c
  2069                           
  2070                           ;Pls.c: 157:     snakeHeadYPos = 4;
  2071   000F7E  0E00               	movlw	0
  2072   000F80  6E3E               	movwf	(_snakeHeadYPos+1)^0,c
  2073   000F82  0E04               	movlw	4
  2074   000F84  6E3D               	movwf	_snakeHeadYPos^0,c
  2075   000F86                     
  2076                           ;Pls.c: 160:     fruitX = random(0, 15);
  2077   000F86  0E0F               	movlw	15
  2078   000F88  6E61               	movwf	random@upper_bound^0,c
  2079   000F8A  0E00               	movlw	0
  2080   000F8C  EC4F  F005         	call	_random
  2081   000F90  6E65               	movwf	??_setup^0,c
  2082   000F92  5065               	movf	??_setup^0,w,c
  2083   000F94  6E39               	movwf	_fruitX^0,c
  2084   000F96  6A3A               	clrf	(_fruitX+1)^0,c
  2085   000F98                     
  2086                           ;Pls.c: 161:     fruitY = random(0, 7);
  2087   000F98  0E07               	movlw	7
  2088   000F9A  6E61               	movwf	random@upper_bound^0,c
  2089   000F9C  0E00               	movlw	0
  2090   000F9E  EC4F  F005         	call	_random
  2091   000FA2  6E65               	movwf	??_setup^0,c
  2092   000FA4  5065               	movf	??_setup^0,w,c
  2093   000FA6  6E37               	movwf	_fruitY^0,c
  2094   000FA8  6A38               	clrf	(_fruitY+1)^0,c
  2095                           
  2096                           ;Pls.c: 163:     while (fruitX == 0)
  2097   000FAA  EFE0  F007         	goto	l1985
  2098   000FAE                     l1983:
  2099                           
  2100                           ;Pls.c: 164:         fruitX = random(0, 15);
  2101   000FAE  0E0F               	movlw	15
  2102   000FB0  6E61               	movwf	random@upper_bound^0,c
  2103   000FB2  0E00               	movlw	0
  2104   000FB4  EC4F  F005         	call	_random
  2105   000FB8  6E65               	movwf	??_setup^0,c
  2106   000FBA  5065               	movf	??_setup^0,w,c
  2107   000FBC  6E39               	movwf	_fruitX^0,c
  2108   000FBE  6A3A               	clrf	(_fruitX+1)^0,c
  2109   000FC0                     l1985:
  2110                           
  2111                           ;Pls.c: 163:     while (fruitX == 0)
  2112   000FC0  5039               	movf	_fruitX^0,w,c
  2113   000FC2  103A               	iorwf	(_fruitX+1)^0,w,c
  2114   000FC4  B4D8               	btfsc	status,2,c
  2115   000FC6  EFE7  F007         	goto	u1221
  2116   000FCA  EFE9  F007         	goto	u1220
  2117   000FCE                     u1221:
  2118   000FCE  EFD7  F007         	goto	l1983
  2119   000FD2                     u1220:
  2120   000FD2  EFF4  F007         	goto	l1989
  2121   000FD6                     l1987:
  2122                           
  2123                           ;Pls.c: 167:         fruitY = random(0, 7);
  2124   000FD6  0E07               	movlw	7
  2125   000FD8  6E61               	movwf	random@upper_bound^0,c
  2126   000FDA  0E00               	movlw	0
  2127   000FDC  EC4F  F005         	call	_random
  2128   000FE0  6E65               	movwf	??_setup^0,c
  2129   000FE2  5065               	movf	??_setup^0,w,c
  2130   000FE4  6E37               	movwf	_fruitY^0,c
  2131   000FE6  6A38               	clrf	(_fruitY+1)^0,c
  2132   000FE8                     l1989:
  2133                           
  2134                           ;Pls.c: 166:     while (fruitY == 0)
  2135   000FE8  5037               	movf	_fruitY^0,w,c
  2136   000FEA  1038               	iorwf	(_fruitY+1)^0,w,c
  2137   000FEC  B4D8               	btfsc	status,2,c
  2138   000FEE  EFFB  F007         	goto	u1231
  2139   000FF2  EFFD  F007         	goto	u1230
  2140   000FF6                     u1231:
  2141   000FF6  EFEB  F007         	goto	l1987
  2142   000FFA                     u1230:
  2143   000FFA                     
  2144                           ;Pls.c: 170:     score = 0;
  2145   000FFA  0E00               	movlw	0
  2146   000FFC  6E36               	movwf	(_score+1)^0,c
  2147   000FFE  0E00               	movlw	0
  2148   001000  6E35               	movwf	_score^0,c
  2149                           
  2150                           ;Pls.c: 171:     snakeTailLen = 0;
  2151   001002  0E00               	movlw	0
  2152   001004  6E3C               	movwf	(_snakeTailLen+1)^0,c
  2153   001006  0E00               	movlw	0
  2154   001008  6E3B               	movwf	_snakeTailLen^0,c
  2155                           
  2156                           ;Pls.c: 172:     key = 0;
  2157   00100A  0E00               	movlw	0
  2158   00100C  6E34               	movwf	(_key+1)^0,c
  2159   00100E  0E00               	movlw	0
  2160   001010  6E33               	movwf	_key^0,c
  2161   001012  0012               	return		;funcret
  2162   001014                     __end_of_setup:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function _logic *****************
  2166 ;; Defined at:
  2167 ;;		line 183 in file "Pls.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  i               1   34[COMRAM] unsigned char 
  2172 ;;  i               1   35[COMRAM] unsigned char 
  2173 ;;  prevY           1   33[COMRAM] unsigned char 
  2174 ;;  prevX           1   32[COMRAM] unsigned char 
  2175 ;;  prev2Y          1   31[COMRAM] unsigned char 
  2176 ;;  prev2X          1   30[COMRAM] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1
  2186 ;;      Params:         0       0       0
  2187 ;;      Locals:         6       0       0
  2188 ;;      Temps:          2       0       0
  2189 ;;      Totals:         8       0       0
  2190 ;;Total ram usage:        8 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 3
  2193 ;; This function calls:
  2194 ;;		_random
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text2
  2201   00165A                     __ptext2:
  2202                           	callstack 0
  2203   00165A                     _logic:
  2204                           	callstack 27
  2205   00165A                     
  2206                           ;Pls.c: 186:     unsigned char prevX = snakeTailX[0];
  2207   00165A  C001  F069         	movff	_snakeTailX,logic@prevX
  2208                           
  2209                           ;Pls.c: 187:     unsigned char prevY = snakeTailY[0];
  2210   00165E  C023  F06A         	movff	_snakeTailY,logic@prevY
  2211                           
  2212                           ;Pls.c: 189:     unsigned char prev2X, prev2Y;;Pls.c: 191:     snakeTailX[0] = snakeHead
      +                          XPos;
  2213   001662  C03F  F001         	movff	_snakeHeadXPos,_snakeTailX
  2214   001666  C040  F002         	movff	_snakeHeadXPos+1,_snakeTailX+1
  2215                           
  2216                           ;Pls.c: 192:     snakeTailY[0] = snakeHeadYPos;
  2217   00166A  C03D  F023         	movff	_snakeHeadYPos,_snakeTailY
  2218   00166E  C03E  F024         	movff	_snakeHeadYPos+1,_snakeTailY+1
  2219   001672                     
  2220                           ;Pls.c: 194:     for (unsigned char i = 1; i < snakeTailLen; i++) {
  2221   001672  0E01               	movlw	1
  2222   001674  6E6C               	movwf	logic@i^0,c
  2223   001676  EF6C  F00B         	goto	l2005
  2224   00167A                     l1997:
  2225                           
  2226                           ;Pls.c: 195:         prev2X = snakeTailX[i];
  2227   00167A  506C               	movf	logic@i^0,w,c
  2228   00167C  0D02               	mullw	2
  2229   00167E  50F3               	movf	243,w,c
  2230   001680  0F01               	addlw	low _snakeTailX
  2231   001682  6ED9               	movwf	fsr2l,c
  2232   001684  6ADA               	clrf	fsr2h,c
  2233   001686  50DF               	movf	indf2,w,c
  2234   001688  6E67               	movwf	logic@prev2X^0,c
  2235                           
  2236                           ;Pls.c: 196:         prev2Y = snakeTailY[i];
  2237   00168A  506C               	movf	logic@i^0,w,c
  2238   00168C  0D02               	mullw	2
  2239   00168E  50F3               	movf	243,w,c
  2240   001690  0F23               	addlw	low _snakeTailY
  2241   001692  6ED9               	movwf	fsr2l,c
  2242   001694  6ADA               	clrf	fsr2h,c
  2243   001696  50DF               	movf	indf2,w,c
  2244   001698  6E68               	movwf	logic@prev2Y^0,c
  2245                           
  2246                           ;Pls.c: 198:         snakeTailX[i] = prevX;
  2247   00169A  5069               	movf	logic@prevX^0,w,c
  2248   00169C  6E65               	movwf	??_logic^0,c
  2249   00169E  6A66               	clrf	(??_logic+1)^0,c
  2250   0016A0  506C               	movf	logic@i^0,w,c
  2251   0016A2  0D02               	mullw	2
  2252   0016A4  50F3               	movf	243,w,c
  2253   0016A6  0F01               	addlw	low _snakeTailX
  2254   0016A8  6ED9               	movwf	fsr2l,c
  2255   0016AA  6ADA               	clrf	fsr2h,c
  2256   0016AC  C065  FFDE         	movff	??_logic,postinc2
  2257   0016B0  C066  FFDD         	movff	??_logic+1,postdec2
  2258                           
  2259                           ;Pls.c: 199:         snakeTailY[i] = prevY;
  2260   0016B4  506A               	movf	logic@prevY^0,w,c
  2261   0016B6  6E65               	movwf	??_logic^0,c
  2262   0016B8  6A66               	clrf	(??_logic+1)^0,c
  2263   0016BA  506C               	movf	logic@i^0,w,c
  2264   0016BC  0D02               	mullw	2
  2265   0016BE  50F3               	movf	243,w,c
  2266   0016C0  0F23               	addlw	low _snakeTailY
  2267   0016C2  6ED9               	movwf	fsr2l,c
  2268   0016C4  6ADA               	clrf	fsr2h,c
  2269   0016C6  C065  FFDE         	movff	??_logic,postinc2
  2270   0016CA  C066  FFDD         	movff	??_logic+1,postdec2
  2271   0016CE                     
  2272                           ;Pls.c: 201:         prevX = prev2X;
  2273   0016CE  C067  F069         	movff	logic@prev2X,logic@prevX
  2274   0016D2                     
  2275                           ;Pls.c: 202:         prevY = prev2Y;
  2276   0016D2  C068  F06A         	movff	logic@prev2Y,logic@prevY
  2277   0016D6                     
  2278                           ;Pls.c: 203:     }
  2279   0016D6  2A6C               	incf	logic@i^0,f,c
  2280   0016D8                     l2005:
  2281   0016D8  506C               	movf	logic@i^0,w,c
  2282   0016DA  6E65               	movwf	??_logic^0,c
  2283   0016DC  6A66               	clrf	(??_logic+1)^0,c
  2284   0016DE  503B               	movf	_snakeTailLen^0,w,c
  2285   0016E0  5C65               	subwf	??_logic^0,w,c
  2286   0016E2  503C               	movf	(_snakeTailLen+1)^0,w,c
  2287   0016E4  5866               	subwfb	(??_logic+1)^0,w,c
  2288   0016E6  A0D8               	btfss	status,0,c
  2289   0016E8  EF78  F00B         	goto	u1241
  2290   0016EC  EF7A  F00B         	goto	u1240
  2291   0016F0                     u1241:
  2292   0016F0  EF3D  F00B         	goto	l1997
  2293   0016F4                     u1240:
  2294   0016F4  EF8E  F00B         	goto	l2017
  2295   0016F8                     l2007:
  2296                           
  2297                           ;Pls.c: 208:             snakeHeadXPos--;
  2298   0016F8  063F               	decf	_snakeHeadXPos^0,f,c
  2299   0016FA  A0D8               	btfss	status,0,c
  2300   0016FC  0640               	decf	(_snakeHeadXPos+1)^0,f,c
  2301                           
  2302                           ;Pls.c: 209:             break;
  2303   0016FE  EFAC  F00B         	goto	l2019
  2304   001702                     l2009:
  2305                           
  2306                           ;Pls.c: 211:             snakeHeadXPos++;
  2307   001702  4A3F               	infsnz	_snakeHeadXPos^0,f,c
  2308   001704  2A40               	incf	(_snakeHeadXPos+1)^0,f,c
  2309                           
  2310                           ;Pls.c: 212:             break;
  2311   001706  EFAC  F00B         	goto	l2019
  2312   00170A                     l2011:
  2313                           
  2314                           ;Pls.c: 214:             snakeHeadYPos--;
  2315   00170A  063D               	decf	_snakeHeadYPos^0,f,c
  2316   00170C  A0D8               	btfss	status,0,c
  2317   00170E  063E               	decf	(_snakeHeadYPos+1)^0,f,c
  2318                           
  2319                           ;Pls.c: 215:             break;
  2320   001710  EFAC  F00B         	goto	l2019
  2321   001714                     l2013:
  2322                           
  2323                           ;Pls.c: 217:             snakeHeadYPos++;
  2324   001714  4A3D               	infsnz	_snakeHeadYPos^0,f,c
  2325   001716  2A3E               	incf	(_snakeHeadYPos+1)^0,f,c
  2326                           
  2327                           ;Pls.c: 218:             break;
  2328   001718  EFAC  F00B         	goto	l2019
  2329   00171C                     l2017:
  2330   00171C  C033  F065         	movff	_key,??_logic
  2331   001720  C034  F066         	movff	_key+1,??_logic+1
  2332                           
  2333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2334                           ; Switch size 1, requested type "simple"
  2335                           ; Number of cases is 1, Range of values is 0 to 0
  2336                           ; switch strategies available:
  2337                           ; Name         Instructions Cycles
  2338                           ; simple_byte            4     3 (average)
  2339                           ;	Chosen strategy is simple_byte
  2340   001724  5066               	movf	(??_logic+1)^0,w,c
  2341   001726  0A00               	xorlw	0	; case 0
  2342   001728  B4D8               	btfsc	status,2,c
  2343   00172A  EF99  F00B         	goto	l2245
  2344   00172E  EFAC  F00B         	goto	l2019
  2345   001732                     l2245:
  2346                           
  2347                           ; Switch size 1, requested type "simple"
  2348                           ; Number of cases is 4, Range of values is 1 to 4
  2349                           ; switch strategies available:
  2350                           ; Name         Instructions Cycles
  2351                           ; simple_byte           13     7 (average)
  2352                           ;	Chosen strategy is simple_byte
  2353   001732  5065               	movf	??_logic^0,w,c
  2354   001734  0A01               	xorlw	1	; case 1
  2355   001736  B4D8               	btfsc	status,2,c
  2356   001738  EF7C  F00B         	goto	l2007
  2357   00173C  0A03               	xorlw	3	; case 2
  2358   00173E  B4D8               	btfsc	status,2,c
  2359   001740  EF81  F00B         	goto	l2009
  2360   001744  0A01               	xorlw	1	; case 3
  2361   001746  B4D8               	btfsc	status,2,c
  2362   001748  EF85  F00B         	goto	l2011
  2363   00174C  0A07               	xorlw	7	; case 4
  2364   00174E  B4D8               	btfsc	status,2,c
  2365   001750  EF8A  F00B         	goto	l2013
  2366   001754  EFAC  F00B         	goto	l2019
  2367   001758                     l2019:
  2368                           
  2369                           ;Pls.c: 224:     if (snakeHeadXPos < 0 || snakeHeadXPos >= 16 || snakeHeadYPos < 0 || sn
      +                          akeHeadYPos >= 8)
  2370   001758  5040               	movf	(_snakeHeadXPos+1)^0,w,c
  2371   00175A  E107               	bnz	u1251
  2372   00175C  0E10               	movlw	16
  2373   00175E  5C3F               	subwf	_snakeHeadXPos^0,w,c
  2374   001760  B0D8               	btfsc	status,0,c
  2375   001762  EFB5  F00B         	goto	u1251
  2376   001766  EFB7  F00B         	goto	u1250
  2377   00176A                     u1251:
  2378   00176A  EFC2  F00B         	goto	l2023
  2379   00176E                     u1250:
  2380   00176E  503E               	movf	(_snakeHeadYPos+1)^0,w,c
  2381   001770  E109               	bnz	u1260
  2382   001772  0E08               	movlw	8
  2383   001774  5C3D               	subwf	_snakeHeadYPos^0,w,c
  2384   001776  A0D8               	btfss	status,0,c
  2385   001778  EFC0  F00B         	goto	u1261
  2386   00177C  EFC2  F00B         	goto	u1260
  2387   001780                     u1261:
  2388   001780  EFC4  F00B         	goto	l2025
  2389   001784                     u1260:
  2390   001784                     l2023:
  2391                           
  2392                           ;Pls.c: 225:         gameover = 1;
  2393   001784  0E01               	movlw	1
  2394   001786  6E41               	movwf	_gameover^0,c
  2395   001788                     l2025:
  2396                           
  2397                           ;Pls.c: 228:     for (unsigned char i = 0; i < snakeTailLen; i++)
  2398   001788  6A6B               	clrf	logic@i_395^0,c
  2399   00178A  EFEE  F00B         	goto	l2035
  2400   00178E                     l2027:
  2401                           
  2402                           ;Pls.c: 229:         if (snakeTailX[i] == snakeHeadXPos && snakeTailY[i] == snakeHeadYPo
      +                          s)
  2403   00178E  506B               	movf	logic@i_395^0,w,c
  2404   001790  0D02               	mullw	2
  2405   001792  50F3               	movf	243,w,c
  2406   001794  0F01               	addlw	low _snakeTailX
  2407   001796  6ED9               	movwf	fsr2l,c
  2408   001798  6ADA               	clrf	fsr2h,c
  2409   00179A  503F               	movf	_snakeHeadXPos^0,w,c
  2410   00179C  18DE               	xorwf	postinc2,w,c
  2411   00179E  E107               	bnz	u1271
  2412   0017A0  5040               	movf	(_snakeHeadXPos+1)^0,w,c
  2413   0017A2  18DE               	xorwf	postinc2,w,c
  2414   0017A4  A4D8               	btfss	status,2,c
  2415   0017A6  EFD7  F00B         	goto	u1271
  2416   0017AA  EFD9  F00B         	goto	u1270
  2417   0017AE                     u1271:
  2418   0017AE  EFED  F00B         	goto	l2033
  2419   0017B2                     u1270:
  2420   0017B2  506B               	movf	logic@i_395^0,w,c
  2421   0017B4  0D02               	mullw	2
  2422   0017B6  50F3               	movf	243,w,c
  2423   0017B8  0F23               	addlw	low _snakeTailY
  2424   0017BA  6ED9               	movwf	fsr2l,c
  2425   0017BC  6ADA               	clrf	fsr2h,c
  2426   0017BE  503D               	movf	_snakeHeadYPos^0,w,c
  2427   0017C0  18DE               	xorwf	postinc2,w,c
  2428   0017C2  E107               	bnz	u1281
  2429   0017C4  503E               	movf	(_snakeHeadYPos+1)^0,w,c
  2430   0017C6  18DE               	xorwf	postinc2,w,c
  2431   0017C8  A4D8               	btfss	status,2,c
  2432   0017CA  EFE9  F00B         	goto	u1281
  2433   0017CE  EFEB  F00B         	goto	u1280
  2434   0017D2                     u1281:
  2435   0017D2  EFED  F00B         	goto	l2033
  2436   0017D6                     u1280:
  2437   0017D6                     
  2438                           ;Pls.c: 230:             gameover = 1;
  2439   0017D6  0E01               	movlw	1
  2440   0017D8  6E41               	movwf	_gameover^0,c
  2441   0017DA                     l2033:
  2442   0017DA  2A6B               	incf	logic@i_395^0,f,c
  2443   0017DC                     l2035:
  2444   0017DC  506B               	movf	logic@i_395^0,w,c
  2445   0017DE  6E65               	movwf	??_logic^0,c
  2446   0017E0  6A66               	clrf	(??_logic+1)^0,c
  2447   0017E2  503B               	movf	_snakeTailLen^0,w,c
  2448   0017E4  5C65               	subwf	??_logic^0,w,c
  2449   0017E6  503C               	movf	(_snakeTailLen+1)^0,w,c
  2450   0017E8  5866               	subwfb	(??_logic+1)^0,w,c
  2451   0017EA  A0D8               	btfss	status,0,c
  2452   0017EC  EFFA  F00B         	goto	u1291
  2453   0017F0  EFFC  F00B         	goto	u1290
  2454   0017F4                     u1291:
  2455   0017F4  EFC7  F00B         	goto	l2027
  2456   0017F8                     u1290:
  2457   0017F8                     
  2458                           ;Pls.c: 234:     if (snakeHeadXPos == fruitX && snakeHeadYPos == fruitY) {
  2459   0017F8  5039               	movf	_fruitX^0,w,c
  2460   0017FA  183F               	xorwf	_snakeHeadXPos^0,w,c
  2461   0017FC  E107               	bnz	u1301
  2462   0017FE  503A               	movf	(_fruitX+1)^0,w,c
  2463   001800  1840               	xorwf	(_snakeHeadXPos+1)^0,w,c
  2464   001802  A4D8               	btfss	status,2,c
  2465   001804  EF06  F00C         	goto	u1301
  2466   001808  EF08  F00C         	goto	u1300
  2467   00180C                     u1301:
  2468   00180C  EF52  F00C         	goto	l268
  2469   001810                     u1300:
  2470   001810  5037               	movf	_fruitY^0,w,c
  2471   001812  183D               	xorwf	_snakeHeadYPos^0,w,c
  2472   001814  E107               	bnz	u1311
  2473   001816  5038               	movf	(_fruitY+1)^0,w,c
  2474   001818  183E               	xorwf	(_snakeHeadYPos+1)^0,w,c
  2475   00181A  A4D8               	btfss	status,2,c
  2476   00181C  EF12  F00C         	goto	u1311
  2477   001820  EF14  F00C         	goto	u1310
  2478   001824                     u1311:
  2479   001824  EF52  F00C         	goto	l268
  2480   001828                     u1310:
  2481   001828                     
  2482                           ;Pls.c: 237:         fruitX = random(0, 15);
  2483   001828  0E0F               	movlw	15
  2484   00182A  6E61               	movwf	random@upper_bound^0,c
  2485   00182C  0E00               	movlw	0
  2486   00182E  EC4F  F005         	call	_random
  2487   001832  6E65               	movwf	??_logic^0,c
  2488   001834  5065               	movf	??_logic^0,w,c
  2489   001836  6E39               	movwf	_fruitX^0,c
  2490   001838  6A3A               	clrf	(_fruitX+1)^0,c
  2491                           
  2492                           ;Pls.c: 238:         fruitY = random(0, 7);
  2493   00183A  0E07               	movlw	7
  2494   00183C  6E61               	movwf	random@upper_bound^0,c
  2495   00183E  0E00               	movlw	0
  2496   001840  EC4F  F005         	call	_random
  2497   001844  6E65               	movwf	??_logic^0,c
  2498   001846  5065               	movf	??_logic^0,w,c
  2499   001848  6E37               	movwf	_fruitY^0,c
  2500   00184A  6A38               	clrf	(_fruitY+1)^0,c
  2501                           
  2502                           ;Pls.c: 241:         while (fruitX == 0)
  2503   00184C  EF31  F00C         	goto	l2045
  2504   001850                     l2043:
  2505                           
  2506                           ;Pls.c: 242:             fruitX = random(0, 15);
  2507   001850  0E0F               	movlw	15
  2508   001852  6E61               	movwf	random@upper_bound^0,c
  2509   001854  0E00               	movlw	0
  2510   001856  EC4F  F005         	call	_random
  2511   00185A  6E65               	movwf	??_logic^0,c
  2512   00185C  5065               	movf	??_logic^0,w,c
  2513   00185E  6E39               	movwf	_fruitX^0,c
  2514   001860  6A3A               	clrf	(_fruitX+1)^0,c
  2515   001862                     l2045:
  2516                           
  2517                           ;Pls.c: 241:         while (fruitX == 0)
  2518   001862  5039               	movf	_fruitX^0,w,c
  2519   001864  103A               	iorwf	(_fruitX+1)^0,w,c
  2520   001866  B4D8               	btfsc	status,2,c
  2521   001868  EF38  F00C         	goto	u1321
  2522   00186C  EF3A  F00C         	goto	u1320
  2523   001870                     u1321:
  2524   001870  EF28  F00C         	goto	l2043
  2525   001874                     u1320:
  2526   001874  EF45  F00C         	goto	l2049
  2527   001878                     l2047:
  2528                           
  2529                           ;Pls.c: 244:             fruitY = random(0, 7);
  2530   001878  0E07               	movlw	7
  2531   00187A  6E61               	movwf	random@upper_bound^0,c
  2532   00187C  0E00               	movlw	0
  2533   00187E  EC4F  F005         	call	_random
  2534   001882  6E65               	movwf	??_logic^0,c
  2535   001884  5065               	movf	??_logic^0,w,c
  2536   001886  6E37               	movwf	_fruitY^0,c
  2537   001888  6A38               	clrf	(_fruitY+1)^0,c
  2538   00188A                     l2049:
  2539                           
  2540                           ;Pls.c: 243:         while (fruitY == 0)
  2541   00188A  5037               	movf	_fruitY^0,w,c
  2542   00188C  1038               	iorwf	(_fruitY+1)^0,w,c
  2543   00188E  B4D8               	btfsc	status,2,c
  2544   001890  EF4C  F00C         	goto	u1331
  2545   001894  EF4E  F00C         	goto	u1330
  2546   001898                     u1331:
  2547   001898  EF3C  F00C         	goto	l2047
  2548   00189C                     u1330:
  2549   00189C                     
  2550                           ;Pls.c: 246:         score += 1;
  2551   00189C  4A35               	infsnz	_score^0,f,c
  2552   00189E  2A36               	incf	(_score+1)^0,f,c
  2553                           
  2554                           ;Pls.c: 247:         snakeTailLen++;
  2555   0018A0  4A3B               	infsnz	_snakeTailLen^0,f,c
  2556   0018A2  2A3C               	incf	(_snakeTailLen+1)^0,f,c
  2557   0018A4                     l268:
  2558   0018A4  0012               	return		;funcret
  2559   0018A6                     __end_of_logic:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _random *****************
  2563 ;; Defined at:
  2564 ;;		line 103 in file "Pls.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  lower_bound     1    wreg     unsigned char 
  2567 ;;  upper_bound     1   24[COMRAM] unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  lower_bound     1   27[COMRAM] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      unsigned char 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1
  2579 ;;      Params:         1       0       0
  2580 ;;      Locals:         1       0       0
  2581 ;;      Temps:          2       0       0
  2582 ;;      Totals:         4       0       0
  2583 ;;Total ram usage:        4 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 2
  2586 ;; This function calls:
  2587 ;;		___awmod
  2588 ;;		_rand
  2589 ;; This function is called by:
  2590 ;;		_setup
  2591 ;;		_logic
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text3
  2596   000A9E                     __ptext3:
  2597                           	callstack 0
  2598   000A9E                     _random:
  2599                           	callstack 27
  2600                           
  2601                           ;incstack = 0
  2602                           ;random@lower_bound stored from wreg
  2603   000A9E  6E64               	movwf	random@lower_bound^0,c
  2604   000AA0                     
  2605                           ;Pls.c: 104:     return rand() % (upper_bound - lower_bound + 1) + lower_bound;
  2606   000AA0  EC72  F006         	call	_rand	;wreg free
  2607   000AA4  C055  F05B         	movff	?_rand,___awmod@dividend
  2608   000AA8  C056  F05C         	movff	?_rand+1,___awmod@dividend+1
  2609   000AAC  5064               	movf	random@lower_bound^0,w,c
  2610   000AAE  C061  F062         	movff	random@upper_bound,??_random
  2611   000AB2  6A63               	clrf	(??_random+1)^0,c
  2612   000AB4  5E62               	subwf	??_random^0,f,c
  2613   000AB6  0E00               	movlw	0
  2614   000AB8  5A63               	subwfb	(??_random+1)^0,f,c
  2615   000ABA  0E01               	movlw	1
  2616   000ABC  2462               	addwf	??_random^0,w,c
  2617   000ABE  6E5D               	movwf	___awmod@divisor^0,c
  2618   000AC0  0E00               	movlw	0
  2619   000AC2  2063               	addwfc	(??_random+1)^0,w,c
  2620   000AC4  6E5E               	movwf	(___awmod@divisor+1)^0,c
  2621   000AC6  EC5E  F008         	call	___awmod	;wreg free
  2622   000ACA  505B               	movf	?___awmod^0,w,c
  2623   000ACC  2464               	addwf	random@lower_bound^0,w,c
  2624   000ACE  0012               	return		;funcret
  2625   000AD0                     __end_of_random:
  2626                           	callstack 0
  2627                           
  2628 ;; *************** function _rand *****************
  2629 ;; Defined at:
  2630 ;;		line 11 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\rand.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  2   12[COMRAM] int 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1
  2644 ;;      Params:         2       0       0
  2645 ;;      Locals:         0       0       0
  2646 ;;      Temps:          4       0       0
  2647 ;;      Totals:         6       0       0
  2648 ;;Total ram usage:        6 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 1
  2651 ;; This function calls:
  2652 ;;		___lmul
  2653 ;; This function is called by:
  2654 ;;		_random
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text4
  2659   000CE4                     __ptext4:
  2660                           	callstack 0
  2661   000CE4                     _rand:
  2662                           	callstack 27
  2663   000CE4  C045  F049         	movff	_seed,___lmul@multiplier
  2664   000CE8  C046  F04A         	movff	_seed+1,___lmul@multiplier+1
  2665   000CEC  C047  F04B         	movff	_seed+2,___lmul@multiplier+2
  2666   000CF0  C048  F04C         	movff	_seed+3,___lmul@multiplier+3
  2667   000CF4  0E2D               	movlw	45
  2668   000CF6  6E4D               	movwf	___lmul@multiplicand^0,c
  2669   000CF8  0E7F               	movlw	127
  2670   000CFA  6E4E               	movwf	(___lmul@multiplicand+1)^0,c
  2671   000CFC  0E95               	movlw	149
  2672   000CFE  6E4F               	movwf	(___lmul@multiplicand+2)^0,c
  2673   000D00  0E4C               	movlw	76
  2674   000D02  6E50               	movwf	(___lmul@multiplicand+3)^0,c
  2675   000D04  EC3D  F006         	call	___lmul	;wreg free
  2676   000D08  0E01               	movlw	1
  2677   000D0A  2449               	addwf	?___lmul^0,w,c
  2678   000D0C  6E45               	movwf	_seed^0,c
  2679   000D0E  0E00               	movlw	0
  2680   000D10  204A               	addwfc	(?___lmul+1)^0,w,c
  2681   000D12  6E46               	movwf	(_seed+1)^0,c
  2682   000D14  0E00               	movlw	0
  2683   000D16  204B               	addwfc	(?___lmul+2)^0,w,c
  2684   000D18  6E47               	movwf	(_seed+2)^0,c
  2685   000D1A  0E00               	movlw	0
  2686   000D1C  204C               	addwfc	(?___lmul+3)^0,w,c
  2687   000D1E  6E48               	movwf	(_seed+3)^0,c
  2688   000D20  C045  F057         	movff	_seed,??_rand
  2689   000D24  C046  F058         	movff	_seed+1,??_rand+1
  2690   000D28  C047  F059         	movff	_seed+2,??_rand+2
  2691   000D2C  C048  F05A         	movff	_seed+3,??_rand+3
  2692   000D30  0E12               	movlw	18
  2693   000D32  EFA0  F006         	goto	u1080
  2694   000D36                     u1085:
  2695   000D36  90D8               	bcf	status,0,c
  2696   000D38  325A               	rrcf	(??_rand+3)^0,f,c
  2697   000D3A  3259               	rrcf	(??_rand+2)^0,f,c
  2698   000D3C  3258               	rrcf	(??_rand+1)^0,f,c
  2699   000D3E  3257               	rrcf	??_rand^0,f,c
  2700   000D40                     u1080:
  2701   000D40  2EE8               	decfsz	wreg,f,c
  2702   000D42  EF9B  F006         	goto	u1085
  2703   000D46  C057  F055         	movff	??_rand,?_rand
  2704   000D4A  C058  F056         	movff	??_rand+1,?_rand+1
  2705   000D4E  0012               	return		;funcret
  2706   000D50                     __end_of_rand:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function ___lmul *****************
  2710 ;; Defined at:
  2711 ;;		line 15 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  multiplier      4    0[COMRAM] unsigned long 
  2714 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  product         4    8[COMRAM] unsigned long 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  4    0[COMRAM] unsigned long 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1
  2726 ;;      Params:         8       0       0
  2727 ;;      Locals:         4       0       0
  2728 ;;      Temps:          0       0       0
  2729 ;;      Totals:        12       0       0
  2730 ;;Total ram usage:       12 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_rand
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text5
  2740   000C7A                     __ptext5:
  2741                           	callstack 0
  2742   000C7A                     ___lmul:
  2743                           	callstack 27
  2744   000C7A  0E00               	movlw	0
  2745   000C7C  6E51               	movwf	___lmul@product^0,c
  2746   000C7E  0E00               	movlw	0
  2747   000C80  6E52               	movwf	(___lmul@product+1)^0,c
  2748   000C82  0E00               	movlw	0
  2749   000C84  6E53               	movwf	(___lmul@product+2)^0,c
  2750   000C86  0E00               	movlw	0
  2751   000C88  6E54               	movwf	(___lmul@product+3)^0,c
  2752   000C8A                     l1671:
  2753   000C8A  A049               	btfss	___lmul@multiplier^0,0,c
  2754   000C8C  EF4A  F006         	goto	u851
  2755   000C90  EF4C  F006         	goto	u850
  2756   000C94                     u851:
  2757   000C94  EF54  F006         	goto	l1675
  2758   000C98                     u850:
  2759   000C98  504D               	movf	___lmul@multiplicand^0,w,c
  2760   000C9A  2651               	addwf	___lmul@product^0,f,c
  2761   000C9C  504E               	movf	(___lmul@multiplicand+1)^0,w,c
  2762   000C9E  2252               	addwfc	(___lmul@product+1)^0,f,c
  2763   000CA0  504F               	movf	(___lmul@multiplicand+2)^0,w,c
  2764   000CA2  2253               	addwfc	(___lmul@product+2)^0,f,c
  2765   000CA4  5050               	movf	(___lmul@multiplicand+3)^0,w,c
  2766   000CA6  2254               	addwfc	(___lmul@product+3)^0,f,c
  2767   000CA8                     l1675:
  2768   000CA8  90D8               	bcf	status,0,c
  2769   000CAA  364D               	rlcf	___lmul@multiplicand^0,f,c
  2770   000CAC  364E               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2771   000CAE  364F               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2772   000CB0  3650               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2773   000CB2  90D8               	bcf	status,0,c
  2774   000CB4  324C               	rrcf	(___lmul@multiplier+3)^0,f,c
  2775   000CB6  324B               	rrcf	(___lmul@multiplier+2)^0,f,c
  2776   000CB8  324A               	rrcf	(___lmul@multiplier+1)^0,f,c
  2777   000CBA  3249               	rrcf	___lmul@multiplier^0,f,c
  2778   000CBC  5049               	movf	___lmul@multiplier^0,w,c
  2779   000CBE  104A               	iorwf	(___lmul@multiplier+1)^0,w,c
  2780   000CC0  104B               	iorwf	(___lmul@multiplier+2)^0,w,c
  2781   000CC2  104C               	iorwf	(___lmul@multiplier+3)^0,w,c
  2782   000CC4  A4D8               	btfss	status,2,c
  2783   000CC6  EF67  F006         	goto	u861
  2784   000CCA  EF69  F006         	goto	u860
  2785   000CCE                     u861:
  2786   000CCE  EF45  F006         	goto	l1671
  2787   000CD2                     u860:
  2788   000CD2  C051  F049         	movff	___lmul@product,?___lmul
  2789   000CD6  C052  F04A         	movff	___lmul@product+1,?___lmul+1
  2790   000CDA  C053  F04B         	movff	___lmul@product+2,?___lmul+2
  2791   000CDE  C054  F04C         	movff	___lmul@product+3,?___lmul+3
  2792   000CE2  0012               	return		;funcret
  2793   000CE4                     __end_of___lmul:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function ___awmod *****************
  2797 ;; Defined at:
  2798 ;;		line 7 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  dividend        2   18[COMRAM] int 
  2801 ;;  divisor         2   20[COMRAM] int 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  sign            1   23[COMRAM] unsigned char 
  2804 ;;  counter         1   22[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2   18[COMRAM] int 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1
  2814 ;;      Params:         4       0       0
  2815 ;;      Locals:         2       0       0
  2816 ;;      Temps:          0       0       0
  2817 ;;      Totals:         6       0       0
  2818 ;;Total ram usage:        6 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_random
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text6
  2828   0010BC                     __ptext6:
  2829                           	callstack 0
  2830   0010BC                     ___awmod:
  2831                           	callstack 28
  2832   0010BC  6A60               	clrf	___awmod@sign^0,c
  2833   0010BE  BE5C               	btfsc	(___awmod@dividend+1)^0,7,c
  2834   0010C0  EF66  F008         	goto	u1090
  2835   0010C4  EF64  F008         	goto	u1091
  2836   0010C8                     u1091:
  2837   0010C8  EF6C  F008         	goto	l1819
  2838   0010CC                     u1090:
  2839   0010CC  6C5B               	negf	___awmod@dividend^0,c
  2840   0010CE  1E5C               	comf	(___awmod@dividend+1)^0,f,c
  2841   0010D0  B0D8               	btfsc	status,0,c
  2842   0010D2  2A5C               	incf	(___awmod@dividend+1)^0,f,c
  2843   0010D4  0E01               	movlw	1
  2844   0010D6  6E60               	movwf	___awmod@sign^0,c
  2845   0010D8                     l1819:
  2846   0010D8  BE5E               	btfsc	(___awmod@divisor+1)^0,7,c
  2847   0010DA  EF73  F008         	goto	u1100
  2848   0010DE  EF71  F008         	goto	u1101
  2849   0010E2                     u1101:
  2850   0010E2  EF77  F008         	goto	l1823
  2851   0010E6                     u1100:
  2852   0010E6  6C5D               	negf	___awmod@divisor^0,c
  2853   0010E8  1E5E               	comf	(___awmod@divisor+1)^0,f,c
  2854   0010EA  B0D8               	btfsc	status,0,c
  2855   0010EC  2A5E               	incf	(___awmod@divisor+1)^0,f,c
  2856   0010EE                     l1823:
  2857   0010EE  505D               	movf	___awmod@divisor^0,w,c
  2858   0010F0  105E               	iorwf	(___awmod@divisor+1)^0,w,c
  2859   0010F2  B4D8               	btfsc	status,2,c
  2860   0010F4  EF7E  F008         	goto	u1111
  2861   0010F8  EF80  F008         	goto	u1110
  2862   0010FC                     u1111:
  2863   0010FC  EFA4  F008         	goto	l1839
  2864   001100                     u1110:
  2865   001100  0E01               	movlw	1
  2866   001102  6E5F               	movwf	___awmod@counter^0,c
  2867   001104  EF88  F008         	goto	l1829
  2868   001108                     l1827:
  2869   001108  90D8               	bcf	status,0,c
  2870   00110A  365D               	rlcf	___awmod@divisor^0,f,c
  2871   00110C  365E               	rlcf	(___awmod@divisor+1)^0,f,c
  2872   00110E  2A5F               	incf	___awmod@counter^0,f,c
  2873   001110                     l1829:
  2874   001110  AE5E               	btfss	(___awmod@divisor+1)^0,7,c
  2875   001112  EF8D  F008         	goto	u1121
  2876   001116  EF8F  F008         	goto	u1120
  2877   00111A                     u1121:
  2878   00111A  EF84  F008         	goto	l1827
  2879   00111E                     u1120:
  2880   00111E                     l1831:
  2881   00111E  505D               	movf	___awmod@divisor^0,w,c
  2882   001120  5C5B               	subwf	___awmod@dividend^0,w,c
  2883   001122  505E               	movf	(___awmod@divisor+1)^0,w,c
  2884   001124  585C               	subwfb	(___awmod@dividend+1)^0,w,c
  2885   001126  A0D8               	btfss	status,0,c
  2886   001128  EF98  F008         	goto	u1131
  2887   00112C  EF9A  F008         	goto	u1130
  2888   001130                     u1131:
  2889   001130  EF9E  F008         	goto	l1835
  2890   001134                     u1130:
  2891   001134  505D               	movf	___awmod@divisor^0,w,c
  2892   001136  5E5B               	subwf	___awmod@dividend^0,f,c
  2893   001138  505E               	movf	(___awmod@divisor+1)^0,w,c
  2894   00113A  5A5C               	subwfb	(___awmod@dividend+1)^0,f,c
  2895   00113C                     l1835:
  2896   00113C  90D8               	bcf	status,0,c
  2897   00113E  325E               	rrcf	(___awmod@divisor+1)^0,f,c
  2898   001140  325D               	rrcf	___awmod@divisor^0,f,c
  2899   001142  2E5F               	decfsz	___awmod@counter^0,f,c
  2900   001144  EF8F  F008         	goto	l1831
  2901   001148                     l1839:
  2902   001148  5060               	movf	___awmod@sign^0,w,c
  2903   00114A  B4D8               	btfsc	status,2,c
  2904   00114C  EFAA  F008         	goto	u1141
  2905   001150  EFAC  F008         	goto	u1140
  2906   001154                     u1141:
  2907   001154  EFB0  F008         	goto	l1843
  2908   001158                     u1140:
  2909   001158  6C5B               	negf	___awmod@dividend^0,c
  2910   00115A  1E5C               	comf	(___awmod@dividend+1)^0,f,c
  2911   00115C  B0D8               	btfsc	status,0,c
  2912   00115E  2A5C               	incf	(___awmod@dividend+1)^0,f,c
  2913   001160                     l1843:
  2914   001160  C05B  F05B         	movff	___awmod@dividend,?___awmod
  2915   001164  C05C  F05C         	movff	___awmod@dividend+1,?___awmod+1
  2916   001168  0012               	return		;funcret
  2917   00116A                     __end_of___awmod:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _input *****************
  2921 ;; Defined at:
  2922 ;;		line 107 in file "Pls.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1
  2936 ;;      Params:         0       0       0
  2937 ;;      Locals:         0       0       0
  2938 ;;      Temps:          0       0       0
  2939 ;;      Totals:         0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text7
  2950   000DC8                     __ptext7:
  2951                           	callstack 0
  2952   000DC8                     _input:
  2953                           	callstack 30
  2954   000DC8                     
  2955                           ;Pls.c: 108:     if (PORTAbits.RA3 == 1)
  2956   000DC8  A680               	btfss	128,3,c	;volatile
  2957   000DCA  EFE9  F006         	goto	u411
  2958   000DCE  EFEB  F006         	goto	u410
  2959   000DD2                     u411:
  2960   000DD2  EFF1  F006         	goto	l203
  2961   000DD6                     u410:
  2962   000DD6                     
  2963                           ;Pls.c: 109:         key = 1;
  2964   000DD6  0E00               	movlw	0
  2965   000DD8  6E34               	movwf	(_key+1)^0,c
  2966   000DDA  0E01               	movlw	1
  2967   000DDC  6E33               	movwf	_key^0,c
  2968   000DDE  EF23  F007         	goto	l212
  2969   000DE2                     l203:
  2970   000DE2  A880               	btfss	128,4,c	;volatile
  2971   000DE4  EFF6  F006         	goto	u421
  2972   000DE8  EFF8  F006         	goto	u420
  2973   000DEC                     u421:
  2974   000DEC  EFFE  F006         	goto	l205
  2975   000DF0                     u420:
  2976   000DF0                     
  2977                           ;Pls.c: 111:         key = 2;
  2978   000DF0  0E00               	movlw	0
  2979   000DF2  6E34               	movwf	(_key+1)^0,c
  2980   000DF4  0E02               	movlw	2
  2981   000DF6  6E33               	movwf	_key^0,c
  2982   000DF8  EF23  F007         	goto	l212
  2983   000DFC                     l205:
  2984   000DFC  A280               	btfss	128,1,c	;volatile
  2985   000DFE  EF03  F007         	goto	u431
  2986   000E02  EF05  F007         	goto	u430
  2987   000E06                     u431:
  2988   000E06  EF0B  F007         	goto	l207
  2989   000E0A                     u430:
  2990   000E0A                     
  2991                           ;Pls.c: 113:         key = 3;
  2992   000E0A  0E00               	movlw	0
  2993   000E0C  6E34               	movwf	(_key+1)^0,c
  2994   000E0E  0E03               	movlw	3
  2995   000E10  6E33               	movwf	_key^0,c
  2996   000E12  EF23  F007         	goto	l212
  2997   000E16                     l207:
  2998   000E16  A480               	btfss	128,2,c	;volatile
  2999   000E18  EF10  F007         	goto	u441
  3000   000E1C  EF12  F007         	goto	u440
  3001   000E20                     u441:
  3002   000E20  EF18  F007         	goto	l209
  3003   000E24                     u440:
  3004   000E24                     
  3005                           ;Pls.c: 115:         key = 4;
  3006   000E24  0E00               	movlw	0
  3007   000E26  6E34               	movwf	(_key+1)^0,c
  3008   000E28  0E04               	movlw	4
  3009   000E2A  6E33               	movwf	_key^0,c
  3010   000E2C  EF23  F007         	goto	l212
  3011   000E30                     l209:
  3012   000E30  AA80               	btfss	128,5,c	;volatile
  3013   000E32  EF1D  F007         	goto	u451
  3014   000E36  EF1F  F007         	goto	u450
  3015   000E3A                     u451:
  3016   000E3A  EF23  F007         	goto	l206
  3017   000E3E                     u450:
  3018   000E3E                     
  3019                           ;Pls.c: 117:         gameover = 1;
  3020   000E3E  0E01               	movlw	1
  3021   000E40  6E41               	movwf	_gameover^0,c
  3022   000E42  EF23  F007         	goto	l212
  3023   000E46                     l206:
  3024   000E46                     l212:
  3025   000E46  0012               	return		;funcret
  3026   000E48                     __end_of_input:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _draw *****************
  3030 ;; Defined at:
  3031 ;;		line 251 in file "Pls.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  k               1   38[COMRAM] unsigned char 
  3036 ;;  prTail          1    0        unsigned char 
  3037 ;;  j               1   40[COMRAM] unsigned char 
  3038 ;;  i               1   39[COMRAM] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1
  3048 ;;      Params:         0       0       0
  3049 ;;      Locals:         3       0       0
  3050 ;;      Temps:          4       0       0
  3051 ;;      Totals:         7       0       0
  3052 ;;Total ram usage:        7 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 4
  3055 ;; This function calls:
  3056 ;;		_clearAllChar
  3057 ;;		_drawGraphics
  3058 ;;		_placeChar
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text8
  3065   00123C                     __ptext8:
  3066                           	callstack 0
  3067   00123C                     _draw:
  3068                           	callstack 26
  3069   00123C                     
  3070                           ;Pls.c: 252:     clearAllChar();
  3071   00123C  EC68  F005         	call	_clearAllChar	;wreg free
  3072                           
  3073                           ;Pls.c: 253:     placeChar(snakeHeadXPos, snakeHeadYPos, 'O');
  3074   001240  C03D  F049         	movff	_snakeHeadYPos,placeChar@y
  3075   001244  0E4F               	movlw	79
  3076   001246  6E4A               	movwf	placeChar@c^0,c
  3077   001248  503F               	movf	_snakeHeadXPos^0,w,c
  3078   00124A  ECB5  F008         	call	_placeChar
  3079   00124E                     
  3080                           ;Pls.c: 255:     for (unsigned char i = 0; i < 8; i++) {
  3081   00124E  6A70               	clrf	draw@i^0,c
  3082   001250                     l271:
  3083                           
  3084                           ;Pls.c: 256:         for (unsigned char j = 0; j <= 16; j++) {
  3085   001250  6A71               	clrf	draw@j^0,c
  3086   001252                     l273:
  3087                           
  3088                           ;Pls.c: 258:             for (unsigned char k = 0; k < snakeTailLen; k++) {
  3089   001252  6A6F               	clrf	draw@k^0,c
  3090   001254  EF5E  F009         	goto	l2079
  3091   001258                     l2069:
  3092                           
  3093                           ;Pls.c: 259:                 if (snakeTailX[k] == j && snakeTailY[k] == i) {
  3094   001258  506F               	movf	draw@k^0,w,c
  3095   00125A  0D02               	mullw	2
  3096   00125C  50F3               	movf	243,w,c
  3097   00125E  0F01               	addlw	low _snakeTailX
  3098   001260  6ED9               	movwf	fsr2l,c
  3099   001262  6ADA               	clrf	fsr2h,c
  3100   001264  5071               	movf	draw@j^0,w,c
  3101   001266  6E6D               	movwf	(??_draw+2)^0,c
  3102   001268  6A6E               	clrf	(??_draw+3)^0,c
  3103   00126A  50DE               	movf	postinc2,w,c
  3104   00126C  186D               	xorwf	(??_draw+2)^0,w,c
  3105   00126E  E107               	bnz	u1341
  3106   001270  50DE               	movf	postinc2,w,c
  3107   001272  186E               	xorwf	(??_draw+3)^0,w,c
  3108   001274  A4D8               	btfss	status,2,c
  3109   001276  EF3F  F009         	goto	u1341
  3110   00127A  EF41  F009         	goto	u1340
  3111   00127E                     u1341:
  3112   00127E  EF5D  F009         	goto	l2077
  3113   001282                     u1340:
  3114   001282  506F               	movf	draw@k^0,w,c
  3115   001284  0D02               	mullw	2
  3116   001286  50F3               	movf	243,w,c
  3117   001288  0F23               	addlw	low _snakeTailY
  3118   00128A  6ED9               	movwf	fsr2l,c
  3119   00128C  6ADA               	clrf	fsr2h,c
  3120   00128E  5070               	movf	draw@i^0,w,c
  3121   001290  6E6D               	movwf	(??_draw+2)^0,c
  3122   001292  6A6E               	clrf	(??_draw+3)^0,c
  3123   001294  50DE               	movf	postinc2,w,c
  3124   001296  186D               	xorwf	(??_draw+2)^0,w,c
  3125   001298  E107               	bnz	u1351
  3126   00129A  50DE               	movf	postinc2,w,c
  3127   00129C  186E               	xorwf	(??_draw+3)^0,w,c
  3128   00129E  A4D8               	btfss	status,2,c
  3129   0012A0  EF54  F009         	goto	u1351
  3130   0012A4  EF56  F009         	goto	u1350
  3131   0012A8                     u1351:
  3132   0012A8  EF5D  F009         	goto	l2077
  3133   0012AC                     u1350:
  3134   0012AC                     
  3135                           ;Pls.c: 260:                     placeChar(j, i, '#');
  3136   0012AC  C070  F049         	movff	draw@i,placeChar@y
  3137   0012B0  0E23               	movlw	35
  3138   0012B2  6E4A               	movwf	placeChar@c^0,c
  3139   0012B4  5071               	movf	draw@j^0,w,c
  3140   0012B6  ECB5  F008         	call	_placeChar
  3141   0012BA                     l2077:
  3142                           
  3143                           ;Pls.c: 263:             }
  3144   0012BA  2A6F               	incf	draw@k^0,f,c
  3145   0012BC                     l2079:
  3146   0012BC  506F               	movf	draw@k^0,w,c
  3147   0012BE  6E6B               	movwf	??_draw^0,c
  3148   0012C0  6A6C               	clrf	(??_draw+1)^0,c
  3149   0012C2  503B               	movf	_snakeTailLen^0,w,c
  3150   0012C4  5C6B               	subwf	??_draw^0,w,c
  3151   0012C6  503C               	movf	(_snakeTailLen+1)^0,w,c
  3152   0012C8  586C               	subwfb	(??_draw+1)^0,w,c
  3153   0012CA  A0D8               	btfss	status,0,c
  3154   0012CC  EF6A  F009         	goto	u1361
  3155   0012D0  EF6C  F009         	goto	u1360
  3156   0012D4                     u1361:
  3157   0012D4  EF2C  F009         	goto	l2069
  3158   0012D8                     u1360:
  3159   0012D8                     
  3160                           ;Pls.c: 264:         }
  3161   0012D8  2A71               	incf	draw@j^0,f,c
  3162   0012DA  0E10               	movlw	16
  3163   0012DC  6471               	cpfsgt	draw@j^0,c
  3164   0012DE  EF73  F009         	goto	u1371
  3165   0012E2  EF75  F009         	goto	u1370
  3166   0012E6                     u1371:
  3167   0012E6  EF29  F009         	goto	l273
  3168   0012EA                     u1370:
  3169   0012EA                     
  3170                           ;Pls.c: 265:     }
  3171   0012EA  2A70               	incf	draw@i^0,f,c
  3172   0012EC  0E07               	movlw	7
  3173   0012EE  6470               	cpfsgt	draw@i^0,c
  3174   0012F0  EF7C  F009         	goto	u1381
  3175   0012F4  EF7E  F009         	goto	u1380
  3176   0012F8                     u1381:
  3177   0012F8  EF28  F009         	goto	l271
  3178   0012FC                     u1380:
  3179   0012FC                     
  3180                           ;Pls.c: 267:     placeChar(fruitX, fruitY, 'a');
  3181   0012FC  C037  F049         	movff	_fruitY,placeChar@y
  3182   001300  0E61               	movlw	97
  3183   001302  6E4A               	movwf	placeChar@c^0,c
  3184   001304  5039               	movf	_fruitX^0,w,c
  3185   001306  ECB5  F008         	call	_placeChar
  3186   00130A                     
  3187                           ;Pls.c: 269:     drawGraphics();
  3188   00130A  ECA3  F005         	call	_drawGraphics	;wreg free
  3189   00130E  0012               	return		;funcret
  3190   001310                     __end_of_draw:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _drawGraphics *****************
  3194 ;; Defined at:
  3195 ;;		line 92 in file "Pls.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;		None
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1
  3209 ;;      Params:         0       0       0
  3210 ;;      Locals:         0       0       0
  3211 ;;      Temps:          0       0       0
  3212 ;;      Totals:         0       0       0
  3213 ;;Total ram usage:        0 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; Hardware stack levels required when called: 3
  3216 ;; This function calls:
  3217 ;;		_LCD_GraphicsDisplayString
  3218 ;; This function is called by:
  3219 ;;		_draw
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text9
  3224   000B46                     __ptext9:
  3225                           	callstack 0
  3226   000B46                     _drawGraphics:
  3227                           	callstack 26
  3228   000B46                     
  3229                           ;Pls.c: 93:     LCD_GraphicsDisplayString(0, LCDStore0);
  3230   000B46  0EE6               	movlw	low _LCDStore0
  3231   000B48  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3232   000B4A  6A4E               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3233   000B4C  0E00               	movlw	0
  3234   000B4E  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3235                           
  3236                           ;Pls.c: 94:     LCD_GraphicsDisplayString(1, LCDStore1);
  3237   000B52  0ED5               	movlw	low _LCDStore1
  3238   000B54  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3239   000B56  6A4E               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3240   000B58  0E01               	movlw	1
  3241   000B5A  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3242                           
  3243                           ;Pls.c: 95:     LCD_GraphicsDisplayString(2, LCDStore2);
  3244   000B5E  0EC4               	movlw	low _LCDStore2
  3245   000B60  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3246   000B62  6A4E               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3247   000B64  0E02               	movlw	2
  3248   000B66  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3249                           
  3250                           ;Pls.c: 96:     LCD_GraphicsDisplayString(3, LCDStore3);
  3251   000B6A  0EB3               	movlw	low _LCDStore3
  3252   000B6C  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3253   000B6E  6A4E               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3254   000B70  0E03               	movlw	3
  3255   000B72  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3256                           
  3257                           ;Pls.c: 97:     LCD_GraphicsDisplayString(4, LCDStore4);
  3258   000B76  0EA2               	movlw	low _LCDStore4
  3259   000B78  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3260   000B7A  6A4E               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3261   000B7C  0E04               	movlw	4
  3262   000B7E  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3263                           
  3264                           ;Pls.c: 98:     LCD_GraphicsDisplayString(5, LCDStore5);
  3265   000B82  0E91               	movlw	low _LCDStore5
  3266   000B84  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3267   000B86  6A4E               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3268   000B88  0E05               	movlw	5
  3269   000B8A  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3270                           
  3271                           ;Pls.c: 99:     LCD_GraphicsDisplayString(6, LCDStore6);
  3272   000B8E  0E80               	movlw	low _LCDStore6
  3273   000B90  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3274   000B92  6A4E               	clrf	(LCD_GraphicsDisplayString@str+1)^0,c
  3275   000B94  0E06               	movlw	6
  3276   000B96  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3277                           
  3278                           ;Pls.c: 100:     LCD_GraphicsDisplayString(7, LCDStore7);
  3279   000B9A  0E00               	movlw	low _LCDStore7
  3280   000B9C  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3281   000B9E  0E01               	movlw	high _LCDStore7
  3282   000BA0  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3283   000BA2  0E07               	movlw	7
  3284   000BA4  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3285   000BA8  0012               	return		;funcret
  3286   000BAA                     __end_of_drawGraphics:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _clearAllChar *****************
  3290 ;; Defined at:
  3291 ;;		line 175 in file "Pls.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  j               1    4[COMRAM] unsigned char 
  3296 ;;  i               1    3[COMRAM] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1
  3306 ;;      Params:         0       0       0
  3307 ;;      Locals:         2       0       0
  3308 ;;      Temps:          0       0       0
  3309 ;;      Totals:         2       0       0
  3310 ;;Total ram usage:        2 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 1
  3313 ;; This function calls:
  3314 ;;		_placeChar
  3315 ;; This function is called by:
  3316 ;;		_draw
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text10
  3321   000AD0                     __ptext10:
  3322                           	callstack 0
  3323   000AD0                     _clearAllChar:
  3324                           	callstack 28
  3325   000AD0                     
  3326                           ;Pls.c: 176:     for (unsigned char i = 0; i < 8; i++) {
  3327   000AD0  6A4C               	clrf	clearAllChar@i^0,c
  3328   000AD2                     l237:
  3329                           
  3330                           ;Pls.c: 177:         for (unsigned char j = 0; j < 16; j++) {
  3331   000AD2  6A4D               	clrf	clearAllChar@j^0,c
  3332   000AD4                     l1865:
  3333                           
  3334                           ;Pls.c: 178:             placeChar(j, i, ' ');
  3335   000AD4  C04C  F049         	movff	clearAllChar@i,placeChar@y
  3336   000AD8  0E20               	movlw	32
  3337   000ADA  6E4A               	movwf	placeChar@c^0,c
  3338   000ADC  504D               	movf	clearAllChar@j^0,w,c
  3339   000ADE  ECB5  F008         	call	_placeChar
  3340   000AE2                     
  3341                           ;Pls.c: 179:         }
  3342   000AE2  2A4D               	incf	clearAllChar@j^0,f,c
  3343   000AE4  0E0F               	movlw	15
  3344   000AE6  644D               	cpfsgt	clearAllChar@j^0,c
  3345   000AE8  EF78  F005         	goto	u1151
  3346   000AEC  EF7A  F005         	goto	u1150
  3347   000AF0                     u1151:
  3348   000AF0  EF6A  F005         	goto	l1865
  3349   000AF4                     u1150:
  3350   000AF4                     
  3351                           ;Pls.c: 180:     }
  3352   000AF4  2A4C               	incf	clearAllChar@i^0,f,c
  3353   000AF6  0E07               	movlw	7
  3354   000AF8  644C               	cpfsgt	clearAllChar@i^0,c
  3355   000AFA  EF81  F005         	goto	u1161
  3356   000AFE  EF83  F005         	goto	u1160
  3357   000B02                     u1161:
  3358   000B02  EF69  F005         	goto	l237
  3359   000B06                     u1160:
  3360   000B06  0012               	return		;funcret
  3361   000B08                     __end_of_clearAllChar:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function _placeChar *****************
  3365 ;; Defined at:
  3366 ;;		line 120 in file "Pls.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  x               1    wreg     unsigned char 
  3369 ;;  y               1    0[COMRAM] unsigned char 
  3370 ;;  c               1    1[COMRAM] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  x               1    2[COMRAM] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1
  3382 ;;      Params:         2       0       0
  3383 ;;      Locals:         1       0       0
  3384 ;;      Temps:          0       0       0
  3385 ;;      Totals:         3       0       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_clearAllChar
  3392 ;;		_draw
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text11
  3397   00116A                     __ptext11:
  3398                           	callstack 0
  3399   00116A                     _placeChar:
  3400                           	callstack 29
  3401                           
  3402                           ;incstack = 0
  3403                           ;placeChar@x stored from wreg
  3404   00116A  6E4B               	movwf	placeChar@x^0,c
  3405   00116C                     
  3406                           ;Pls.c: 121:     switch (y) {
  3407   00116C  EFFA  F008         	goto	l1809
  3408   001170                     l1791:
  3409                           
  3410                           ;Pls.c: 123:             LCDStore0[x] = c;
  3411   001170  504B               	movf	placeChar@x^0,w,c
  3412   001172  0FE6               	addlw	low _LCDStore0
  3413   001174  6ED9               	movwf	fsr2l,c
  3414   001176  6ADA               	clrf	fsr2h,c
  3415   001178  C04A  FFDF         	movff	placeChar@c,indf2
  3416                           
  3417                           ;Pls.c: 124:             break;
  3418   00117C  EF1D  F009         	goto	l225
  3419   001180                     l1793:
  3420                           
  3421                           ;Pls.c: 126:             LCDStore1[x] = c;
  3422   001180  504B               	movf	placeChar@x^0,w,c
  3423   001182  0FD5               	addlw	low _LCDStore1
  3424   001184  6ED9               	movwf	fsr2l,c
  3425   001186  6ADA               	clrf	fsr2h,c
  3426   001188  C04A  FFDF         	movff	placeChar@c,indf2
  3427                           
  3428                           ;Pls.c: 127:             break;
  3429   00118C  EF1D  F009         	goto	l225
  3430   001190                     l1795:
  3431                           
  3432                           ;Pls.c: 129:             LCDStore2[x] = c;
  3433   001190  504B               	movf	placeChar@x^0,w,c
  3434   001192  0FC4               	addlw	low _LCDStore2
  3435   001194  6ED9               	movwf	fsr2l,c
  3436   001196  6ADA               	clrf	fsr2h,c
  3437   001198  C04A  FFDF         	movff	placeChar@c,indf2
  3438                           
  3439                           ;Pls.c: 130:             break;
  3440   00119C  EF1D  F009         	goto	l225
  3441   0011A0                     l1797:
  3442                           
  3443                           ;Pls.c: 132:             LCDStore3[x] = c;
  3444   0011A0  504B               	movf	placeChar@x^0,w,c
  3445   0011A2  0FB3               	addlw	low _LCDStore3
  3446   0011A4  6ED9               	movwf	fsr2l,c
  3447   0011A6  6ADA               	clrf	fsr2h,c
  3448   0011A8  C04A  FFDF         	movff	placeChar@c,indf2
  3449                           
  3450                           ;Pls.c: 133:             break;
  3451   0011AC  EF1D  F009         	goto	l225
  3452   0011B0                     l1799:
  3453                           
  3454                           ;Pls.c: 135:             LCDStore4[x] = c;
  3455   0011B0  504B               	movf	placeChar@x^0,w,c
  3456   0011B2  0FA2               	addlw	low _LCDStore4
  3457   0011B4  6ED9               	movwf	fsr2l,c
  3458   0011B6  6ADA               	clrf	fsr2h,c
  3459   0011B8  C04A  FFDF         	movff	placeChar@c,indf2
  3460                           
  3461                           ;Pls.c: 136:             break;
  3462   0011BC  EF1D  F009         	goto	l225
  3463   0011C0                     l1801:
  3464                           
  3465                           ;Pls.c: 138:             LCDStore5[x] = c;
  3466   0011C0  504B               	movf	placeChar@x^0,w,c
  3467   0011C2  0F91               	addlw	low _LCDStore5
  3468   0011C4  6ED9               	movwf	fsr2l,c
  3469   0011C6  6ADA               	clrf	fsr2h,c
  3470   0011C8  C04A  FFDF         	movff	placeChar@c,indf2
  3471                           
  3472                           ;Pls.c: 139:             break;
  3473   0011CC  EF1D  F009         	goto	l225
  3474   0011D0                     l1803:
  3475                           
  3476                           ;Pls.c: 141:             LCDStore6[x] = c;
  3477   0011D0  504B               	movf	placeChar@x^0,w,c
  3478   0011D2  0F80               	addlw	low _LCDStore6
  3479   0011D4  6ED9               	movwf	fsr2l,c
  3480   0011D6  6ADA               	clrf	fsr2h,c
  3481   0011D8  C04A  FFDF         	movff	placeChar@c,indf2
  3482                           
  3483                           ;Pls.c: 142:             break;
  3484   0011DC  EF1D  F009         	goto	l225
  3485   0011E0                     l1805:
  3486                           
  3487                           ;Pls.c: 144:             LCDStore7[x] = c;
  3488   0011E0  0E00               	movlw	low _LCDStore7
  3489   0011E2  244B               	addwf	placeChar@x^0,w,c
  3490   0011E4  6ED9               	movwf	fsr2l,c
  3491   0011E6  6ADA               	clrf	fsr2h,c
  3492   0011E8  0E01               	movlw	high _LCDStore7
  3493   0011EA  22DA               	addwfc	fsr2h,f,c
  3494   0011EC  C04A  FFDF         	movff	placeChar@c,indf2
  3495                           
  3496                           ;Pls.c: 145:             break;
  3497   0011F0  EF1D  F009         	goto	l225
  3498   0011F4                     l1809:
  3499   0011F4  5049               	movf	placeChar@y^0,w,c
  3500                           
  3501                           ; Switch size 1, requested type "simple"
  3502                           ; Number of cases is 8, Range of values is 0 to 7
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte           25    13 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507   0011F6  0A00               	xorlw	0	; case 0
  3508   0011F8  B4D8               	btfsc	status,2,c
  3509   0011FA  EFB8  F008         	goto	l1791
  3510   0011FE  0A01               	xorlw	1	; case 1
  3511   001200  B4D8               	btfsc	status,2,c
  3512   001202  EFC0  F008         	goto	l1793
  3513   001206  0A03               	xorlw	3	; case 2
  3514   001208  B4D8               	btfsc	status,2,c
  3515   00120A  EFC8  F008         	goto	l1795
  3516   00120E  0A01               	xorlw	1	; case 3
  3517   001210  B4D8               	btfsc	status,2,c
  3518   001212  EFD0  F008         	goto	l1797
  3519   001216  0A07               	xorlw	7	; case 4
  3520   001218  B4D8               	btfsc	status,2,c
  3521   00121A  EFD8  F008         	goto	l1799
  3522   00121E  0A01               	xorlw	1	; case 5
  3523   001220  B4D8               	btfsc	status,2,c
  3524   001222  EFE0  F008         	goto	l1801
  3525   001226  0A03               	xorlw	3	; case 6
  3526   001228  B4D8               	btfsc	status,2,c
  3527   00122A  EFE8  F008         	goto	l1803
  3528   00122E  0A01               	xorlw	1	; case 7
  3529   001230  B4D8               	btfsc	status,2,c
  3530   001232  EFF0  F008         	goto	l1805
  3531   001236  EF1D  F009         	goto	l225
  3532   00123A                     l225:
  3533   00123A  0012               	return		;funcret
  3534   00123C                     __end_of_placeChar:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _displaySpeed *****************
  3538 ;; Defined at:
  3539 ;;		line 72 in file "Pls.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1
  3553 ;;      Params:         0       0       0
  3554 ;;      Locals:         0       0       0
  3555 ;;      Temps:          0       0       0
  3556 ;;      Totals:         0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 3
  3560 ;; This function calls:
  3561 ;;		_LCD_GraphicsDisplayString
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text12
  3568   000E48                     __ptext12:
  3569                           	callstack 0
  3570   000E48                     _displaySpeed:
  3571                           	callstack 27
  3572   000E48                     
  3573                           ;Pls.c: 73:     switch (speed) {
  3574   000E48  EF53  F007         	goto	l1973
  3575   000E4C                     l1961:
  3576                           
  3577                           ;Pls.c: 75:             LCD_GraphicsDisplayString(6, "Speed: 1");
  3578   000E4C  0ED2               	movlw	low STR_1
  3579   000E4E  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3580   000E50  0E1F               	movlw	high STR_1
  3581   000E52  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3582   000E54  0E06               	movlw	6
  3583   000E56  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3584                           
  3585                           ;Pls.c: 76:             break;
  3586   000E5A  EF6A  F007         	goto	l194
  3587   000E5E                     l1963:
  3588                           
  3589                           ;Pls.c: 78:             LCD_GraphicsDisplayString(6, "Speed: 2");
  3590   000E5E  0EDB               	movlw	low STR_2
  3591   000E60  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3592   000E62  0E1F               	movlw	high STR_2
  3593   000E64  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3594   000E66  0E06               	movlw	6
  3595   000E68  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3596                           
  3597                           ;Pls.c: 79:             break;
  3598   000E6C  EF6A  F007         	goto	l194
  3599   000E70                     l1965:
  3600                           
  3601                           ;Pls.c: 81:             LCD_GraphicsDisplayString(6, "Speed: 3");
  3602   000E70  0EE4               	movlw	low STR_3
  3603   000E72  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3604   000E74  0E1F               	movlw	high STR_3
  3605   000E76  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3606   000E78  0E06               	movlw	6
  3607   000E7A  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3608                           
  3609                           ;Pls.c: 82:             break;
  3610   000E7E  EF6A  F007         	goto	l194
  3611   000E82                     l1967:
  3612                           
  3613                           ;Pls.c: 84:             LCD_GraphicsDisplayString(6, "Speed: 4");
  3614   000E82  0EED               	movlw	low STR_4
  3615   000E84  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3616   000E86  0E1F               	movlw	high STR_4
  3617   000E88  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3618   000E8A  0E06               	movlw	6
  3619   000E8C  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3620                           
  3621                           ;Pls.c: 85:             break;
  3622   000E90  EF6A  F007         	goto	l194
  3623   000E94                     l1969:
  3624                           
  3625                           ;Pls.c: 87:             LCD_GraphicsDisplayString(6, "Speed: 5");
  3626   000E94  0EF6               	movlw	low STR_5
  3627   000E96  6E4D               	movwf	LCD_GraphicsDisplayString@str^0,c
  3628   000E98  0E1F               	movlw	high STR_5
  3629   000E9A  6E4E               	movwf	(LCD_GraphicsDisplayString@str+1)^0,c
  3630   000E9C  0E06               	movlw	6
  3631   000E9E  EC53  F00C         	call	_LCD_GraphicsDisplayString
  3632                           
  3633                           ;Pls.c: 88:             break;
  3634   000EA2  EF6A  F007         	goto	l194
  3635   000EA6                     l1973:
  3636   000EA6  5044               	movf	_speed^0,w,c
  3637                           
  3638                           ; Switch size 1, requested type "simple"
  3639                           ; Number of cases is 5, Range of values is 0 to 4
  3640                           ; switch strategies available:
  3641                           ; Name         Instructions Cycles
  3642                           ; simple_byte           16     9 (average)
  3643                           ;	Chosen strategy is simple_byte
  3644   000EA8  0A00               	xorlw	0	; case 0
  3645   000EAA  B4D8               	btfsc	status,2,c
  3646   000EAC  EF4A  F007         	goto	l1969
  3647   000EB0  0A01               	xorlw	1	; case 1
  3648   000EB2  B4D8               	btfsc	status,2,c
  3649   000EB4  EF41  F007         	goto	l1967
  3650   000EB8  0A03               	xorlw	3	; case 2
  3651   000EBA  B4D8               	btfsc	status,2,c
  3652   000EBC  EF38  F007         	goto	l1965
  3653   000EC0  0A01               	xorlw	1	; case 3
  3654   000EC2  B4D8               	btfsc	status,2,c
  3655   000EC4  EF2F  F007         	goto	l1963
  3656   000EC8  0A07               	xorlw	7	; case 4
  3657   000ECA  B4D8               	btfsc	status,2,c
  3658   000ECC  EF26  F007         	goto	l1961
  3659   000ED0  EF6A  F007         	goto	l194
  3660   000ED4                     l194:
  3661   000ED4  0012               	return		;funcret
  3662   000ED6                     __end_of_displaySpeed:
  3663                           	callstack 0
  3664                           
  3665 ;; *************** function _LCD_GraphicsDisplayString *****************
  3666 ;; Defined at:
  3667 ;;		line 100 in file "12864_lcd.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  line            1    wreg     unsigned char 
  3670 ;;  str             2    4[COMRAM] PTR unsigned char 
  3671 ;;		 -> STR_14(12), STR_13(15), STR_12(17), STR_11(17), 
  3672 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  3673 ;;		 -> STR_6(17), LCDStore7(17), LCDStore6(17), LCDStore5(17), 
  3674 ;;		 -> LCDStore4(17), LCDStore3(17), LCDStore2(17), LCDStore1(17), 
  3675 ;;		 -> LCDStore0(17), STR_5(9), STR_4(9), STR_3(9), 
  3676 ;;		 -> STR_2(9), STR_1(9), 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  line            1   27[COMRAM] unsigned char 
  3679 ;;  dataB           1   26[COMRAM] unsigned char 
  3680 ;;  dataA           1   25[COMRAM] unsigned char 
  3681 ;;  colListB        5   19[COMRAM] unsigned char [5]
  3682 ;;  colListA        5   14[COMRAM] unsigned char [5]
  3683 ;;  indB            1   33[COMRAM] unsigned char 
  3684 ;;  indA            1   32[COMRAM] unsigned char 
  3685 ;;  letterB         1   29[COMRAM] unsigned char 
  3686 ;;  letterA         1   28[COMRAM] unsigned char 
  3687 ;;  colInd          1   31[COMRAM] unsigned char 
  3688 ;;  row             1   30[COMRAM] unsigned char 
  3689 ;;  count           1   24[COMRAM] unsigned char 
  3690 ;;  shouldContin    1   13[COMRAM] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1
  3700 ;;      Params:         2       0       0
  3701 ;;      Locals:        25       0       0
  3702 ;;      Temps:          3       0       0
  3703 ;;      Totals:        30       0       0
  3704 ;;Total ram usage:       30 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; Hardware stack levels required when called: 2
  3707 ;; This function calls:
  3708 ;;		_LCD_WriteCommand
  3709 ;;		_LCD_WriteData
  3710 ;; This function is called by:
  3711 ;;		_displaySpeed
  3712 ;;		_drawGraphics
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text13
  3718   0018A6                     __ptext13:
  3719                           	callstack 0
  3720   0018A6                     _LCD_GraphicsDisplayString:
  3721                           	callstack 26
  3722                           
  3723                           ;incstack = 0
  3724                           ;LCD_GraphicsDisplayString@line stored from wreg
  3725   0018A6  6E64               	movwf	LCD_GraphicsDisplayString@line^0,c
  3726   0018A8  0E01               	movlw	1
  3727   0018AA  6E56               	movwf	LCD_GraphicsDisplayString@shouldContinue^0,c
  3728   0018AC  6A61               	clrf	LCD_GraphicsDisplayString@count^0,c
  3729   0018AE  EF97  F00E         	goto	l1779
  3730   0018B2                     l1683:
  3731   0018B2  C04D  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  3732   0018B6  C04E  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  3733   0018BA  6AF8               	clrf	tblptru,c
  3734   0018BC  0E01               	movlw	(high __ramtop+-1)
  3735   0018BE  64F7               	cpfsgt	tblptrh,c
  3736   0018C0  D003               	bra	u877
  3737   0018C2  0008               	tblrd		*
  3738   0018C4  50F5               	movf	tablat,w,c
  3739   0018C6  D005               	bra	u870
  3740   0018C8                     u877:
  3741   0018C8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3742   0018CC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3743   0018D0  50EF               	movf	indf0,w,c
  3744   0018D2                     u870:
  3745   0018D2  6E65               	movwf	LCD_GraphicsDisplayString@letterA^0,c
  3746   0018D4  4A4D               	infsnz	LCD_GraphicsDisplayString@str^0,f,c
  3747   0018D6  2A4E               	incf	(LCD_GraphicsDisplayString@str+1)^0,f,c
  3748   0018D8  5065               	movf	LCD_GraphicsDisplayString@letterA^0,w,c
  3749   0018DA  A4D8               	btfss	status,2,c
  3750   0018DC  EF72  F00C         	goto	u881
  3751   0018E0  EF74  F00C         	goto	u880
  3752   0018E4                     u881:
  3753   0018E4  EF77  F00C         	goto	l1693
  3754   0018E8                     u880:
  3755   0018E8  0E20               	movlw	32
  3756   0018EA  6E65               	movwf	LCD_GraphicsDisplayString@letterA^0,c
  3757   0018EC  6A56               	clrf	LCD_GraphicsDisplayString@shouldContinue^0,c
  3758   0018EE                     l1693:
  3759   0018EE  C04D  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  3760   0018F2  C04E  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  3761   0018F6  6AF8               	clrf	tblptru,c
  3762   0018F8  0E01               	movlw	(high __ramtop+-1)
  3763   0018FA  64F7               	cpfsgt	tblptrh,c
  3764   0018FC  D003               	bra	u897
  3765   0018FE  0008               	tblrd		*
  3766   001900  50F5               	movf	tablat,w,c
  3767   001902  D005               	bra	u890
  3768   001904                     u897:
  3769   001904  CFF6 FFE9          	movff	tblptrl,fsr0l
  3770   001908  CFF7 FFEA          	movff	tblptrh,fsr0h
  3771   00190C  50EF               	movf	indf0,w,c
  3772   00190E                     u890:
  3773   00190E  6E66               	movwf	LCD_GraphicsDisplayString@letterB^0,c
  3774   001910  4A4D               	infsnz	LCD_GraphicsDisplayString@str^0,f,c
  3775   001912  2A4E               	incf	(LCD_GraphicsDisplayString@str+1)^0,f,c
  3776   001914  5066               	movf	LCD_GraphicsDisplayString@letterB^0,w,c
  3777   001916  A4D8               	btfss	status,2,c
  3778   001918  EF90  F00C         	goto	u901
  3779   00191C  EF92  F00C         	goto	u900
  3780   001920                     u901:
  3781   001920  EF95  F00C         	goto	l1703
  3782   001924                     u900:
  3783   001924  0E20               	movlw	32
  3784   001926  6E66               	movwf	LCD_GraphicsDisplayString@letterB^0,c
  3785   001928  6A56               	clrf	LCD_GraphicsDisplayString@shouldContinue^0,c
  3786   00192A                     l1703:
  3787   00192A  0E51               	movlw	81
  3788   00192C  6465               	cpfsgt	LCD_GraphicsDisplayString@letterA^0,c
  3789   00192E  EF9B  F00C         	goto	u911
  3790   001932  EF9D  F00C         	goto	u910
  3791   001936                     u911:
  3792   001936  EFA5  F00C         	goto	l1707
  3793   00193A                     u910:
  3794   00193A  0EAE               	movlw	174
  3795   00193C  2465               	addwf	LCD_GraphicsDisplayString@letterA^0,w,c
  3796   00193E  6E52               	movwf	_LCD_GraphicsDisplayString$113^0,c
  3797   001940  6A53               	clrf	(_LCD_GraphicsDisplayString$113+1)^0,c
  3798   001942  0EFF               	movlw	255
  3799   001944  2253               	addwfc	(_LCD_GraphicsDisplayString$113+1)^0,f,c
  3800   001946  EFAB  F00C         	goto	l1709
  3801   00194A                     l1707:
  3802   00194A  0EE0               	movlw	224
  3803   00194C  2465               	addwf	LCD_GraphicsDisplayString@letterA^0,w,c
  3804   00194E  6E52               	movwf	_LCD_GraphicsDisplayString$113^0,c
  3805   001950  6A53               	clrf	(_LCD_GraphicsDisplayString$113+1)^0,c
  3806   001952  0EFF               	movlw	255
  3807   001954  2253               	addwfc	(_LCD_GraphicsDisplayString$113+1)^0,f,c
  3808   001956                     l1709:
  3809   001956  C052  F069         	movff	_LCD_GraphicsDisplayString$113,LCD_GraphicsDisplayString@indA
  3810   00195A  0E51               	movlw	81
  3811   00195C  6466               	cpfsgt	LCD_GraphicsDisplayString@letterB^0,c
  3812   00195E  EFB3  F00C         	goto	u921
  3813   001962  EFB5  F00C         	goto	u920
  3814   001966                     u921:
  3815   001966  EFBD  F00C         	goto	l1713
  3816   00196A                     u920:
  3817   00196A  0EAE               	movlw	174
  3818   00196C  2466               	addwf	LCD_GraphicsDisplayString@letterB^0,w,c
  3819   00196E  6E54               	movwf	_LCD_GraphicsDisplayString$115^0,c
  3820   001970  6A55               	clrf	(_LCD_GraphicsDisplayString$115+1)^0,c
  3821   001972  0EFF               	movlw	255
  3822   001974  2255               	addwfc	(_LCD_GraphicsDisplayString$115+1)^0,f,c
  3823   001976  EFC3  F00C         	goto	l1715
  3824   00197A                     l1713:
  3825   00197A  0EE0               	movlw	224
  3826   00197C  2466               	addwf	LCD_GraphicsDisplayString@letterB^0,w,c
  3827   00197E  6E54               	movwf	_LCD_GraphicsDisplayString$115^0,c
  3828   001980  6A55               	clrf	(_LCD_GraphicsDisplayString$115+1)^0,c
  3829   001982  0EFF               	movlw	255
  3830   001984  2255               	addwfc	(_LCD_GraphicsDisplayString$115+1)^0,f,c
  3831   001986                     l1715:
  3832   001986  C054  F06A         	movff	_LCD_GraphicsDisplayString$115,LCD_GraphicsDisplayString@indB
  3833   00198A  0E52               	movlw	82
  3834   00198C  6065               	cpfslt	LCD_GraphicsDisplayString@letterA^0,c
  3835   00198E  EFCB  F00C         	goto	u931
  3836   001992  EFCD  F00C         	goto	u930
  3837   001996                     u931:
  3838   001996  EF16  F00D         	goto	l1719
  3839   00199A                     u930:
  3840   00199A  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3841   00199C  0D05               	mullw	5
  3842   00199E  0E71               	movlw	low _Alpha1
  3843   0019A0  24F3               	addwf	243,w,c
  3844   0019A2  6EF6               	movwf	tblptrl,c
  3845   0019A4  0E1D               	movlw	high _Alpha1
  3846   0019A6  20F4               	addwfc	244,w,c
  3847   0019A8  6EF7               	movwf	tblptrh,c
  3848   0019AA                     	if	0	;There are less than 3 active tblptr bytes
  3849   0019AA                     	endif
  3850   0019AA  0008               	tblrd		*
  3851   0019AC  CFF5 F05B          	movff	tablat,LCD_GraphicsDisplayString@colListA+4
  3852   0019B0  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3853   0019B2  0D05               	mullw	5
  3854   0019B4  0E01               	movlw	1
  3855   0019B6  26F3               	addwf	243,f,c
  3856   0019B8  0E00               	movlw	0
  3857   0019BA  22F4               	addwfc	244,f,c
  3858   0019BC  0E71               	movlw	low _Alpha1
  3859   0019BE  24F3               	addwf	243,w,c
  3860   0019C0  6EF6               	movwf	tblptrl,c
  3861   0019C2  0E1D               	movlw	high _Alpha1
  3862   0019C4  20F4               	addwfc	244,w,c
  3863   0019C6  6EF7               	movwf	tblptrh,c
  3864   0019C8                     	if	0	;There are less than 3 active tblptr bytes
  3865   0019C8                     	endif
  3866   0019C8  0008               	tblrd		*
  3867   0019CA  CFF5 F05A          	movff	tablat,LCD_GraphicsDisplayString@colListA+3
  3868   0019CE  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3869   0019D0  0D05               	mullw	5
  3870   0019D2  0E02               	movlw	2
  3871   0019D4  26F3               	addwf	243,f,c
  3872   0019D6  0E00               	movlw	0
  3873   0019D8  22F4               	addwfc	244,f,c
  3874   0019DA  0E71               	movlw	low _Alpha1
  3875   0019DC  24F3               	addwf	243,w,c
  3876   0019DE  6EF6               	movwf	tblptrl,c
  3877   0019E0  0E1D               	movlw	high _Alpha1
  3878   0019E2  20F4               	addwfc	244,w,c
  3879   0019E4  6EF7               	movwf	tblptrh,c
  3880   0019E6                     	if	0	;There are less than 3 active tblptr bytes
  3881   0019E6                     	endif
  3882   0019E6  0008               	tblrd		*
  3883   0019E8  CFF5 F059          	movff	tablat,LCD_GraphicsDisplayString@colListA+2
  3884   0019EC  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3885   0019EE  0D05               	mullw	5
  3886   0019F0  0E03               	movlw	3
  3887   0019F2  26F3               	addwf	243,f,c
  3888   0019F4  0E00               	movlw	0
  3889   0019F6  22F4               	addwfc	244,f,c
  3890   0019F8  0E71               	movlw	low _Alpha1
  3891   0019FA  24F3               	addwf	243,w,c
  3892   0019FC  6EF6               	movwf	tblptrl,c
  3893   0019FE  0E1D               	movlw	high _Alpha1
  3894   001A00  20F4               	addwfc	244,w,c
  3895   001A02  6EF7               	movwf	tblptrh,c
  3896   001A04                     	if	0	;There are less than 3 active tblptr bytes
  3897   001A04                     	endif
  3898   001A04  0008               	tblrd		*
  3899   001A06  CFF5 F058          	movff	tablat,LCD_GraphicsDisplayString@colListA+1
  3900   001A0A  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3901   001A0C  0D05               	mullw	5
  3902   001A0E  0E04               	movlw	4
  3903   001A10  26F3               	addwf	243,f,c
  3904   001A12  0E00               	movlw	0
  3905   001A14  22F4               	addwfc	244,f,c
  3906   001A16  0E71               	movlw	low _Alpha1
  3907   001A18  24F3               	addwf	243,w,c
  3908   001A1A  6EF6               	movwf	tblptrl,c
  3909   001A1C  0E1D               	movlw	high _Alpha1
  3910   001A1E  20F4               	addwfc	244,w,c
  3911   001A20  6EF7               	movwf	tblptrh,c
  3912   001A22                     	if	0	;There are less than 3 active tblptr bytes
  3913   001A22                     	endif
  3914   001A22  0008               	tblrd		*
  3915   001A24  CFF5 F057          	movff	tablat,LCD_GraphicsDisplayString@colListA
  3916   001A28  EF5D  F00D         	goto	l1721
  3917   001A2C                     l1719:
  3918   001A2C  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3919   001A2E  0D05               	mullw	5
  3920   001A30  0E6B               	movlw	low _Alpha2
  3921   001A32  24F3               	addwf	243,w,c
  3922   001A34  6EF6               	movwf	tblptrl,c
  3923   001A36  0E1E               	movlw	high _Alpha2
  3924   001A38  20F4               	addwfc	244,w,c
  3925   001A3A  6EF7               	movwf	tblptrh,c
  3926   001A3C                     	if	0	;There are less than 3 active tblptr bytes
  3927   001A3C                     	endif
  3928   001A3C  0008               	tblrd		*
  3929   001A3E  CFF5 F05B          	movff	tablat,LCD_GraphicsDisplayString@colListA+4
  3930   001A42  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3931   001A44  0D05               	mullw	5
  3932   001A46  0E01               	movlw	1
  3933   001A48  26F3               	addwf	243,f,c
  3934   001A4A  0E00               	movlw	0
  3935   001A4C  22F4               	addwfc	244,f,c
  3936   001A4E  0E6B               	movlw	low _Alpha2
  3937   001A50  24F3               	addwf	243,w,c
  3938   001A52  6EF6               	movwf	tblptrl,c
  3939   001A54  0E1E               	movlw	high _Alpha2
  3940   001A56  20F4               	addwfc	244,w,c
  3941   001A58  6EF7               	movwf	tblptrh,c
  3942   001A5A                     	if	0	;There are less than 3 active tblptr bytes
  3943   001A5A                     	endif
  3944   001A5A  0008               	tblrd		*
  3945   001A5C  CFF5 F05A          	movff	tablat,LCD_GraphicsDisplayString@colListA+3
  3946   001A60  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3947   001A62  0D05               	mullw	5
  3948   001A64  0E02               	movlw	2
  3949   001A66  26F3               	addwf	243,f,c
  3950   001A68  0E00               	movlw	0
  3951   001A6A  22F4               	addwfc	244,f,c
  3952   001A6C  0E6B               	movlw	low _Alpha2
  3953   001A6E  24F3               	addwf	243,w,c
  3954   001A70  6EF6               	movwf	tblptrl,c
  3955   001A72  0E1E               	movlw	high _Alpha2
  3956   001A74  20F4               	addwfc	244,w,c
  3957   001A76  6EF7               	movwf	tblptrh,c
  3958   001A78                     	if	0	;There are less than 3 active tblptr bytes
  3959   001A78                     	endif
  3960   001A78  0008               	tblrd		*
  3961   001A7A  CFF5 F059          	movff	tablat,LCD_GraphicsDisplayString@colListA+2
  3962   001A7E  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3963   001A80  0D05               	mullw	5
  3964   001A82  0E03               	movlw	3
  3965   001A84  26F3               	addwf	243,f,c
  3966   001A86  0E00               	movlw	0
  3967   001A88  22F4               	addwfc	244,f,c
  3968   001A8A  0E6B               	movlw	low _Alpha2
  3969   001A8C  24F3               	addwf	243,w,c
  3970   001A8E  6EF6               	movwf	tblptrl,c
  3971   001A90  0E1E               	movlw	high _Alpha2
  3972   001A92  20F4               	addwfc	244,w,c
  3973   001A94  6EF7               	movwf	tblptrh,c
  3974   001A96                     	if	0	;There are less than 3 active tblptr bytes
  3975   001A96                     	endif
  3976   001A96  0008               	tblrd		*
  3977   001A98  CFF5 F058          	movff	tablat,LCD_GraphicsDisplayString@colListA+1
  3978   001A9C  5069               	movf	LCD_GraphicsDisplayString@indA^0,w,c
  3979   001A9E  0D05               	mullw	5
  3980   001AA0  0E04               	movlw	4
  3981   001AA2  26F3               	addwf	243,f,c
  3982   001AA4  0E00               	movlw	0
  3983   001AA6  22F4               	addwfc	244,f,c
  3984   001AA8  0E6B               	movlw	low _Alpha2
  3985   001AAA  24F3               	addwf	243,w,c
  3986   001AAC  6EF6               	movwf	tblptrl,c
  3987   001AAE  0E1E               	movlw	high _Alpha2
  3988   001AB0  20F4               	addwfc	244,w,c
  3989   001AB2  6EF7               	movwf	tblptrh,c
  3990   001AB4                     	if	0	;There are less than 3 active tblptr bytes
  3991   001AB4                     	endif
  3992   001AB4  0008               	tblrd		*
  3993   001AB6  CFF5 F057          	movff	tablat,LCD_GraphicsDisplayString@colListA
  3994   001ABA                     l1721:
  3995   001ABA  0E52               	movlw	82
  3996   001ABC  6066               	cpfslt	LCD_GraphicsDisplayString@letterB^0,c
  3997   001ABE  EF63  F00D         	goto	u941
  3998   001AC2  EF65  F00D         	goto	u940
  3999   001AC6                     u941:
  4000   001AC6  EFAE  F00D         	goto	l1725
  4001   001ACA                     u940:
  4002   001ACA  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4003   001ACC  0D05               	mullw	5
  4004   001ACE  0E71               	movlw	low _Alpha1
  4005   001AD0  24F3               	addwf	243,w,c
  4006   001AD2  6EF6               	movwf	tblptrl,c
  4007   001AD4  0E1D               	movlw	high _Alpha1
  4008   001AD6  20F4               	addwfc	244,w,c
  4009   001AD8  6EF7               	movwf	tblptrh,c
  4010   001ADA                     	if	0	;There are less than 3 active tblptr bytes
  4011   001ADA                     	endif
  4012   001ADA  0008               	tblrd		*
  4013   001ADC  CFF5 F060          	movff	tablat,LCD_GraphicsDisplayString@colListB+4
  4014   001AE0  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4015   001AE2  0D05               	mullw	5
  4016   001AE4  0E01               	movlw	1
  4017   001AE6  26F3               	addwf	243,f,c
  4018   001AE8  0E00               	movlw	0
  4019   001AEA  22F4               	addwfc	244,f,c
  4020   001AEC  0E71               	movlw	low _Alpha1
  4021   001AEE  24F3               	addwf	243,w,c
  4022   001AF0  6EF6               	movwf	tblptrl,c
  4023   001AF2  0E1D               	movlw	high _Alpha1
  4024   001AF4  20F4               	addwfc	244,w,c
  4025   001AF6  6EF7               	movwf	tblptrh,c
  4026   001AF8                     	if	0	;There are less than 3 active tblptr bytes
  4027   001AF8                     	endif
  4028   001AF8  0008               	tblrd		*
  4029   001AFA  CFF5 F05F          	movff	tablat,LCD_GraphicsDisplayString@colListB+3
  4030   001AFE  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4031   001B00  0D05               	mullw	5
  4032   001B02  0E02               	movlw	2
  4033   001B04  26F3               	addwf	243,f,c
  4034   001B06  0E00               	movlw	0
  4035   001B08  22F4               	addwfc	244,f,c
  4036   001B0A  0E71               	movlw	low _Alpha1
  4037   001B0C  24F3               	addwf	243,w,c
  4038   001B0E  6EF6               	movwf	tblptrl,c
  4039   001B10  0E1D               	movlw	high _Alpha1
  4040   001B12  20F4               	addwfc	244,w,c
  4041   001B14  6EF7               	movwf	tblptrh,c
  4042   001B16                     	if	0	;There are less than 3 active tblptr bytes
  4043   001B16                     	endif
  4044   001B16  0008               	tblrd		*
  4045   001B18  CFF5 F05E          	movff	tablat,LCD_GraphicsDisplayString@colListB+2
  4046   001B1C  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4047   001B1E  0D05               	mullw	5
  4048   001B20  0E03               	movlw	3
  4049   001B22  26F3               	addwf	243,f,c
  4050   001B24  0E00               	movlw	0
  4051   001B26  22F4               	addwfc	244,f,c
  4052   001B28  0E71               	movlw	low _Alpha1
  4053   001B2A  24F3               	addwf	243,w,c
  4054   001B2C  6EF6               	movwf	tblptrl,c
  4055   001B2E  0E1D               	movlw	high _Alpha1
  4056   001B30  20F4               	addwfc	244,w,c
  4057   001B32  6EF7               	movwf	tblptrh,c
  4058   001B34                     	if	0	;There are less than 3 active tblptr bytes
  4059   001B34                     	endif
  4060   001B34  0008               	tblrd		*
  4061   001B36  CFF5 F05D          	movff	tablat,LCD_GraphicsDisplayString@colListB+1
  4062   001B3A  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4063   001B3C  0D05               	mullw	5
  4064   001B3E  0E04               	movlw	4
  4065   001B40  26F3               	addwf	243,f,c
  4066   001B42  0E00               	movlw	0
  4067   001B44  22F4               	addwfc	244,f,c
  4068   001B46  0E71               	movlw	low _Alpha1
  4069   001B48  24F3               	addwf	243,w,c
  4070   001B4A  6EF6               	movwf	tblptrl,c
  4071   001B4C  0E1D               	movlw	high _Alpha1
  4072   001B4E  20F4               	addwfc	244,w,c
  4073   001B50  6EF7               	movwf	tblptrh,c
  4074   001B52                     	if	0	;There are less than 3 active tblptr bytes
  4075   001B52                     	endif
  4076   001B52  0008               	tblrd		*
  4077   001B54  CFF5 F05C          	movff	tablat,LCD_GraphicsDisplayString@colListB
  4078   001B58  EFF5  F00D         	goto	l1727
  4079   001B5C                     l1725:
  4080   001B5C  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4081   001B5E  0D05               	mullw	5
  4082   001B60  0E6B               	movlw	low _Alpha2
  4083   001B62  24F3               	addwf	243,w,c
  4084   001B64  6EF6               	movwf	tblptrl,c
  4085   001B66  0E1E               	movlw	high _Alpha2
  4086   001B68  20F4               	addwfc	244,w,c
  4087   001B6A  6EF7               	movwf	tblptrh,c
  4088   001B6C                     	if	0	;There are less than 3 active tblptr bytes
  4089   001B6C                     	endif
  4090   001B6C  0008               	tblrd		*
  4091   001B6E  CFF5 F060          	movff	tablat,LCD_GraphicsDisplayString@colListB+4
  4092   001B72  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4093   001B74  0D05               	mullw	5
  4094   001B76  0E01               	movlw	1
  4095   001B78  26F3               	addwf	243,f,c
  4096   001B7A  0E00               	movlw	0
  4097   001B7C  22F4               	addwfc	244,f,c
  4098   001B7E  0E6B               	movlw	low _Alpha2
  4099   001B80  24F3               	addwf	243,w,c
  4100   001B82  6EF6               	movwf	tblptrl,c
  4101   001B84  0E1E               	movlw	high _Alpha2
  4102   001B86  20F4               	addwfc	244,w,c
  4103   001B88  6EF7               	movwf	tblptrh,c
  4104   001B8A                     	if	0	;There are less than 3 active tblptr bytes
  4105   001B8A                     	endif
  4106   001B8A  0008               	tblrd		*
  4107   001B8C  CFF5 F05F          	movff	tablat,LCD_GraphicsDisplayString@colListB+3
  4108   001B90  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4109   001B92  0D05               	mullw	5
  4110   001B94  0E02               	movlw	2
  4111   001B96  26F3               	addwf	243,f,c
  4112   001B98  0E00               	movlw	0
  4113   001B9A  22F4               	addwfc	244,f,c
  4114   001B9C  0E6B               	movlw	low _Alpha2
  4115   001B9E  24F3               	addwf	243,w,c
  4116   001BA0  6EF6               	movwf	tblptrl,c
  4117   001BA2  0E1E               	movlw	high _Alpha2
  4118   001BA4  20F4               	addwfc	244,w,c
  4119   001BA6  6EF7               	movwf	tblptrh,c
  4120   001BA8                     	if	0	;There are less than 3 active tblptr bytes
  4121   001BA8                     	endif
  4122   001BA8  0008               	tblrd		*
  4123   001BAA  CFF5 F05E          	movff	tablat,LCD_GraphicsDisplayString@colListB+2
  4124   001BAE  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4125   001BB0  0D05               	mullw	5
  4126   001BB2  0E03               	movlw	3
  4127   001BB4  26F3               	addwf	243,f,c
  4128   001BB6  0E00               	movlw	0
  4129   001BB8  22F4               	addwfc	244,f,c
  4130   001BBA  0E6B               	movlw	low _Alpha2
  4131   001BBC  24F3               	addwf	243,w,c
  4132   001BBE  6EF6               	movwf	tblptrl,c
  4133   001BC0  0E1E               	movlw	high _Alpha2
  4134   001BC2  20F4               	addwfc	244,w,c
  4135   001BC4  6EF7               	movwf	tblptrh,c
  4136   001BC6                     	if	0	;There are less than 3 active tblptr bytes
  4137   001BC6                     	endif
  4138   001BC6  0008               	tblrd		*
  4139   001BC8  CFF5 F05D          	movff	tablat,LCD_GraphicsDisplayString@colListB+1
  4140   001BCC  506A               	movf	LCD_GraphicsDisplayString@indB^0,w,c
  4141   001BCE  0D05               	mullw	5
  4142   001BD0  0E04               	movlw	4
  4143   001BD2  26F3               	addwf	243,f,c
  4144   001BD4  0E00               	movlw	0
  4145   001BD6  22F4               	addwfc	244,f,c
  4146   001BD8  0E6B               	movlw	low _Alpha2
  4147   001BDA  24F3               	addwf	243,w,c
  4148   001BDC  6EF6               	movwf	tblptrl,c
  4149   001BDE  0E1E               	movlw	high _Alpha2
  4150   001BE0  20F4               	addwfc	244,w,c
  4151   001BE2  6EF7               	movwf	tblptrh,c
  4152   001BE4                     	if	0	;There are less than 3 active tblptr bytes
  4153   001BE4                     	endif
  4154   001BE4  0008               	tblrd		*
  4155   001BE6  CFF5 F05C          	movff	tablat,LCD_GraphicsDisplayString@colListB
  4156   001BEA                     l1727:
  4157   001BEA  6A67               	clrf	LCD_GraphicsDisplayString@row^0,c
  4158   001BEC                     l1733:
  4159   001BEC  0E04               	movlw	4
  4160   001BEE  6064               	cpfslt	LCD_GraphicsDisplayString@line^0,c
  4161   001BF0  EFFC  F00D         	goto	u951
  4162   001BF4  EFFE  F00D         	goto	u950
  4163   001BF8                     u951:
  4164   001BF8  EF0B  F00E         	goto	l1739
  4165   001BFC                     u950:
  4166   001BFC  5064               	movf	LCD_GraphicsDisplayString@line^0,w,c
  4167   001BFE  0D08               	mullw	8
  4168   001C00  50F3               	movf	243,w,c
  4169   001C02  2467               	addwf	LCD_GraphicsDisplayString@row^0,w,c
  4170   001C04  0980               	iorlw	128
  4171   001C06  EC2D  F005         	call	_LCD_WriteCommand
  4172   001C0A  5061               	movf	LCD_GraphicsDisplayString@count^0,w,c
  4173   001C0C  0980               	iorlw	128
  4174   001C0E  EC2D  F005         	call	_LCD_WriteCommand
  4175   001C12  EF17  F00E         	goto	l1743
  4176   001C16                     l1739:
  4177   001C16  5064               	movf	LCD_GraphicsDisplayString@line^0,w,c
  4178   001C18  0D08               	mullw	8
  4179   001C1A  50F3               	movf	243,w,c
  4180   001C1C  2467               	addwf	LCD_GraphicsDisplayString@row^0,w,c
  4181   001C1E  0FE0               	addlw	224
  4182   001C20  0980               	iorlw	128
  4183   001C22  EC2D  F005         	call	_LCD_WriteCommand
  4184   001C26  5061               	movf	LCD_GraphicsDisplayString@count^0,w,c
  4185   001C28  0988               	iorlw	136
  4186   001C2A  EC2D  F005         	call	_LCD_WriteCommand
  4187   001C2E                     l1743:
  4188   001C2E  6A62               	clrf	LCD_GraphicsDisplayString@dataA^0,c
  4189   001C30  6A68               	clrf	LCD_GraphicsDisplayString@colInd^0,c
  4190   001C32                     l1751:
  4191   001C32  5068               	movf	LCD_GraphicsDisplayString@colInd^0,w,c
  4192   001C34  0F57               	addlw	low LCD_GraphicsDisplayString@colListA
  4193   001C36  6ED9               	movwf	fsr2l,c
  4194   001C38  6ADA               	clrf	fsr2h,c
  4195   001C3A  50DF               	movf	indf2,w,c
  4196   001C3C  6E4F               	movwf	??_LCD_GraphicsDisplayString^0,c
  4197   001C3E  C067  F050         	movff	LCD_GraphicsDisplayString@row,??_LCD_GraphicsDisplayString+1
  4198   001C42  0E01               	movlw	1
  4199   001C44  6E51               	movwf	(??_LCD_GraphicsDisplayString+2)^0,c
  4200   001C46  2A50               	incf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4201   001C48  EF28  F00E         	goto	u964
  4202   001C4C                     u965:
  4203   001C4C  90D8               	bcf	status,0,c
  4204   001C4E  3651               	rlcf	(??_LCD_GraphicsDisplayString+2)^0,f,c
  4205   001C50                     u964:
  4206   001C50  2E50               	decfsz	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4207   001C52  EF26  F00E         	goto	u965
  4208   001C56  5051               	movf	(??_LCD_GraphicsDisplayString+2)^0,w,c
  4209   001C58  144F               	andwf	??_LCD_GraphicsDisplayString^0,w,c
  4210   001C5A  0900               	iorlw	0
  4211   001C5C  B4D8               	btfsc	status,2,c
  4212   001C5E  EF33  F00E         	goto	u971
  4213   001C62  EF35  F00E         	goto	u970
  4214   001C66                     u971:
  4215   001C66  EF46  F00E         	goto	l1755
  4216   001C6A                     u970:
  4217   001C6A  C068  F04F         	movff	LCD_GraphicsDisplayString@colInd,??_LCD_GraphicsDisplayString
  4218   001C6E  0E03               	movlw	3
  4219   001C70  264F               	addwf	??_LCD_GraphicsDisplayString^0,f,c
  4220   001C72  0E01               	movlw	1
  4221   001C74  6E50               	movwf	(??_LCD_GraphicsDisplayString+1)^0,c
  4222   001C76  2A4F               	incf	??_LCD_GraphicsDisplayString^0,f,c
  4223   001C78  EF40  F00E         	goto	u984
  4224   001C7C                     u985:
  4225   001C7C  90D8               	bcf	status,0,c
  4226   001C7E  3650               	rlcf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4227   001C80                     u984:
  4228   001C80  2E4F               	decfsz	??_LCD_GraphicsDisplayString^0,f,c
  4229   001C82  EF3E  F00E         	goto	u985
  4230   001C86  5050               	movf	(??_LCD_GraphicsDisplayString+1)^0,w,c
  4231   001C88  1062               	iorwf	LCD_GraphicsDisplayString@dataA^0,w,c
  4232   001C8A  6E62               	movwf	LCD_GraphicsDisplayString@dataA^0,c
  4233   001C8C                     l1755:
  4234   001C8C  2A68               	incf	LCD_GraphicsDisplayString@colInd^0,f,c
  4235   001C8E  0E04               	movlw	4
  4236   001C90  6468               	cpfsgt	LCD_GraphicsDisplayString@colInd^0,c
  4237   001C92  EF4D  F00E         	goto	u991
  4238   001C96  EF4F  F00E         	goto	u990
  4239   001C9A                     u991:
  4240   001C9A  EF19  F00E         	goto	l1751
  4241   001C9E                     u990:
  4242   001C9E  6A63               	clrf	LCD_GraphicsDisplayString@dataB^0,c
  4243   001CA0  6A68               	clrf	LCD_GraphicsDisplayString@colInd^0,c
  4244   001CA2                     l1763:
  4245   001CA2  5068               	movf	LCD_GraphicsDisplayString@colInd^0,w,c
  4246   001CA4  0F5C               	addlw	low LCD_GraphicsDisplayString@colListB
  4247   001CA6  6ED9               	movwf	fsr2l,c
  4248   001CA8  6ADA               	clrf	fsr2h,c
  4249   001CAA  50DF               	movf	indf2,w,c
  4250   001CAC  6E4F               	movwf	??_LCD_GraphicsDisplayString^0,c
  4251   001CAE  C067  F050         	movff	LCD_GraphicsDisplayString@row,??_LCD_GraphicsDisplayString+1
  4252   001CB2  0E01               	movlw	1
  4253   001CB4  6E51               	movwf	(??_LCD_GraphicsDisplayString+2)^0,c
  4254   001CB6  2A50               	incf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4255   001CB8  EF60  F00E         	goto	u1004
  4256   001CBC                     u1005:
  4257   001CBC  90D8               	bcf	status,0,c
  4258   001CBE  3651               	rlcf	(??_LCD_GraphicsDisplayString+2)^0,f,c
  4259   001CC0                     u1004:
  4260   001CC0  2E50               	decfsz	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4261   001CC2  EF5E  F00E         	goto	u1005
  4262   001CC6  5051               	movf	(??_LCD_GraphicsDisplayString+2)^0,w,c
  4263   001CC8  144F               	andwf	??_LCD_GraphicsDisplayString^0,w,c
  4264   001CCA  0900               	iorlw	0
  4265   001CCC  B4D8               	btfsc	status,2,c
  4266   001CCE  EF6B  F00E         	goto	u1011
  4267   001CD2  EF6D  F00E         	goto	u1010
  4268   001CD6                     u1011:
  4269   001CD6  EF7E  F00E         	goto	l1767
  4270   001CDA                     u1010:
  4271   001CDA  C068  F04F         	movff	LCD_GraphicsDisplayString@colInd,??_LCD_GraphicsDisplayString
  4272   001CDE  0E03               	movlw	3
  4273   001CE0  264F               	addwf	??_LCD_GraphicsDisplayString^0,f,c
  4274   001CE2  0E01               	movlw	1
  4275   001CE4  6E50               	movwf	(??_LCD_GraphicsDisplayString+1)^0,c
  4276   001CE6  2A4F               	incf	??_LCD_GraphicsDisplayString^0,f,c
  4277   001CE8  EF78  F00E         	goto	u1024
  4278   001CEC                     u1025:
  4279   001CEC  90D8               	bcf	status,0,c
  4280   001CEE  3650               	rlcf	(??_LCD_GraphicsDisplayString+1)^0,f,c
  4281   001CF0                     u1024:
  4282   001CF0  2E4F               	decfsz	??_LCD_GraphicsDisplayString^0,f,c
  4283   001CF2  EF76  F00E         	goto	u1025
  4284   001CF6  5050               	movf	(??_LCD_GraphicsDisplayString+1)^0,w,c
  4285   001CF8  1063               	iorwf	LCD_GraphicsDisplayString@dataB^0,w,c
  4286   001CFA  6E63               	movwf	LCD_GraphicsDisplayString@dataB^0,c
  4287   001CFC                     l1767:
  4288   001CFC  2A68               	incf	LCD_GraphicsDisplayString@colInd^0,f,c
  4289   001CFE  0E04               	movlw	4
  4290   001D00  6468               	cpfsgt	LCD_GraphicsDisplayString@colInd^0,c
  4291   001D02  EF85  F00E         	goto	u1031
  4292   001D06  EF87  F00E         	goto	u1030
  4293   001D0A                     u1031:
  4294   001D0A  EF51  F00E         	goto	l1763
  4295   001D0E                     u1030:
  4296   001D0E  5062               	movf	LCD_GraphicsDisplayString@dataA^0,w,c
  4297   001D10  EC33  F005         	call	_LCD_WriteData
  4298   001D14  5063               	movf	LCD_GraphicsDisplayString@dataB^0,w,c
  4299   001D16  EC33  F005         	call	_LCD_WriteData
  4300   001D1A  2A67               	incf	LCD_GraphicsDisplayString@row^0,f,c
  4301   001D1C  0E07               	movlw	7
  4302   001D1E  6467               	cpfsgt	LCD_GraphicsDisplayString@row^0,c
  4303   001D20  EF94  F00E         	goto	u1041
  4304   001D24  EF96  F00E         	goto	u1040
  4305   001D28                     u1041:
  4306   001D28  EFF6  F00D         	goto	l1733
  4307   001D2C                     u1040:
  4308   001D2C  2A61               	incf	LCD_GraphicsDisplayString@count^0,f,c
  4309   001D2E                     l1779:
  4310   001D2E  C04D  FFF6         	movff	LCD_GraphicsDisplayString@str,tblptrl
  4311   001D32  C04E  FFF7         	movff	LCD_GraphicsDisplayString@str+1,tblptrh
  4312   001D36  6AF8               	clrf	tblptru,c
  4313   001D38  0E01               	movlw	(high __ramtop+-1)
  4314   001D3A  64F7               	cpfsgt	tblptrh,c
  4315   001D3C  D003               	bra	u1057
  4316   001D3E  0008               	tblrd		*
  4317   001D40  50F5               	movf	tablat,w,c
  4318   001D42  D005               	bra	u1050
  4319   001D44                     u1057:
  4320   001D44  CFF6 FFE9          	movff	tblptrl,fsr0l
  4321   001D48  CFF7 FFEA          	movff	tblptrh,fsr0h
  4322   001D4C  50EF               	movf	indf0,w,c
  4323   001D4E                     u1050:
  4324   001D4E  0900               	iorlw	0
  4325   001D50  B4D8               	btfsc	status,2,c
  4326   001D52  EFAD  F00E         	goto	u1061
  4327   001D56  EFAF  F00E         	goto	u1060
  4328   001D5A                     u1061:
  4329   001D5A  EFB7  F00E         	goto	l78
  4330   001D5E                     u1060:
  4331   001D5E  5056               	movf	LCD_GraphicsDisplayString@shouldContinue^0,w,c
  4332   001D60  A4D8               	btfss	status,2,c
  4333   001D62  EFB5  F00E         	goto	u1071
  4334   001D66  EFB7  F00E         	goto	u1070
  4335   001D6A                     u1071:
  4336   001D6A  EF59  F00C         	goto	l1683
  4337   001D6E                     u1070:
  4338   001D6E                     l78:
  4339   001D6E  0012               	return		;funcret
  4340   001D70                     __end_of_LCD_GraphicsDisplayString:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _createRandomSeed *****************
  4344 ;; Defined at:
  4345 ;;		line 42 in file "Pls.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  i               2   12[COMRAM] int 
  4350 ;;  timer_value     2   10[COMRAM] unsigned short 
  4351 ;;  adc_value       2    8[COMRAM] unsigned short 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  2  178[None  ] unsigned short 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1
  4361 ;;      Params:         0       0       0
  4362 ;;      Locals:         6       0       0
  4363 ;;      Temps:          4       0       0
  4364 ;;      Totals:        10       0       0
  4365 ;;Total ram usage:       10 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 1
  4368 ;; This function calls:
  4369 ;;		_srand
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text14
  4376   001014                     __ptext14:
  4377                           	callstack 0
  4378   001014                     _createRandomSeed:
  4379                           	callstack 29
  4380   001014                     
  4381                           ;Pls.c: 43:     ADCON1 = 0x0E;
  4382   001014  0E0E               	movlw	14
  4383   001016  6EC1               	movwf	193,c	;volatile
  4384                           
  4385                           ;Pls.c: 44:     ADCON2 = 0xA9;
  4386   001018  0EA9               	movlw	169
  4387   00101A  6EC0               	movwf	192,c	;volatile
  4388                           
  4389                           ;Pls.c: 45:     ADCON0 = 0x01;
  4390   00101C  0E01               	movlw	1
  4391   00101E  6EC2               	movwf	194,c	;volatile
  4392   001020                     
  4393                           ;Pls.c: 47:     ADCON0bits.GO = 1;
  4394   001020  82C2               	bsf	194,1,c	;volatile
  4395   001022                     l179:
  4396   001022  B2C2               	btfsc	194,1,c	;volatile
  4397   001024  EF16  F008         	goto	u1201
  4398   001028  EF18  F008         	goto	u1200
  4399   00102C                     u1201:
  4400   00102C  EF11  F008         	goto	l179
  4401   001030                     u1200:
  4402   001030                     
  4403                           ;Pls.c: 50:     unsigned short adc_value = 0;
  4404   001030  0E00               	movlw	0
  4405   001032  6E52               	movwf	(createRandomSeed@adc_value+1)^0,c
  4406   001034  0E00               	movlw	0
  4407   001036  6E51               	movwf	createRandomSeed@adc_value^0,c
  4408   001038                     
  4409                           ;Pls.c: 53:     timer_value = TMR0L | (TMR0H << 8);
  4410   001038  50D7               	movf	215,w,c	;volatile
  4411   00103A  6E4E               	movwf	(??_createRandomSeed+1)^0,c
  4412   00103C  6A4D               	clrf	??_createRandomSeed^0,c
  4413   00103E  50D6               	movf	214,w,c	;volatile
  4414   001040  6E4F               	movwf	(??_createRandomSeed+2)^0,c
  4415   001042  6A50               	clrf	(??_createRandomSeed+3)^0,c
  4416   001044  504D               	movf	??_createRandomSeed^0,w,c
  4417   001046  104F               	iorwf	(??_createRandomSeed+2)^0,w,c
  4418   001048  6E53               	movwf	createRandomSeed@timer_value^0,c
  4419   00104A  504E               	movf	(??_createRandomSeed+1)^0,w,c
  4420   00104C  1050               	iorwf	(??_createRandomSeed+3)^0,w,c
  4421   00104E  6E54               	movwf	(createRandomSeed@timer_value+1)^0,c
  4422   001050                     
  4423                           ;Pls.c: 57:     for (int i = 0; i < 4; i++) {
  4424   001050  0E00               	movlw	0
  4425   001052  6E56               	movwf	(createRandomSeed@i+1)^0,c
  4426   001054  0E00               	movlw	0
  4427   001056  6E55               	movwf	createRandomSeed@i^0,c
  4428   001058                     l1947:
  4429                           
  4430                           ;Pls.c: 58:         adc_value ^= ((ADRESH << 8) + ADRESL);
  4431   001058  50C3               	movf	195,w,c	;volatile
  4432   00105A  CFC4 F04D          	movff	4036,??_createRandomSeed	;volatile
  4433   00105E  6A4E               	clrf	(??_createRandomSeed+1)^0,c
  4434   001060  C04D  F04E         	movff	??_createRandomSeed,??_createRandomSeed+1
  4435   001064  6A4D               	clrf	??_createRandomSeed^0,c
  4436   001066  264D               	addwf	??_createRandomSeed^0,f,c
  4437   001068  0E00               	movlw	0
  4438   00106A  224E               	addwfc	(??_createRandomSeed+1)^0,f,c
  4439   00106C  504D               	movf	??_createRandomSeed^0,w,c
  4440   00106E  1A51               	xorwf	createRandomSeed@adc_value^0,f,c
  4441   001070  504E               	movf	(??_createRandomSeed+1)^0,w,c
  4442   001072  1A52               	xorwf	(createRandomSeed@adc_value+1)^0,f,c
  4443   001074                     
  4444                           ;Pls.c: 59:         _delay((unsigned long)((10)*(8000000/4000.0)));
  4445   001074  0E1A               	movlw	26
  4446   001076  6E4D               	movwf	??_createRandomSeed^0,c
  4447   001078  0EF8               	movlw	248
  4448   00107A                     u1637:
  4449   00107A  2EE8               	decfsz	wreg,f,c
  4450   00107C  D7FE               	bra	u1637
  4451   00107E  2E4D               	decfsz	??_createRandomSeed^0,f,c
  4452   001080  D7FC               	bra	u1637
  4453   001082  D000               	nop2	
  4454                           
  4455                           ;Pls.c: 60:     }
  4456   001084  4A55               	infsnz	createRandomSeed@i^0,f,c
  4457   001086  2A56               	incf	(createRandomSeed@i+1)^0,f,c
  4458   001088  BE56               	btfsc	(createRandomSeed@i+1)^0,7,c
  4459   00108A  EF50  F008         	goto	u1211
  4460   00108E  5056               	movf	(createRandomSeed@i+1)^0,w,c
  4461   001090  E109               	bnz	u1210
  4462   001092  0E04               	movlw	4
  4463   001094  5C55               	subwf	createRandomSeed@i^0,w,c
  4464   001096  A0D8               	btfss	status,0,c
  4465   001098  EF50  F008         	goto	u1211
  4466   00109C  EF52  F008         	goto	u1210
  4467   0010A0                     u1211:
  4468   0010A0  EF2C  F008         	goto	l1947
  4469   0010A4                     u1210:
  4470   0010A4                     
  4471                           ;Pls.c: 62:     srand(adc_value ^ timer_value);
  4472   0010A4  5053               	movf	createRandomSeed@timer_value^0,w,c
  4473   0010A6  1851               	xorwf	createRandomSeed@adc_value^0,w,c
  4474   0010A8  6E49               	movwf	srand@s^0,c
  4475   0010AA  5054               	movf	(createRandomSeed@timer_value+1)^0,w,c
  4476   0010AC  1852               	xorwf	(createRandomSeed@adc_value+1)^0,w,c
  4477   0010AE  6E4A               	movwf	(srand@s+1)^0,c
  4478   0010B0  EC42  F005         	call	_srand	;wreg free
  4479   0010B4                     
  4480                           ;Pls.c: 65:     ADCON0 = 0x00;
  4481   0010B4  6AC2               	clrf	194,c	;volatile
  4482   0010B6                     
  4483                           ;Pls.c: 66:     ADCON1 = 0x0F;
  4484   0010B6  0E0F               	movlw	15
  4485   0010B8  6EC1               	movwf	193,c	;volatile
  4486   0010BA  0012               	return		;funcret
  4487   0010BC                     __end_of_createRandomSeed:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function _srand *****************
  4491 ;; Defined at:
  4492 ;;		line 6 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\rand.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  s               2    0[COMRAM] unsigned int 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1
  4506 ;;      Params:         2       0       0
  4507 ;;      Locals:         0       0       0
  4508 ;;      Temps:          2       0       0
  4509 ;;      Totals:         4       0       0
  4510 ;;Total ram usage:        4 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_createRandomSeed
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text15
  4520   000A84                     __ptext15:
  4521                           	callstack 0
  4522   000A84                     _srand:
  4523                           	callstack 29
  4524   000A84  0EFF               	movlw	255
  4525   000A86  2449               	addwf	srand@s^0,w,c
  4526   000A88  6E4B               	movwf	??_srand^0,c
  4527   000A8A  0EFF               	movlw	255
  4528   000A8C  204A               	addwfc	(srand@s+1)^0,w,c
  4529   000A8E  6E4C               	movwf	(??_srand+1)^0,c
  4530   000A90  C04B  F045         	movff	??_srand,_seed
  4531   000A94  C04C  F046         	movff	??_srand+1,_seed+1
  4532   000A98  6A47               	clrf	(_seed+2)^0,c
  4533   000A9A  6A48               	clrf	(_seed+3)^0,c
  4534   000A9C  0012               	return		;funcret
  4535   000A9E                     __end_of_srand:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _LCD_Init *****************
  4539 ;; Defined at:
  4540 ;;		line 8 in file "12864_lcd.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1
  4554 ;;      Params:         0       0       0
  4555 ;;      Locals:         0       0       0
  4556 ;;      Temps:          1       0       0
  4557 ;;      Totals:         1       0       0
  4558 ;;Total ram usage:        1 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; Hardware stack levels required when called: 2
  4561 ;; This function calls:
  4562 ;;		_LCD_WriteCommand
  4563 ;; This function is called by:
  4564 ;;		_main
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text16
  4569   000ED6                     __ptext16:
  4570                           	callstack 0
  4571   000ED6                     _LCD_Init:
  4572                           	callstack 28
  4573   000ED6  6A93               	clrf	147,c	;volatile
  4574   000ED8  848A               	bsf	138,2,c	;volatile
  4575   000EDA  948A               	bcf	138,2,c	;volatile
  4576   000EDC  0E0D               	movlw	13
  4577   000EDE  6E4D               	movwf	??_LCD_Init^0,c
  4578   000EE0  0EFC               	movlw	252
  4579   000EE2                     u1647:
  4580   000EE2  2EE8               	decfsz	wreg,f,c
  4581   000EE4  D7FE               	bra	u1647
  4582   000EE6  2E4D               	decfsz	??_LCD_Init^0,f,c
  4583   000EE8  D7FC               	bra	u1647
  4584   000EEA  848A               	bsf	138,2,c	;volatile
  4585   000EEC  0E82               	movlw	130
  4586   000EEE  6E4D               	movwf	??_LCD_Init^0,c
  4587   000EF0  0EDE               	movlw	222
  4588   000EF2                     u1657:
  4589   000EF2  2EE8               	decfsz	wreg,f,c
  4590   000EF4  D7FE               	bra	u1657
  4591   000EF6  2E4D               	decfsz	??_LCD_Init^0,f,c
  4592   000EF8  D7FC               	bra	u1657
  4593   000EFA  0E20               	movlw	32
  4594   000EFC  EC2D  F005         	call	_LCD_WriteCommand
  4595   000F00  0E0D               	movlw	13
  4596   000F02  6E4D               	movwf	??_LCD_Init^0,c
  4597   000F04  0EFC               	movlw	252
  4598   000F06                     u1667:
  4599   000F06  2EE8               	decfsz	wreg,f,c
  4600   000F08  D7FE               	bra	u1667
  4601   000F0A  2E4D               	decfsz	??_LCD_Init^0,f,c
  4602   000F0C  D7FC               	bra	u1667
  4603   000F0E  0E20               	movlw	32
  4604   000F10  EC2D  F005         	call	_LCD_WriteCommand
  4605   000F14  0E0D               	movlw	13
  4606   000F16  6E4D               	movwf	??_LCD_Init^0,c
  4607   000F18  0EFC               	movlw	252
  4608   000F1A                     u1677:
  4609   000F1A  2EE8               	decfsz	wreg,f,c
  4610   000F1C  D7FE               	bra	u1677
  4611   000F1E  2E4D               	decfsz	??_LCD_Init^0,f,c
  4612   000F20  D7FC               	bra	u1677
  4613   000F22  0E0C               	movlw	12
  4614   000F24  EC2D  F005         	call	_LCD_WriteCommand
  4615   000F28  0E0D               	movlw	13
  4616   000F2A  6E4D               	movwf	??_LCD_Init^0,c
  4617   000F2C  0EFC               	movlw	252
  4618   000F2E                     u1687:
  4619   000F2E  2EE8               	decfsz	wreg,f,c
  4620   000F30  D7FE               	bra	u1687
  4621   000F32  2E4D               	decfsz	??_LCD_Init^0,f,c
  4622   000F34  D7FC               	bra	u1687
  4623   000F36  0E01               	movlw	1
  4624   000F38  EC2D  F005         	call	_LCD_WriteCommand
  4625   000F3C  0E0D               	movlw	13
  4626   000F3E  6E4D               	movwf	??_LCD_Init^0,c
  4627   000F40  0EFC               	movlw	252
  4628   000F42                     u1697:
  4629   000F42  2EE8               	decfsz	wreg,f,c
  4630   000F44  D7FE               	bra	u1697
  4631   000F46  2E4D               	decfsz	??_LCD_Init^0,f,c
  4632   000F48  D7FC               	bra	u1697
  4633   000F4A  0E06               	movlw	6
  4634   000F4C  EC2D  F005         	call	_LCD_WriteCommand
  4635   000F50  0E0D               	movlw	13
  4636   000F52  6E4D               	movwf	??_LCD_Init^0,c
  4637   000F54  0EFC               	movlw	252
  4638   000F56                     u1707:
  4639   000F56  2EE8               	decfsz	wreg,f,c
  4640   000F58  D7FE               	bra	u1707
  4641   000F5A  2E4D               	decfsz	??_LCD_Init^0,f,c
  4642   000F5C  D7FC               	bra	u1707
  4643   000F5E  0E02               	movlw	2
  4644   000F60  EC2D  F005         	call	_LCD_WriteCommand
  4645   000F64  0E0D               	movlw	13
  4646   000F66  6E4D               	movwf	??_LCD_Init^0,c
  4647   000F68  0EFC               	movlw	252
  4648   000F6A                     u1717:
  4649   000F6A  2EE8               	decfsz	wreg,f,c
  4650   000F6C  D7FE               	bra	u1717
  4651   000F6E  2E4D               	decfsz	??_LCD_Init^0,f,c
  4652   000F70  D7FC               	bra	u1717
  4653   000F72  0012               	return		;funcret
  4654   000F74                     __end_of_LCD_Init:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _LCD_EnableGraphics *****************
  4658 ;; Defined at:
  4659 ;;		line 55 in file "12864_lcd.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1
  4673 ;;      Params:         0       0       0
  4674 ;;      Locals:         0       0       0
  4675 ;;      Temps:          1       0       0
  4676 ;;      Totals:         1       0       0
  4677 ;;Total ram usage:        1 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 2
  4680 ;; This function calls:
  4681 ;;		_LCD_WriteCommand
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text17
  4688   000B08                     __ptext17:
  4689                           	callstack 0
  4690   000B08                     _LCD_EnableGraphics:
  4691                           	callstack 28
  4692   000B08  0E20               	movlw	32
  4693   000B0A  EC2D  F005         	call	_LCD_WriteCommand
  4694   000B0E  0E03               	movlw	3
  4695   000B10  6E4D               	movwf	??_LCD_EnableGraphics^0,c
  4696   000B12  0E98               	movlw	152
  4697   000B14                     u1727:
  4698   000B14  2EE8               	decfsz	wreg,f,c
  4699   000B16  D7FE               	bra	u1727
  4700   000B18  2E4D               	decfsz	??_LCD_EnableGraphics^0,f,c
  4701   000B1A  D7FC               	bra	u1727
  4702   000B1C  0E24               	movlw	36
  4703   000B1E  EC2D  F005         	call	_LCD_WriteCommand
  4704   000B22  0E03               	movlw	3
  4705   000B24  6E4D               	movwf	??_LCD_EnableGraphics^0,c
  4706   000B26  0E98               	movlw	152
  4707   000B28                     u1737:
  4708   000B28  2EE8               	decfsz	wreg,f,c
  4709   000B2A  D7FE               	bra	u1737
  4710   000B2C  2E4D               	decfsz	??_LCD_EnableGraphics^0,f,c
  4711   000B2E  D7FC               	bra	u1737
  4712   000B30  0E26               	movlw	38
  4713   000B32  EC2D  F005         	call	_LCD_WriteCommand
  4714   000B36  0E03               	movlw	3
  4715   000B38  6E4D               	movwf	??_LCD_EnableGraphics^0,c
  4716   000B3A  0E98               	movlw	152
  4717   000B3C                     u1747:
  4718   000B3C  2EE8               	decfsz	wreg,f,c
  4719   000B3E  D7FE               	bra	u1747
  4720   000B40  2E4D               	decfsz	??_LCD_EnableGraphics^0,f,c
  4721   000B42  D7FC               	bra	u1747
  4722   000B44  0012               	return		;funcret
  4723   000B46                     __end_of_LCD_EnableGraphics:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _LCD_ClearGraphics *****************
  4727 ;; Defined at:
  4728 ;;		line 202 in file "12864_lcd.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  y               1    5[COMRAM] unsigned char 
  4733 ;;  x               1    4[COMRAM] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1
  4743 ;;      Params:         0       0       0
  4744 ;;      Locals:         2       0       0
  4745 ;;      Temps:          0       0       0
  4746 ;;      Totals:         2       0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 2
  4750 ;; This function calls:
  4751 ;;		_LCD_WriteCommand
  4752 ;;		_LCD_WriteData
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text18
  4759   000BAA                     __ptext18:
  4760                           	callstack 0
  4761   000BAA                     _LCD_ClearGraphics:
  4762                           	callstack 28
  4763   000BAA  6A4E               	clrf	LCD_ClearGraphics@y^0,c
  4764   000BAC                     l1913:
  4765   000BAC  0E20               	movlw	32
  4766   000BAE  604E               	cpfslt	LCD_ClearGraphics@y^0,c
  4767   000BB0  EFDC  F005         	goto	u1171
  4768   000BB4  EFDE  F005         	goto	u1170
  4769   000BB8                     u1171:
  4770   000BB8  EFE7  F005         	goto	l1917
  4771   000BBC                     u1170:
  4772   000BBC  504E               	movf	LCD_ClearGraphics@y^0,w,c
  4773   000BBE  0980               	iorlw	128
  4774   000BC0  EC2D  F005         	call	_LCD_WriteCommand
  4775   000BC4  0E80               	movlw	128
  4776   000BC6  EC2D  F005         	call	_LCD_WriteCommand
  4777   000BCA  EFEF  F005         	goto	l1919
  4778   000BCE                     l1917:
  4779   000BCE  504E               	movf	LCD_ClearGraphics@y^0,w,c
  4780   000BD0  0FE0               	addlw	224
  4781   000BD2  0980               	iorlw	128
  4782   000BD4  EC2D  F005         	call	_LCD_WriteCommand
  4783   000BD8  0E88               	movlw	136
  4784   000BDA  EC2D  F005         	call	_LCD_WriteCommand
  4785   000BDE                     l1919:
  4786   000BDE  6A4D               	clrf	LCD_ClearGraphics@x^0,c
  4787   000BE0                     l1925:
  4788   000BE0  0E00               	movlw	0
  4789   000BE2  EC33  F005         	call	_LCD_WriteData
  4790   000BE6  0E00               	movlw	0
  4791   000BE8  EC33  F005         	call	_LCD_WriteData
  4792   000BEC  2A4D               	incf	LCD_ClearGraphics@x^0,f,c
  4793   000BEE  0E07               	movlw	7
  4794   000BF0  644D               	cpfsgt	LCD_ClearGraphics@x^0,c
  4795   000BF2  EFFD  F005         	goto	u1181
  4796   000BF6  EFFF  F005         	goto	u1180
  4797   000BFA                     u1181:
  4798   000BFA  EFF0  F005         	goto	l1925
  4799   000BFE                     u1180:
  4800   000BFE  2A4E               	incf	LCD_ClearGraphics@y^0,f,c
  4801   000C00  0E3F               	movlw	63
  4802   000C02  644E               	cpfsgt	LCD_ClearGraphics@y^0,c
  4803   000C04  EF06  F006         	goto	u1191
  4804   000C08  EF08  F006         	goto	u1190
  4805   000C0C                     u1191:
  4806   000C0C  EFD6  F005         	goto	l1913
  4807   000C10                     u1190:
  4808   000C10  0012               	return		;funcret
  4809   000C12                     __end_of_LCD_ClearGraphics:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _LCD_WriteData *****************
  4813 ;; Defined at:
  4814 ;;		line 253 in file "12864_lcd.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  data            1    wreg     unsigned char 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  data            1    3[COMRAM] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1
  4828 ;;      Params:         0       0       0
  4829 ;;      Locals:         1       0       0
  4830 ;;      Temps:          0       0       0
  4831 ;;      Totals:         1       0       0
  4832 ;;Total ram usage:        1 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 1
  4835 ;; This function calls:
  4836 ;;		_LCD_WriteByte
  4837 ;; This function is called by:
  4838 ;;		_LCD_GraphicsDisplayString
  4839 ;;		_LCD_ClearGraphics
  4840 ;;		_LCD_TextDisplayString
  4841 ;;		_LCD_FillScreenGraphics
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text19
  4846   000A66                     __ptext19:
  4847                           	callstack 0
  4848   000A66                     _LCD_WriteData:
  4849                           	callstack 26
  4850                           
  4851                           ;incstack = 0
  4852                           ;LCD_WriteData@data stored from wreg
  4853   000A66  6E4C               	movwf	LCD_WriteData@data^0,c
  4854   000A68  808A               	bsf	138,0,c	;volatile
  4855   000A6A  504C               	movf	LCD_WriteData@data^0,w,c
  4856   000A6C  EC88  F009         	call	_LCD_WriteByte
  4857   000A70  0012               	return		;funcret
  4858   000A72                     __end_of_LCD_WriteData:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _LCD_WriteCommand *****************
  4862 ;; Defined at:
  4863 ;;		line 259 in file "12864_lcd.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  command         1    wreg     unsigned char 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  command         1    3[COMRAM] unsigned char 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1
  4877 ;;      Params:         0       0       0
  4878 ;;      Locals:         1       0       0
  4879 ;;      Temps:          0       0       0
  4880 ;;      Totals:         1       0       0
  4881 ;;Total ram usage:        1 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 1
  4884 ;; This function calls:
  4885 ;;		_LCD_WriteByte
  4886 ;; This function is called by:
  4887 ;;		_LCD_Init
  4888 ;;		_LCD_EnableGraphics
  4889 ;;		_LCD_GraphicsDisplayString
  4890 ;;		_LCD_ClearGraphics
  4891 ;;		_LCD_TextDisplayString
  4892 ;;		_LCD_DisableGraphics
  4893 ;;		_LCD_FillScreenGraphics
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text20
  4898   000A5A                     __ptext20:
  4899                           	callstack 0
  4900   000A5A                     _LCD_WriteCommand:
  4901                           	callstack 26
  4902                           
  4903                           ;incstack = 0
  4904                           ;LCD_WriteCommand@command stored from wreg
  4905   000A5A  6E4C               	movwf	LCD_WriteCommand@command^0,c
  4906   000A5C  908A               	bcf	138,0,c	;volatile
  4907   000A5E  504C               	movf	LCD_WriteCommand@command^0,w,c
  4908   000A60  EC88  F009         	call	_LCD_WriteByte
  4909   000A64  0012               	return		;funcret
  4910   000A66                     __end_of_LCD_WriteCommand:
  4911                           	callstack 0
  4912                           
  4913 ;; *************** function _LCD_WriteByte *****************
  4914 ;; Defined at:
  4915 ;;		line 228 in file "12864_lcd.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  command         1    wreg     unsigned char 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  command         1    2[COMRAM] unsigned char 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0, cstack
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMRAM   BANK0   BANK1
  4929 ;;      Params:         0       0       0
  4930 ;;      Locals:         1       0       0
  4931 ;;      Temps:          2       0       0
  4932 ;;      Totals:         3       0       0
  4933 ;;Total ram usage:        3 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_LCD_WriteData
  4939 ;;		_LCD_WriteCommand
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text21
  4944   001310                     __ptext21:
  4945                           	callstack 0
  4946   001310                     _LCD_WriteByte:
  4947                           	callstack 26
  4948                           
  4949                           ;incstack = 0
  4950                           ;LCD_WriteByte@command stored from wreg
  4951   001310  6E4B               	movwf	LCD_WriteByte@command^0,c
  4952   001312  828A               	bsf	138,1,c	;volatile
  4953   001314  0E0D               	movlw	13
  4954   001316                     u1757:
  4955   001316  2EE8               	decfsz	wreg,f,c
  4956   001318  D7FE               	bra	u1757
  4957   00131A  0000               	nop	
  4958   00131C  C04B  F049         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4959   001320  3A49               	swapf	??_LCD_WriteByte^0,f,c
  4960   001322  0E0F               	movlw	15
  4961   001324  1649               	andwf	??_LCD_WriteByte^0,f,c
  4962   001326  0E01               	movlw	1
  4963   001328  1649               	andwf	??_LCD_WriteByte^0,f,c
  4964   00132A  4649               	rlncf	??_LCD_WriteByte^0,f,c
  4965   00132C  4649               	rlncf	??_LCD_WriteByte^0,f,c
  4966   00132E  4649               	rlncf	??_LCD_WriteByte^0,f,c
  4967   001330  508A               	movf	138,w,c	;volatile
  4968   001332  1849               	xorwf	??_LCD_WriteByte^0,w,c
  4969   001334  0BF7               	andlw	-9
  4970   001336  1849               	xorwf	??_LCD_WriteByte^0,w,c
  4971   001338  6E8A               	movwf	138,c	;volatile
  4972   00133A  C04B  F049         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4973   00133E  0E05               	movlw	5
  4974   001340  6E4A               	movwf	(??_LCD_WriteByte+1)^0,c
  4975   001342                     u825:
  4976   001342  90D8               	bcf	status,0,c
  4977   001344  3249               	rrcf	??_LCD_WriteByte^0,f,c
  4978   001346  2E4A               	decfsz	(??_LCD_WriteByte+1)^0,f,c
  4979   001348  EFA1  F009         	goto	u825
  4980   00134C  0E01               	movlw	1
  4981   00134E  1649               	andwf	??_LCD_WriteByte^0,f,c
  4982   001350  3A49               	swapf	??_LCD_WriteByte^0,f,c
  4983   001352  508A               	movf	138,w,c	;volatile
  4984   001354  1849               	xorwf	??_LCD_WriteByte^0,w,c
  4985   001356  0BEF               	andlw	-17
  4986   001358  1849               	xorwf	??_LCD_WriteByte^0,w,c
  4987   00135A  6E8A               	movwf	138,c	;volatile
  4988   00135C  C04B  F049         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  4989   001360  0E06               	movlw	6
  4990   001362  6E4A               	movwf	(??_LCD_WriteByte+1)^0,c
  4991   001364                     u835:
  4992   001364  90D8               	bcf	status,0,c
  4993   001366  3249               	rrcf	??_LCD_WriteByte^0,f,c
  4994   001368  2E4A               	decfsz	(??_LCD_WriteByte+1)^0,f,c
  4995   00136A  EFB2  F009         	goto	u835
  4996   00136E  0E01               	movlw	1
  4997   001370  1649               	andwf	??_LCD_WriteByte^0,f,c
  4998   001372  3A49               	swapf	??_LCD_WriteByte^0,f,c
  4999   001374  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5000   001376  508A               	movf	138,w,c	;volatile
  5001   001378  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5002   00137A  0BDF               	andlw	-33
  5003   00137C  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5004   00137E  6E8A               	movwf	138,c	;volatile
  5005   001380  6A49               	clrf	??_LCD_WriteByte^0,c
  5006   001382  AE4B               	btfss	LCD_WriteByte@command^0,7,c
  5007   001384  D001               	bra	u845
  5008   001386  2A49               	incf	??_LCD_WriteByte^0,f,c
  5009   001388                     u845:
  5010   001388  0E01               	movlw	1
  5011   00138A  1649               	andwf	??_LCD_WriteByte^0,f,c
  5012   00138C  3A49               	swapf	??_LCD_WriteByte^0,f,c
  5013   00138E  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5014   001390  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5015   001392  508A               	movf	138,w,c	;volatile
  5016   001394  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5017   001396  0BBF               	andlw	-65
  5018   001398  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5019   00139A  6E8A               	movwf	138,c	;volatile
  5020   00139C  0E0D               	movlw	13
  5021   00139E                     u1767:
  5022   00139E  2EE8               	decfsz	wreg,f,c
  5023   0013A0  D7FE               	bra	u1767
  5024   0013A2  0000               	nop	
  5025   0013A4  928A               	bcf	138,1,c	;volatile
  5026   0013A6  828A               	bsf	138,1,c	;volatile
  5027   0013A8  0E0D               	movlw	13
  5028   0013AA                     u1777:
  5029   0013AA  2EE8               	decfsz	wreg,f,c
  5030   0013AC  D7FE               	bra	u1777
  5031   0013AE  0000               	nop	
  5032   0013B0  C04B  F049         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  5033   0013B4  0E01               	movlw	1
  5034   0013B6  1649               	andwf	??_LCD_WriteByte^0,f,c
  5035   0013B8  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5036   0013BA  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5037   0013BC  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5038   0013BE  508A               	movf	138,w,c	;volatile
  5039   0013C0  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5040   0013C2  0BF7               	andlw	-9
  5041   0013C4  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5042   0013C6  6E8A               	movwf	138,c	;volatile
  5043   0013C8  C04B  F049         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  5044   0013CC  90D8               	bcf	status,0,c
  5045   0013CE  3249               	rrcf	??_LCD_WriteByte^0,f,c
  5046   0013D0  0E01               	movlw	1
  5047   0013D2  1649               	andwf	??_LCD_WriteByte^0,f,c
  5048   0013D4  3A49               	swapf	??_LCD_WriteByte^0,f,c
  5049   0013D6  508A               	movf	138,w,c	;volatile
  5050   0013D8  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5051   0013DA  0BEF               	andlw	-17
  5052   0013DC  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5053   0013DE  6E8A               	movwf	138,c	;volatile
  5054   0013E0  C04B  F049         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  5055   0013E4  90D8               	bcf	status,0,c
  5056   0013E6  3249               	rrcf	??_LCD_WriteByte^0,f,c
  5057   0013E8  90D8               	bcf	status,0,c
  5058   0013EA  3249               	rrcf	??_LCD_WriteByte^0,f,c
  5059   0013EC  0E01               	movlw	1
  5060   0013EE  1649               	andwf	??_LCD_WriteByte^0,f,c
  5061   0013F0  3A49               	swapf	??_LCD_WriteByte^0,f,c
  5062   0013F2  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5063   0013F4  508A               	movf	138,w,c	;volatile
  5064   0013F6  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5065   0013F8  0BDF               	andlw	-33
  5066   0013FA  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5067   0013FC  6E8A               	movwf	138,c	;volatile
  5068   0013FE  C04B  F049         	movff	LCD_WriteByte@command,??_LCD_WriteByte
  5069   001402  90D8               	bcf	status,0,c
  5070   001404  3249               	rrcf	??_LCD_WriteByte^0,f,c
  5071   001406  90D8               	bcf	status,0,c
  5072   001408  3249               	rrcf	??_LCD_WriteByte^0,f,c
  5073   00140A  90D8               	bcf	status,0,c
  5074   00140C  3249               	rrcf	??_LCD_WriteByte^0,f,c
  5075   00140E  0E01               	movlw	1
  5076   001410  1649               	andwf	??_LCD_WriteByte^0,f,c
  5077   001412  3A49               	swapf	??_LCD_WriteByte^0,f,c
  5078   001414  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5079   001416  4649               	rlncf	??_LCD_WriteByte^0,f,c
  5080   001418  508A               	movf	138,w,c	;volatile
  5081   00141A  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5082   00141C  0BBF               	andlw	-65
  5083   00141E  1849               	xorwf	??_LCD_WriteByte^0,w,c
  5084   001420  6E8A               	movwf	138,c	;volatile
  5085   001422  0E0D               	movlw	13
  5086   001424                     u1787:
  5087   001424  2EE8               	decfsz	wreg,f,c
  5088   001426  D7FE               	bra	u1787
  5089   001428  0000               	nop	
  5090   00142A  928A               	bcf	138,1,c	;volatile
  5091   00142C  0E0D               	movlw	13
  5092   00142E                     u1797:
  5093   00142E  2EE8               	decfsz	wreg,f,c
  5094   001430  D7FE               	bra	u1797
  5095   001432  0000               	nop	
  5096   001434  0012               	return		;funcret
  5097   001436                     __end_of_LCD_WriteByte:
  5098                           	callstack 0
  5099                           
  5100                           	psect	rparam
  5101   000001                     ___rparam_used  equ	1
  5102   000000                     ___param_bank   equ	0
  5103   000000                     __Lparam        equ	__Lrparam
  5104   000000                     __Hparam        equ	__Hrparam
  5105                           
  5106                           	psect	config
  5107                           
  5108                           ; Padding undefined space
  5109   300000                     	org	3145728
  5110   300000  FF                 	db	255
  5111                           
  5112                           ;Config register CONFIG1H @ 0x300001
  5113                           ;	Oscillator
  5114                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  5115                           ;	Fail-Safe Clock Monitor Enable bit
  5116                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5117                           ;	Internal/External Oscillator Switchover bit
  5118                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5119   300001                     	org	3145729
  5120   300001  08                 	db	8
  5121                           
  5122                           ;Config register CONFIG2L @ 0x300002
  5123                           ;	Power-up Timer Enable bit
  5124                           ;	PWRT = OFF, PWRT disabled
  5125                           ;	Brown-out Reset Enable bits
  5126                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5127                           ;	Brown-out Reset Voltage bits
  5128                           ;	BORV = 3, Minimum Setting
  5129   300002                     	org	3145730
  5130   300002  19                 	db	25
  5131                           
  5132                           ;Config register CONFIG2H @ 0x300003
  5133                           ;	Watchdog Timer Enable bit
  5134                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5135                           ;	Watchdog Timer Postscale Select bits
  5136                           ;	WDTPS = 32768, 1:32768
  5137   300003                     	org	3145731
  5138   300003  1E                 	db	30
  5139                           
  5140                           ; Padding undefined space
  5141   300004                     	org	3145732
  5142   300004  FF                 	db	255
  5143                           
  5144                           ;Config register CONFIG3H @ 0x300005
  5145                           ;	CCP2 MUX bit
  5146                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  5147                           ;	PORTB A/D Enable bit
  5148                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  5149                           ;	Low-Power Timer1 Oscillator Enable bit
  5150                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5151                           ;	MCLR Pin Enable bit
  5152                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5153   300005                     	org	3145733
  5154   300005  83                 	db	131
  5155                           
  5156                           ;Config register CONFIG4L @ 0x300006
  5157                           ;	Stack Full/Underflow Reset Enable bit
  5158                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5159                           ;	Single-Supply ICSP Enable bit
  5160                           ;	LVP = OFF, Single-Supply ICSP disabled
  5161                           ;	Boot Block Size Select bits
  5162                           ;	BBSIZ = BB256, 256 Word
  5163                           ;	Extended Instruction Set Enable bit
  5164                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5165                           ;	Background Debugger Enable bit
  5166                           ;	DEBUG = 0x1, unprogrammed default
  5167   300006                     	org	3145734
  5168   300006  81                 	db	129
  5169                           
  5170                           ; Padding undefined space
  5171   300007                     	org	3145735
  5172   300007  FF                 	db	255
  5173                           
  5174                           ;Config register CONFIG5L @ 0x300008
  5175                           ;	Code Protection bit
  5176                           ;	CP0 = OFF, Block 0 not code-protected
  5177                           ;	Code Protection bit
  5178                           ;	CP1 = OFF, Block 1 not code-protected
  5179   300008                     	org	3145736
  5180   300008  03                 	db	3
  5181                           
  5182                           ;Config register CONFIG5H @ 0x300009
  5183                           ;	Boot Block Code Protection bitProtect Boot
  5184                           ;	CPB = OFF, Boot block not code-protected
  5185                           ;	Data EEPROM Code Protection bit
  5186                           ;	CPD = OFF, Data EEPROM not code-protected
  5187   300009                     	org	3145737
  5188   300009  C0                 	db	192
  5189                           
  5190                           ;Config register CONFIG6L @ 0x30000A
  5191                           ;	Write Protection bit
  5192                           ;	WRT0 = OFF, Block 0 not write-protected
  5193                           ;	Write Protection bit
  5194                           ;	WRT1 = OFF, Block 1 not write-protected
  5195   30000A                     	org	3145738
  5196   30000A  03                 	db	3
  5197                           
  5198                           ;Config register CONFIG6H @ 0x30000B
  5199                           ;	Configuration Register Write Protection bit
  5200                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5201                           ;	Boot Block Write Protection bit
  5202                           ;	WRTB = OFF, Boot block not write-protected
  5203                           ;	Data EEPROM Write Protection bit
  5204                           ;	WRTD = OFF, Data EEPROM not write-protected
  5205   30000B                     	org	3145739
  5206   30000B  E0                 	db	224
  5207                           
  5208                           ;Config register CONFIG7L @ 0x30000C
  5209                           ;	Table Read Protection bit
  5210                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  5211                           ;	Table Read Protection bit
  5212                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  5213   30000C                     	org	3145740
  5214   30000C  03                 	db	3
  5215                           
  5216                           ;Config register CONFIG7H @ 0x30000D
  5217                           ;	Boot Block Table Read Protection bit
  5218                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  5219   30000D                     	org	3145741
  5220   30000D  40                 	db	64
  5221                           tosu	equ	0xFFF
  5222                           tosh	equ	0xFFE
  5223                           tosl	equ	0xFFD
  5224                           stkptr	equ	0xFFC
  5225                           pclatu	equ	0xFFB
  5226                           pclath	equ	0xFFA
  5227                           pcl	equ	0xFF9
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           indf0	equ	0xFEF
  5235                           postinc0	equ	0xFEE
  5236                           postdec0	equ	0xFED
  5237                           preinc0	equ	0xFEC
  5238                           plusw0	equ	0xFEB
  5239                           fsr0h	equ	0xFEA
  5240                           fsr0l	equ	0xFE9
  5241                           wreg	equ	0xFE8
  5242                           indf1	equ	0xFE7
  5243                           postinc1	equ	0xFE6
  5244                           postdec1	equ	0xFE5
  5245                           preinc1	equ	0xFE4
  5246                           plusw1	equ	0xFE3
  5247                           fsr1h	equ	0xFE2
  5248                           fsr1l	equ	0xFE1
  5249                           bsr	equ	0xFE0
  5250                           indf2	equ	0xFDF
  5251                           postinc2	equ	0xFDE
  5252                           postdec2	equ	0xFDD
  5253                           preinc2	equ	0xFDC
  5254                           plusw2	equ	0xFDB
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8

Data Sizes:
    Strings     174
    Constant    480
    Data        137
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43     116
    BANK0           128      0     119
    BANK1           256      0      17

Pointer List with Targets:

    LCD_GraphicsDisplayString@str	PTR unsigned char  size(2) Largest target is 17
		 -> LCDStore0(BANK0[17]), LCDStore1(BANK0[17]), LCDStore2(BANK0[17]), LCDStore3(BANK0[17]), 
		 -> LCDStore4(BANK0[17]), LCDStore5(BANK0[17]), LCDStore6(BANK0[17]), LCDStore7(BANK1[17]), 
		 -> STR_1(CODE[9]), STR_10(CODE[17]), STR_11(CODE[17]), STR_12(CODE[17]), 
		 -> STR_13(CODE[15]), STR_14(CODE[12]), STR_2(CODE[9]), STR_3(CODE[9]), 
		 -> STR_4(CODE[9]), STR_5(CODE[9]), STR_6(CODE[17]), STR_7(CODE[17]), 
		 -> STR_8(CODE[17]), STR_9(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_draw
    _setup->_random
    _logic->_random
    _random->___awmod
    _rand->___lmul
    ___awmod->_rand
    _drawGraphics->_LCD_GraphicsDisplayString
    _clearAllChar->_placeChar
    _displaySpeed->_LCD_GraphicsDisplayString
    _LCD_GraphicsDisplayString->_LCD_WriteCommand
    _LCD_GraphicsDisplayString->_LCD_WriteData
    _createRandomSeed->_srand
    _LCD_Init->_LCD_WriteCommand
    _LCD_EnableGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteData
    _LCD_WriteData->_LCD_WriteByte
    _LCD_WriteCommand->_LCD_WriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10787
                                             41 COMRAM     2     2      0
                  _LCD_ClearGraphics
                 _LCD_EnableGraphics
          _LCD_GraphicsDisplayString
                           _LCD_Init
                   _createRandomSeed
                       _displaySpeed
                               _draw
                              _input
                              _logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     480
                                             28 COMRAM     1     1      0
                             _random
 ---------------------------------------------------------------------------------
 (1) _logic                                                8     8      0     754
                                             28 COMRAM     8     8      0
                             _random
 ---------------------------------------------------------------------------------
 (2) _random                                               4     3      1     480
                                             24 COMRAM     4     3      1
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2      94
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     298
                                             18 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _input                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _draw                                                 8     8      0    3586
                                             34 COMRAM     7     7      0
                       _clearAllChar
                       _drawGraphics
                          _placeChar
 ---------------------------------------------------------------------------------
 (2) _drawGraphics                                         0     0      0    2324
          _LCD_GraphicsDisplayString
 ---------------------------------------------------------------------------------
 (2) _clearAllChar                                         2     2      0     574
                                              3 COMRAM     2     2      0
                          _placeChar
 ---------------------------------------------------------------------------------
 (2) _placeChar                                            3     1      2     438
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _displaySpeed                                         0     0      0    2324
          _LCD_GraphicsDisplayString
 ---------------------------------------------------------------------------------
 (3) _LCD_GraphicsDisplayString                           30    28      2    2324
                                              4 COMRAM    30    28      2
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _createRandomSeed                                    10    10      0     117
                                              4 COMRAM    10    10      0
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                4     2      2      23
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     261
                                              4 COMRAM     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_EnableGraphics                                   1     1      0     261
                                              4 COMRAM     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_ClearGraphics                                    2     2      0     680
                                              4 COMRAM     2     2      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        1     1      0     261
                                              3 COMRAM     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteCommand                                     1     1      0     261
                                              3 COMRAM     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (5) _LCD_WriteByte                                        3     3      0     232
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_ClearGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_EnableGraphics
     _LCD_WriteCommand
   _LCD_GraphicsDisplayString
     _LCD_WriteCommand
     _LCD_WriteData
   _LCD_Init
     _LCD_WriteCommand
   _createRandomSeed
     _srand
   _displaySpeed
     _LCD_GraphicsDisplayString
   _draw
     _clearAllChar
       _placeChar
     _drawGraphics
       _LCD_GraphicsDisplayString
     _placeChar
   _input
   _logic
     _random
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
   _setup
     _random

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      17      6.6%
BITBANK0           128      0       0      0.0%
BANK0              128      0     119     93.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     43     116     91.3%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRlh         55      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     252      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Dec 05 20:57:01 2024

                   ??_LCD_EnableGraphics 004D                                       l32 0B44  
                                     l17 0F72                                       l70 1C9E  
                                     l90 1434                                       l93 0A70  
                                     l78 1D6E                                       l87 0C10  
                                     l96 0A64                            ?_displaySpeed 0049  
                                    l200 0ACE                                      l203 0DE2  
                                    l212 0E46                                      l205 0DFC  
                                    l301 1516                                      l206 0E46  
                                    l310 1636                                      l207 0E16  
                                    l225 123A                                      l241 0B06  
                                    l209 0E30                                      l313 1656  
                                    l234 1012                                      l237 0AD2  
                                    l309 1648                                      l271 1250  
                                    l327 0CD2                                      l184 10BA  
                                    l328 0CE2                                      l273 1252  
                                    l194 0ED4                                      l179 1022  
                                    l268 18A4                                      l197 0BA8  
                                    l293 14DE                                      l285 14F0  
                                    l286 148C                                      l279 130E  
                                    l287 14BE                                      l560 1168  
                                    l288 14AC                                      l992 0A9C  
                                    l995 0D4E                                      u410 0DD6  
                                    u411 0DD2                                      u420 0DF0  
                                    u421 0DEC                                      u430 0E0A  
                                    u431 0E06                                      u440 0E24  
                                    u441 0E20                                      u450 0E3E  
                                    u451 0E3A                                      u900 1924  
                                    u901 1920                                      u910 193A  
                                    u911 1936                                      u920 196A  
                                    u825 1342                                      u921 1966  
                                    u930 199A                                      u850 0C98  
                                    u835 1364                                      u931 1996  
                                    u851 0C94                                      u940 1ACA  
                                    u860 0CD2                                      u845 1388  
                                    u941 1AC6                                      u861 0CCE  
                                    u950 1BFC                                      u870 18D2  
                                    u951 1BF8                                      u880 18E8  
                                    u881 18E4                                      u970 1C6A  
                                    u890 190E                                      u971 1C66  
                                    u964 1C50                                      u965 1C4C  
                                    u877 18C8                                      u990 1C9E  
                                    u991 1C9A                                      u984 1C80  
                                    u985 1C7C                                      u897 1904  
                                    _key 0033                             ___awmod@sign 0060  
                                    wreg 0FE8                        ?_LCD_WriteCommand 0049  
                     ??_LCD_WriteCommand 004C                                     l2001 16D2  
                                   l2011 170A                                     l2003 16D6  
                                   l2021 176E                                     l2013 1714  
                                   l2005 16D8                                     l2031 17D6  
                                   l2023 1784                                     l2007 16F8  
                                   l2041 1828                                     l2033 17DA  
                                   l2025 1788                                     l2009 1702  
                                   l2017 171C                                     l2201 14DC  
                                   l2051 189C                                     l2043 1850  
                                   l2027 178E                                     l2035 17DC  
                                   l2019 1758                                     l2211 151A  
                                   l2203 14FE                                     l2045 1862  
                                   l2037 17F8                                     l2029 17B2  
                                   l2213 1536                                     l2205 1506  
                                   l2071 1282                                     l1351 0E0A  
                                   l2047 1878                                     l2039 1810  
                                   l2231 15FA                                     l2215 1552  
                                   l2223 15A2                                     l2207 150A  
                                   l2081 12D8                                     l2073 12AC  
                                   l2057 123C                                     l1353 0E24  
                                   l1345 0DC8                                     l2049 188A  
                                   l2233 1608                                     l2217 156C  
                                   l2209 150E                                     l2225 15D8  
                                   l2091 130A                                     l2083 12DA  
                                   l2075 12BA                                     l2059 124E  
                                   l1355 0E3E                                     l1347 0DD6  
                                   l2235 1616                                     l2227 15E8  
                                   l2219 1588                                     l2171 1436  
                                   l1701 1928                                     l2085 12EA  
                                   l2077 12BA                                     l2069 1258  
                                   l1349 0DF0                                     l2245 1732  
                                   l2237 1624                                     l2229 15EC  
                                   l2181 1448                                     l2173 143A  
                                   l1631 131C                                     l1711 196A  
                                   l1703 192A                                     l2087 12EC  
                                   l2079 12BC                                     l2191 1484  
                                   l2183 144C                                     l2175 143C  
                                   l1641 13A4                                     l1633 133A  
                                   l1721 1ABA                                     l1713 197A  
                                   l1705 193A                                     l1801 11C0  
                                   l2089 12FC                                     l2193 149A  
                                   l2185 145A                                     l2177 1440  
                                   l1651 13E0                                     l1643 13A6  
                                   l1635 135C                                     l1627 1312  
                                   l1723 1ACA                                     l1715 1986  
                                   l1707 194A                                     l1803 11D0  
                                   l1811 10BC                                     l2195 14AA  
                                   l2187 1468                                     l2179 1444  
                                   l1653 13FE                                     l1645 13A8  
                                   l1637 1380                                     l1629 1314  
                                   l1661 0A5C                                     l1901 0B1C  
                                   l1741 1C26                                     l1733 1BEC  
                                   l1725 1B5C                                     l1717 199A  
                                   l1709 1956                                     l1805 11E0  
                                   l1821 10E6                                     l1813 10BE  
                                   l2189 1476                                     l1655 1422  
                                   l1647 13B0                                     l1639 139C  
                                   l1663 0A5E                                     l1903 0B30  
                                   l1751 1C32                                     l1743 1C2E  
                                   l1735 1BFC                                     l1727 1BEA  
                                   l1719 1A2C                                     l1831 111E  
                                   l1823 10EE                                     l1815 10CC  
                                   l1671 0C8A                                     l2199 14CC  
                                   l1657 142A                                     l1649 13C8  
                                   l1665 0A68                                     l1913 0BAC  
                                   l1905 0B36                                     l1753 1C6A  
                                   l1745 1C30                                     l1737 1C0A  
                                   l1681 18AC                                     l1809 11F4  
                                   l1841 1158                                     l1833 1134  
                                   l1825 1100                                     l1817 10D4  
                                   l1673 0C98                                     l1659 142C  
                                   l1667 0A6A                                     l1931 0BFE  
                                   l1915 0BBC                                     l1907 0BAA  
                                   l1771 1D0E                                     l1763 1CA2  
                                   l1755 1C8C                                     l1739 1C16  
                                   l1691 18EC                                     l1683 18B2  
                                   l1843 1160                                     l1835 113C  
                                   l1827 1108                                     l1819 10D8  
                                   l1675 0CA8                                     l1851 0AA0  
                                   l1933 0C00                                     l1925 0BE0  
                                   l1917 0BCE                                     l1941 1038  
                                   l1781 1D5E                                     l1773 1D1A  
                                   l1765 1CDA                                     l1757 1C8E  
                                   l1693 18EE                                     l1685 18D4  
                                   l1837 1142                                     l1829 1110  
                                   l1677 0CB2                                     l1669 0C7A  
                                   l1927 0BEC                                     l1919 0BDE  
                                   l1847 0A84                                     l1951 1088  
                                   l1943 1050                                     l1935 1014  
                                   l1775 1D1C                                     l1767 1CFC  
                                   l1695 1910                                     l1687 18D8  
                                   l1679 18A8                                     l1791 1170  
                                   l1871 0AF4                                     l1855 0AD0  
                                   l1839 1148                                     l1783 0CE4  
                                   l1929 0BEE                                     l1881 0EFA  
                                   l1953 10A4                                     l1937 1020  
                                   l1777 1D2C                                     l1769 1CFE  
                                   l1697 1914                                     l1689 18E8  
                                   l1961 0E4C                                     l1793 1180  
                                   l1873 0AF6                                     l1865 0AD4  
                                   l1849 0B46                                     l1785 0D20  
                                   l1891 0F3C                                     l1883 0F00  
                                   l1875 0ED6                                     l1955 10B4  
                                   l1947 1058                                     l1939 1030  
                                   l1699 1924                                     l1779 1D2E  
                                   l1963 0E5E                                     l1795 1190  
                                   l1867 0AE2                                     l1893 0F50  
                                   l1885 0F14                                     l1877 0EDC  
                                   l1957 10B6                                     l1949 1074  
                                   l1965 0E70                                     l1973 0EA6  
                                   l1797 11A0                                     l1789 116C  
                                   l1869 0AE4                                     l1981 0F98  
                                   l1895 0F5E                                     l1887 0F22  
                                   l1879 0EEA                                     l1967 0E82  
                                   l1959 0E48                                     l1799 11B0  
                                   l1991 0FFA                                     l1983 0FAE  
                                   l1975 0F74                                     l1897 0B08  
                                   l1889 0F36                                     l1969 0E94  
                                   l1993 165A                                     l1985 0FC0  
                                   l1977 0F76                                     l1899 0B0E  
                                   l1995 1672                                     l1987 0FD6  
                                   l1979 0F86                                     l1997 167A  
                                   l1989 0FE8                                     l1999 16CE  
                                   STR_1 1FD2                                     STR_2 1FDB  
                                   STR_3 1FE4                                     STR_4 1FED  
                                   STR_5 1FF6                                     STR_6 1FA6  
                                   STR_7 1F73                                     STR_8 1F51  
                                   STR_9 1F84                                     u1010 1CDA  
                                   u1011 1CD6                                     u1004 1CC0  
                                   u1100 10E6                                     u1005 1CBC  
                                   u1101 10E2                                     u1030 1D0E  
                                   u1110 1100                                     u1031 1D0A  
                                   u1111 10FC                                     u1200 1030  
                                   u1040 1D2C                                     u1024 1CF0  
                                   u1120 111E                                     u1201 102C  
                                   u1041 1D28                                     u1025 1CEC  
                                   u1121 111A                                     u1210 10A4  
                                   u1050 1D4E                                     u1130 1134  
                                   u1211 10A0                                     u1131 1130  
                                   u1060 1D5E                                     u1140 1158  
                                   u1300 1810                                     u1220 0FD2  
                                   u1061 1D5A                                     u1141 1154  
                                   u1301 180C                                     u1221 0FCE  
                                   u1070 1D6E                                     u1150 0AF4  
                                   u1310 1828                                     u1230 0FFA  
                                   u1071 1D6A                                     u1151 0AF0  
                                   u1311 1824                                     u1231 0FF6  
                                   u1160 0B06                                     u1080 0D40  
                                   u1320 1874                                     u1240 16F4  
                                   u1057 1D44                                     u1161 0B02  
                                   u1321 1870                                     u1241 16F0  
                                   u1170 0BBC                                     u1090 10CC  
                                   u1330 189C                                     u1250 176E  
                                   u1171 0BB8                                     u1091 10C8  
                                   u1331 1898                                     u1251 176A  
                                   u1180 0BFE                                     u1340 1282  
                                   u1260 1784                                     u1500 14BA  
                                   u1181 0BFA                                     u1341 127E  
                                   u1085 0D36                                     u1261 1780  
                                   u1501 14B6                                     u1190 0C10  
                                   u1350 12AC                                     u1270 17B2  
                                   u1510 14CC                                     u1191 0C0C  
                                   u1351 12A8                                     u1271 17AE  
                                   u1511 14C8                                     u1360 12D8  
                                   u1280 17D6                                     u1520 14DC  
                                   u1361 12D4                                     u1281 17D2  
                                   u1521 14D8                                     u1370 12EA  
                                   u1290 17F8                                     u1530 14EC  
                                   u1371 12E6                                     u1291 17F4  
                                   u1531 14E8                                     u1380 12FC  
                                   u1540 14FE                                     u1381 12F8  
                                   u1541 14FA                                     u1550 15E8  
                                   u1551 15E4                                     u1607 155C  
                                   u1560 1644                                     u1480 149A  
                                   u1561 1640                                     u1617 1576  
                                   u1481 1496                                     u1570 1656  
                                   u1490 14AA                                     u1707 0F56  
                                   u1571 1652                                     u1627 1592  
                                   u1491 14A6                                     u1717 0F6A  
                                   u1637 107A                                     u1727 0B14  
                                   u1647 0EE2                                     u1737 0B28  
                                   u1657 0EF2                                     u1747 0B3C  
                                   u1667 0F06                                     u1587 1524  
                                   u1757 1316                                     u1677 0F1A  
                                   u1597 1540                                     u1767 139E  
                                   u1687 0F2E                                     u1777 13AA  
                                   u1697 0F42                                     u1787 1424  
                                   u1797 142E                           ??_drawGraphics 006B  
                                   _game 0042                                     _draw 123C  
                      random@lower_bound 0064                                     _main 1436  
                                   _rand 0CE4                                     _seed 0045  
                                   fsr0h 0FEA                                     indf0 0FEF  
                                   fsr2h 0FDA                                     fsr0l 0FE9  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodh 0FF4  
                                   prodl 0FF3                                     start 0000  
                   __end_of_clearAllChar 0B08                            _LCD_WriteData 0A66  
                          _LCD_WriteByte 1310                             ___param_bank 0000  
                       __end_of_LCD_Init 0F74                           ??_displaySpeed 006B  
                LCD_WriteCommand@command 004C                                    ?_draw 0049  
                                  ?_main 0049                                    ?_rand 0055  
                                  STR_10 1F95                                    STR_11 1F62  
                                  STR_12 1F95                                    STR_13 1FB7  
                                  STR_14 1FC6                          __end_of___awmod 116A  
         LCD_GraphicsDisplayString@dataA 0062           LCD_GraphicsDisplayString@dataB 0063  
         LCD_GraphicsDisplayString@count 0061                                    _TMR0H 0FD7  
                                  _TMR0L 0FD6                 __end_of_createRandomSeed 10BC  
                                  _TRISA 0F92                                    _TRISB 0F93  
                    ___lmul@multiplicand 004D                                    _logic 165A  
                                  _input 0DC8                                    _score 0035  
                                  _speed 0044                                    _setup 0F74  
                                  _srand 0A84                                    draw@i 0070  
                                  draw@j 0071                                    draw@k 006F  
                                  tablat 0FF5                                    status 0FD8  
            ??_LCD_GraphicsDisplayString 004F                           ?_LCD_WriteData 0049  
                         ?_LCD_WriteByte 0049                          __initialization 0C12  
                           __end_of_draw 1310                             __end_of_main 165A  
                           __end_of_rand 0D50                                   ??_draw 006B  
                                 ??_main 0072                                   ??_rand 0057  
                          __activetblptr 0002                                   _ADCON0 0FC2  
                                 _ADCON1 0FC1                                   _ADCON2 0FC0  
                                 ?_logic 0049                                   _ADRESH 0FC4  
                                 _ADRESL 0FC3                                   ?_input 0049  
                                 ?_setup 0049                                   ?_srand 0049  
        LCD_GraphicsDisplayString@colInd 0068                                   _OSCCON 0FD3  
                      random@upper_bound 0061                                   _Alpha1 1D71  
                                 _Alpha2 1E6B  LCD_GraphicsDisplayString@shouldContinue 0056  
                                 ___lmul 0C7A                                ??___awmod 005F  
                                 _fruitX 0039                                   _fruitY 0037  
                                 clear_0 0C6A                                   _random 0A9E  
                        ___awmod@divisor 005D                     __end_of_drawGraphics 0BAA  
                                 isa$std 0001                          ___awmod@counter 005F  
              _LCD_GraphicsDisplayString 18A6                                   logic@i 006C  
                           __pdataCOMRAM 0074                             __mediumconst 1D70  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                                   srand@s 0049  
                            logic@prev2X 0067                              logic@prev2Y 0068  
                             __accesstop 0080                  __end_of__initialization 0C70  
                              ?_LCD_Init 0049                     __end_of_displaySpeed 0ED6  
                        ??_LCD_WriteData 004C                          ??_LCD_WriteByte 0049  
                          ___rparam_used 0001                           __pcstackCOMRAM 0049  
                           __pidataBANK0 0D51                             __pidataBANK1 0A73  
                          __end_of_logic 18A6                            __end_of_input 0E48  
                          __end_of_setup 1014                            __end_of_srand 0A9E  
                           _clearAllChar 0AD0                                  ??_logic 0065  
                                ??_input 0049                                  ??_setup 0065  
                                ??_srand 004B                               ??_LCD_Init 004D  
                      _LCD_ClearGraphics 0BAA                                  ?___lmul 0049  
                     ?_LCD_ClearGraphics 0049                           ___lmul@product 0051  
                                ?_random 0061                      ??_LCD_ClearGraphics 004D  
                      ?_createRandomSeed 0049                       ??_createRandomSeed 004D  
           LCD_GraphicsDisplayString@row 0067             LCD_GraphicsDisplayString@str 004D  
              __end_of_LCD_ClearGraphics 0C12                                  __Hparam 0000  
                                __Lparam 0000                        LCD_WriteData@data 004C  
                                ___awmod 10BC                                  __pcinit 0C12  
                                __ramtop 0200                                  __ptext0 1436  
                                __ptext1 0F74                                  __ptext2 165A  
                                __ptext3 0A9E                                  __ptext4 0CE4  
                                __ptext5 0C7A                                  __ptext6 10BC  
                                __ptext7 0DC8                                  __ptext8 123C  
                                __ptext9 0B46                         ___awmod@dividend 005B  
                      __end_of_placeChar 123C            _LCD_GraphicsDisplayString$113 0052  
          _LCD_GraphicsDisplayString$115 0054                                _LCDStore0 00E6  
                              _LCDStore1 00D5                                _LCDStore2 00C4  
                              _LCDStore3 00B3                                _LCDStore4 00A2  
                              _LCDStore5 0091                                _LCDStore6 0080  
                              _LCDStore7 0100                     end_of_initialization 0C70  
                           _drawGraphics 0B46                            clearAllChar@i 004C  
                          clearAllChar@j 004D                            __Lmediumconst 1D70  
                             _snakeTailX 0001                               _snakeTailY 0023  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                              _PORTAbits 0F80                             _displaySpeed 0E48  
              createRandomSeed@adc_value 0051        LCD_GraphicsDisplayString@colListA 0057  
      LCD_GraphicsDisplayString@colListB 005C                         _LCD_WriteCommand 0A5A  
                         __end_of_Alpha1 1E6B                           __end_of_Alpha2 1F51  
                         __end_of___lmul 0CE4                            __pidataCOMRAM 0D50  
            createRandomSeed@timer_value 0053                           __end_of_random 0AD0  
                    start_initialization 0C12                    __end_of_LCD_WriteData 0A72  
                  __end_of_LCD_WriteByte 1436                                 ??___lmul 0051  
                   LCD_WriteByte@command 004B                              __pdataBANK0 0080  
                            __pdataBANK1 0100                               logic@i_395 006B  
                               ??_random 0062                               logic@prevX 0069  
                             logic@prevY 006A                               placeChar@c 004A  
                             placeChar@x 004B                               placeChar@y 0049  
                            __pbssCOMRAM 0001               __end_of_LCD_EnableGraphics 0B46  
                          __pmediumconst 1D70                                 ?___awmod 005B  
                              _placeChar 116A                            _snakeHeadXPos 003F  
                          _snakeHeadYPos 003D                                 _LCD_Init 0ED6  
                               _LATBbits 0F8A            LCD_GraphicsDisplayString@indA 0069  
          LCD_GraphicsDisplayString@indB 006A            LCD_GraphicsDisplayString@line 0064  
                             _ADCON0bits 0FC2                        createRandomSeed@i 0055  
               __end_of_LCD_WriteCommand 0A66                        ___lmul@multiplier 0049  
                              copy_data0 0C26                                copy_data1 0C46  
                             ?_placeChar 0049                                 __Hrparam 0000  
                               __Lrparam 0000                            ?_clearAllChar 0049  
                               _gameover 0041                                 __ptext10 0AD0  
                               __ptext11 116A                                 __ptext20 0A5A  
                               __ptext12 0E48                                 __ptext21 1310  
                               __ptext13 18A6                                 __ptext14 1014  
                               __ptext15 0A84                                 __ptext16 0ED6  
                               __ptext17 0B08                                 __ptext18 0BAA  
                               __ptext19 0A66                                 _mainMenu 0074  
             ?_LCD_GraphicsDisplayString 004D                         _createRandomSeed 1014  
                           _snakeTailLen 003B                                 isa$xinst 0000  
                         ??_clearAllChar 004C                              _looseScreen 0043  
                            ??_placeChar 004B        __end_of_LCD_GraphicsDisplayString 1D70  
                     _LCD_EnableGraphics 0B08         LCD_GraphicsDisplayString@letterA 0065  
       LCD_GraphicsDisplayString@letterB 0066                      ?_LCD_EnableGraphics 0049  
                     LCD_ClearGraphics@x 004D                       LCD_ClearGraphics@y 004E  
                          ?_drawGraphics 0049  
